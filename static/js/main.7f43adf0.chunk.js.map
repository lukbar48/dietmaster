{"version":3,"sources":["mocks/db.ts","assets/styles/GlobalStyle.ts","pages/Root.styles.ts","components/atoms/Button/Button.styles.ts","components/atoms/Button/Button.tsx","store/store.tsx","components/organisms/MainBottomBar.tsx","contexts/PatientContext.tsx","components/molecules/MainPatientInfo.styles.ts","components/molecules/MainPatientInfo.tsx","components/atoms/InputMain/InputMain.tsx","hooks/useAuth.tsx","components/organisms/MainTopBar.tsx","pages/Main.styles.ts","pages/Main.tsx","components/atoms/ManageNavButton/ManageNavButton.styles.ts","components/atoms/ManageNavButton/ManageNavButton.tsx","components/organisms/ManageNavBar.tsx","components/organisms/ManageTop.styles.ts","components/organisms/ManageTop.tsx","pages/About.styles.ts","components/atoms/AboutBottomBarBox/AboutBottomBarBox.tsx","components/organisms/AboutBottomBar.styles.ts","hooks/useCalculate.tsx","components/organisms/AboutBottomBar.tsx","components/molecules/SexButton.styles.ts","components/molecules/SexButton.tsx","components/organisms/AboutForm.styles.ts","components/organisms/AboutForm.tsx","pages/About.tsx","components/organisms/DietForm.styles.ts","components/organisms/DietForm.tsx","pages/Diet.tsx","assets/images/logo.png","pages/Login.styles.ts","components/molecules/LoginInput.styles.ts","components/molecules/LoginInput.tsx","pages/Login.tsx","pages/Root.tsx","assets/styles/theme.ts","contexts/AppProviders.tsx","index.tsx","mocks/handlers/patients.js","mocks/handlers/auth.js","mocks/helpers.ts","mocks/handlers/index.js","mocks/browser.js"],"names":["sex","note","getRandomValue","array","index","db","factory","patient","id","primaryKey","faker","datatype","number","min","max","name","fake","surname","age","email","telephone","bodymass","height","notes","activity","precision","dietitian","login","password","GlobalStyle","createGlobalStyle","Wrapper","styled","div","StyledButton","button","marginLeft","padding","backgroundColor","colors","theme","blue3","borderRadius","fontSize","fontSizes","l","white","Button","props","children","patientsSlice","createSlice","initialState","reducers","getPatientsList","state","action","i","payload","length","push","addPatient","findPatient","findFirst","where","equals","Number","axios","put","catch","err","console","log","post","filter","addPatientState","unshift","removePatient","delete","data","sortPatientsList","sort","a","b","actions","store","configureStore","reducer","patients","grey4","MainBottomBar","useSelector","dispatch","useDispatch","className","onClick","getAll","initialPatient","PatientContext","createContext","managePatient","setPatient","searchResults","searchTerm","setSearchTerm","PatientProvider","useState","setSearchResults","patientsList","useEffect","get","then","Provider","value","li","grey1","black","MainPatientInfo","useContext","navigate","useNavigate","handleManageClick","handleDeleteClick","Input","input","InputMain","InitialUserValues","token","AuthContext","signIn","signOut","user","AuthProvider","setUser","localStorage","getItem","headers","authorization","response","setItem","removeItem","useAuth","lightBlack","MainTopBar","placeholder","onChange","e","currentTarget","toLowerCase","Date","getTime","ul","Main","map","NavLink","color","ManageNavButton","to","ManageNavBar","ManageTop","grey3","AboutBottomBarBox","CalculationsWrapper","Calc","useCalculate","calculateBMI","Math","pow","toFixed","toString","BMIdescription","BMI","calculateRisk","idealWeight","idealWeightMin","idealWeightMax","calculateCPM","AboutBottomBar","SexButton","type","form","TextArea","Slider","AboutForm","useParams","nameValue","useRef","surnameValue","ageValue","telephoneValue","emailValue","bodymassValue","heightValue","notesValue","activityValue","current","target","htmlFor","ref","step","About","Sliders","SliderDesc","SliderWrapper","SliderInput","red","yellow","CPMWrapper","ShowCPM","xm","MicronutrientsWrapper","MicronutrientsColumn","Nutrient","DietForm","establishCPM","setEstablishCPM","protein","setProtein","fat","setFat","carbs","setCarbs","handleCPMInputChange","Diet","Form","Image","img","Label","label","LoginInput","React","forwardRef","Login","useForm","register","handleSubmit","formState","errors","src","logo","onSubmit","required","Root","basename","process","path","element","grey2","blue1","blue2","blue4","xxl","xl","m","s","AppProviders","window","location","pathname","require","worker","start","serviceWorker","url","ReactDOM","render","StrictMode","document","getElementById","main","rest","req","res","ctx","status","json","searchInList","includes","body","params","matchingPatient","create","updatedPatient","update","removedPatient","sanitizeUser","auth","btoa","error","replace","authenticateRequest","handlers","setupWorker"],"mappings":"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","file":"static/js/main.7f43adf0.chunk.js","sourcesContent":["import { factory, primaryKey } from '@mswjs/data';\r\nimport faker from 'faker';\r\n\r\nconst sex = ['Male', 'Female'];\r\nconst note = ['Too fat', 'Too skinny'];\r\nconst getRandomValue = (array: any, index: any) => array[index];\r\n\r\nexport const db = factory({\r\n  patient: {\r\n    id: primaryKey(() => faker.datatype.number({ min: 111655094926240, max: 163655094926240 })),\r\n    name: () => faker.fake('{{name.firstName}}'),\r\n    surname: (): string => faker.fake('{{name.lastName}}'),\r\n    age: (): string => `${faker.datatype.number({ min: 20, max: 70 })}`,\r\n    sex: (): string => getRandomValue(sex, faker.datatype.number({ min: 0, max: 1 })),\r\n    email: (): string=> faker.fake('{{internet.email}}'),\r\n    telephone: (): string => `${faker.datatype.number({ min: 100000000, max: 999999999 })}`,\r\n    bodymass: (): string => `${faker.datatype.number({ min: 50, max: 110 })}`,\r\n    height: (): string => `${faker.datatype.number({ min: 160, max: 200 })}`,\r\n    notes: (): string => getRandomValue(note, faker.datatype.number({ min: 0, max: 1 })),\r\n    activity: (): string => `${faker.datatype.number({ min: 1.2, max: 2.4, precision: 0.1 })}`,\r\n  },\r\n  dietitian: {\r\n    id: primaryKey(() => '1'),\r\n    name: () => 'Jacek Placek',\r\n    login: () => 'jack123',\r\n    password: () => 'Pass123',\r\n  },\r\n});\r\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n  }\n  \n  *, *::after, *::before {\n    box-sizing: inherit;\n    margin: 0;\n    padding: 0;\n  }\n  \n  body {\n    font-family: 'Montserrat', sans-serif;\n    margin: 0;\n    padding: 0;\n    overflow-x: hidden;\n  }\n  \n  a, button {\n    font-family: 'Montserrat', sans-serif;\n  }\n`;\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n`;","import { IButton } from 'interfaces';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button<IButton>`\r\n  cursor: pointer;\r\n  margin-left: ${({ marginLeft }) => (marginLeft ? marginLeft : 'none')};\r\n  padding: ${({ padding }) => (padding ? padding : '8px 20px')};\r\n  background-color: ${({ backgroundColor, theme: { colors } }) => (backgroundColor ? backgroundColor : colors.blue3)};\r\n  border-radius: ${({ borderRadius }) => (borderRadius ? borderRadius : '6px')};\r\n  border: none;\r\n  font-size: ${({ fontSize, theme: { fontSizes } }) => (fontSize ? fontSize : fontSizes.l)};\r\n  color: ${({ theme }) => theme.colors.white};\r\n\r\n  &:hover {\r\n    box-shadow: inset 0 0 100px 100px rgba(255, 255, 255, 0.3);\r\n  }\r\n`;\r\n","import { IButton } from 'interfaces';\r\nimport { StyledButton } from './Button.styles';\r\n\r\nconst Button = ({ ...props }: IButton) => {\r\n  return <StyledButton {...props}>{props.children}</StyledButton>;\r\n};\r\n\r\nexport default Button;\r\n","import { createSlice, configureStore } from '@reduxjs/toolkit';\r\nimport { db } from 'mocks/db';\r\nimport axios from 'axios';\r\n\r\nconst initialPatient = {\r\n  id: 0,\r\n  name: '',\r\n  surname: '',\r\n  age: '',\r\n  sex: 'Male',\r\n  email: '',\r\n  telephone: '',\r\n  bodymass: '',\r\n  height: '',\r\n  notes: '',\r\n  activity: '1.2',\r\n};\r\n\r\nconst initialState: typeof initialPatient[] = [];\r\n\r\nconst patientsSlice = createSlice({\r\n  name: 'patients',\r\n  initialState,\r\n  reducers: {\r\n    getPatientsList(state, action) {\r\n      for (let i = 0; i < action.payload.length; i++) {\r\n        state.push(action.payload[i]);\r\n      }\r\n    },\r\n    addPatient(state, action) {\r\n      const findPatient = db.patient.findFirst({\r\n        where: {\r\n          id: {\r\n            equals: Number(action.payload.id),\r\n          },\r\n        },\r\n      });\r\n      if (!findPatient) {\r\n        axios\r\n          .post(`/dietmaster/add`, action.payload)\r\n          .catch((err) => console.log(err));\r\n      } else if (findPatient) {\r\n        axios\r\n          .put(`/dietmaster/add`, action.payload)\r\n          .catch((err) => console.log(err));\r\n        }\r\n        return state.filter((patient) => patient.id !== action.payload.id)\r\n    },\r\n    addPatientState(state,action) {\r\n      state.unshift(action.payload)\r\n    },\r\n    removePatient(state, action) {\r\n      const findPatient = db.patient.findFirst({\r\n        where: {\r\n          id: {\r\n            equals: Number(action.payload),\r\n          },\r\n        },\r\n      });\r\n      if (findPatient) {\r\n        axios\r\n          .delete('/dietmaster', { data: findPatient })\r\n          .catch((err) => console.log(err));\r\n        }\r\n        return state.filter((patient) => patient.id !== action.payload)\r\n    },\r\n    sortPatientsList(state, action) {\r\n      // eslint-disable-next-line array-callback-return\r\n      return state.sort((a, b): any => {\r\n        if (action.payload === 'female') {\r\n          return a.sex > b.sex ? 1 : b.sex > a.sex ? -1 : 0;\r\n        } else if (action.payload === 'male') {\r\n          return a.sex > b.sex ? -1 : b.sex > a.sex ? 1 : 0;\r\n        } else if (action.payload === 'off') {\r\n          return a.id > b.id ? -1 : b.id > a.id ? 1 : 0;\r\n        } else if (action.payload === 'a-z') {\r\n          return a.surname > b.surname ? 1 : b.surname > a.surname ? -1 : 0;\r\n        } else if (action.payload === 'z-a') {\r\n          return a.surname > b.surname ? -1 : b.surname > a.surname ? 1 : 0;\r\n        }\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addPatient, addPatientState, removePatient, getPatientsList, sortPatientsList } = patientsSlice.actions;\r\nexport const selectPatients = (state: any) => state.patients;\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    patients: patientsSlice.reducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n","import Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { sortPatientsList } from 'store/store';\r\nimport { db } from 'mocks/db';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  width: 100vw;\r\n  height: 60px;\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  padding: 0 20px 2px;\r\n\r\n  p {\r\n    font-size: 0.7rem;\r\n    color: ${({ theme }) => theme.colors.white};\r\n  }\r\n\r\n  .filterSex {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .buttons {\r\n      display: flex;\r\n      gap: 2px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MainBottomBar = () => {\r\n  const patients = useSelector((state: any) => state.patients);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"filterSex\">\r\n        <p>Sort</p>\r\n        <div className=\"buttons\">\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(sortPatientsList('off'));\r\n              console.log('state ', patients);\r\n              console.log('api', db.patient.getAll());\r\n            }}\r\n            padding=\"6px 20px\"\r\n            borderRadius=\"6px 0 0 6px\"\r\n          >\r\n            off\r\n          </Button>\r\n          <Button onClick={() => dispatch(sortPatientsList('female'))} padding=\"6px 20px\" borderRadius=\"0\">\r\n            female\r\n          </Button>\r\n          <Button onClick={() => dispatch(sortPatientsList('male'))} padding=\"6px 20px\" borderRadius=\"0\">\r\n            male\r\n          </Button>\r\n          <Button onClick={() => dispatch(sortPatientsList('a-z'))} padding=\"6px 20px\" borderRadius=\"0\">\r\n            a-z\r\n          </Button>\r\n          <Button onClick={() => dispatch(sortPatientsList('z-a'))} padding=\"6px 20px\" borderRadius=\"0 6px 6px 0\">\r\n            z-a\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainBottomBar;\r\n","import { createContext, useEffect, useState, ReactNode } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPatientsList } from 'store/store';\r\nimport { InitialPatientType } from 'interfaces';\r\n\r\nexport const initialPatient = {\r\n  id: 0,\r\n  name: '',\r\n  surname: '',\r\n  age: '',\r\n  sex: 'Male',\r\n  email: '',\r\n  telephone: '',\r\n  bodymass: '',\r\n  height: '',\r\n  notes: '',\r\n  activity: '1.2'\r\n}\r\n\r\nexport type PatientContextType = {\r\n  managePatient: (id: number) => void;\r\n  setPatient: (obj: InitialPatientType) => void;\r\n  searchResults: InitialPatientType[];\r\n  patient: InitialPatientType;\r\n  searchTerm: string;\r\n  setSearchTerm: (term: string) => void;\r\n};\r\n\r\nexport const PatientContext = createContext<PatientContextType>({\r\n  managePatient() {},\r\n  setPatient() {},\r\n  searchResults: [initialPatient],\r\n  searchTerm: '',\r\n  setSearchTerm() {},\r\n  patient: initialPatient,\r\n});\r\n\r\nconst PatientProvider = ({ children }: { children: ReactNode }) => {\r\n  const [patient, setPatient] = useState<InitialPatientType>(initialPatient);\r\n  const [searchResults, setSearchResults] = useState<InitialPatientType[]>([] as InitialPatientType[]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const patientsList = useSelector((state: any) => state.patients);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('/dietmaster')\r\n      .then(({ data }) => {\r\n        dispatch(getPatientsList(data));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post('/dietmaster', searchTerm)\r\n      .then(({ data }) => {\r\n        setSearchResults(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [searchTerm]);\r\n\r\n  const managePatient = (id: number) => {\r\n    const findPatient = patientsList.filter((patient: any) => patient.id === id);\r\n    setPatient(findPatient[0]);\r\n  };\r\n\r\n  return (\r\n    <PatientContext.Provider\r\n      value={{\r\n        managePatient,\r\n        patient,\r\n        setPatient,\r\n        searchResults,\r\n        searchTerm,\r\n        setSearchTerm,\r\n      }}\r\n    >\r\n      {children}\r\n    </PatientContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PatientProvider;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.li`\r\n  display: grid;\r\n  grid-template-columns: 5% 20% 20% 10% 15% 30%;\r\n  align-items: center;\r\n  gap: 2px;\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n  padding: 5px;\r\n  color: ${({ theme }) => theme.colors.black};\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  .buttons {\r\n    grid-column: 6/7;\r\n    display: flex;\r\n    align-content: center;\r\n    justify-content: space-evenly;\r\n    height: 100%;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Wrapper } from './MainPatientInfo.styles';\r\nimport { removePatient } from 'store/store';\r\nimport { IPatientInfo } from 'interfaces';\r\n\r\n\r\nconst MainPatientInfo = ({ name, surname, age, id, index }: IPatientInfo) => {\r\n  const { managePatient } = useContext(PatientContext);\r\n  const navigate = useNavigate();\r\n\r\n  const patients = useSelector((state: any) => state.patients);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleManageClick = (id: number) => {\r\n    managePatient(id);\r\n    navigate(`/patient/about/${id}`);\r\n  };\r\n  const handleDeleteClick = (id: number) => {\r\n    dispatch(removePatient(id))\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>{index + 1}</div>\r\n      <div>{name}</div>\r\n      <div>{surname}</div>\r\n      <div>{age}</div>\r\n      <div className=\"buttons\">\r\n        <Button onClick={() => handleManageClick(id)}>Manage</Button>\r\n        <Button backgroundColor=\"#FF4343\" onClick={() => handleDeleteClick(id)}>\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainPatientInfo;\r\n","import { IInput } from 'interfaces';\r\nimport styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n  padding: 8px;\r\n  border: 1px solid ${({ theme }) => theme.colors.white};\r\n  border-radius: 6px;\r\n  font-size: ${({ theme }) => theme.fontSizes.l};\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  color: ${({ theme }) => theme.colors.white};\r\n`;\r\n\r\nconst InputMain = ({...props}: IInput) => {\r\n  return <Input {...props}></Input>;\r\n};\r\n\r\nexport default InputMain;\r\n","import axios from 'axios';\r\nimport React, { createContext, ReactNode, useEffect, useState, useContext } from 'react';\r\n\r\nconst InitialUserValues = { id: '', login: '', name: '', token: '' };\r\n\r\nexport type PatientContextType = {\r\n  signIn: ({ login, password }: { login: string; password: string }) => any;\r\n  signOut: () => void;\r\n  user: typeof InitialUserValues;\r\n};\r\n\r\nconst AuthContext = createContext<PatientContextType>({\r\n  signIn() {},\r\n  signOut() {},\r\n  user: InitialUserValues,\r\n});\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }): any => {\r\n  const [user, setUser] = useState(InitialUserValues);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      (async () => {\r\n        try {\r\n          const response = await axios.get('/me', {\r\n            headers: {\r\n              authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          setUser(response.data[0]);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      })();\r\n    }\r\n  }, []);\r\n\r\n  const signIn = async ({ login, password }: { login: string; password: string }) => {\r\n    try {\r\n      const response = await axios.post('/dietmaster/login', { login, password });\r\n      setUser(response.data);\r\n      localStorage.setItem('token', response.data.token);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const signOut = () => {\r\n    setUser({ id: '', login: '', name: '', token: '' });\r\n    localStorage.removeItem('token');\r\n  };\r\n  return <AuthContext.Provider value={{ user, signIn, signOut }}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return auth;\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport InputMain from 'components/atoms/InputMain/InputMain';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { useAuth } from 'hooks/useAuth';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  width: 100vw;\r\n  height: 60px;\r\n  padding: 10px;\r\n  background-color: ${({ theme }) => theme.colors.lightBlack};\r\n\r\n  h2 {\r\n    color: ${({ theme }) => theme.colors.white};\r\n    font-weight: 400;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst MainTopBar = () => {\r\n  const { setPatient, patient, searchTerm, setSearchTerm } = useContext(PatientContext);\r\n  const navigate = useNavigate();\r\n\r\n  const { signOut } = useAuth();\r\n\r\n  const handleClickNewPatient = () => {\r\n    setPatient({\r\n      id: new Date().getTime(),\r\n      name: '',\r\n      surname: '',\r\n      age: '',\r\n      sex: 'Male',\r\n      email: '',\r\n      telephone: '',\r\n      bodymass: '',\r\n      height: '',\r\n      notes: '',\r\n      activity: '1.2',\r\n    });\r\n    navigate(`/patient/about/${patient.id}`);\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <h2>Patients record</h2>\r\n      </div>\r\n      <InputMain placeholder=\"Search patient\" value={searchTerm} onChange={handleChange} />\r\n      <Button onClick={handleClickNewPatient}>New patient</Button>\r\n      <Button onClick={signOut} backgroundColor=\"#505050\" marginLeft=\"auto\">\r\n        Log Out\r\n      </Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainTopBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2px;\r\n  padding: 2px;\r\n  width: 100%;\r\n  margin: 60px 0;\r\n  list-style: none;\r\n  color: ${({ theme }) => theme.colors.black};\r\n`;\r\n","import MainBottomBar from 'components/organisms/MainBottomBar';\r\nimport MainPatientInfo from 'components/molecules/MainPatientInfo';\r\nimport MainTopBar from 'components/organisms/MainTopBar';\r\nimport React, { useContext } from 'react';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { Wrapper } from './Main.styles';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Main = () => {\r\n  const { searchResults, searchTerm } = useContext(PatientContext);\r\n  const patients = useSelector((state: any) => state.patients);\r\n\r\n  return (\r\n    <>\r\n      <MainTopBar />\r\n      <MainBottomBar />\r\n      <Wrapper>\r\n        {searchTerm &&\r\n          searchResults.map((patient, index) => {\r\n            return <MainPatientInfo index={index} key={patient.id} {...patient} />;\r\n          })}\r\n        {!searchTerm &&\r\n          patients.map((patient: any, index: any) => {\r\n            return <MainPatientInfo index={index} key={patient.id} {...patient} />;\r\n          })}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledButton = styled(NavLink)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 8px;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  background-color: ${({ color, theme: { colors } }) => (color ? color : colors.grey4)};\r\n  border: none;\r\n  font-size: ${({ theme }) => theme.fontSizes.l};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    box-shadow: inset 0 0 100px 100px rgba(255, 255, 255, 0.3);\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${({ theme }) => theme.colors.blue3};\r\n  }\r\n`;\r\n","import { IManageNavButton } from 'interfaces';\r\nimport { StyledButton } from './ManageNavButton.styles';\r\n\r\nconst ManageNavButton = ({ children, to }: IManageNavButton) => {\r\n  return <StyledButton to={to}>{children}</StyledButton>;\r\n};\r\n\r\nexport default ManageNavButton;\r\n","import ManageNavButton from 'components/atoms/ManageNavButton/ManageNavButton';\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BsFillPersonFill, BsExclamationDiamond } from \"react-icons/bs\";\r\nimport { ImSpoonKnife } from \"react-icons/im\";\r\nimport { BiTestTube } from \"react-icons/bi\";\r\nimport { AiTwotoneCalendar } from \"react-icons/ai\";\r\nimport { PatientContext } from 'contexts/PatientContext';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  width: 100%;\r\n  height: 35px;\r\n`;\r\n\r\nconst ManageNavBar = () => {\r\n  const { patient } = useContext(PatientContext);\r\n\r\n  return <Wrapper>\r\n    <ManageNavButton to={`/patient/about/${patient.id}`}><BsFillPersonFill />About</ManageNavButton>\r\n    <ManageNavButton to={`/patient/diet/${patient.id}`}><ImSpoonKnife />Diet</ManageNavButton>\r\n    <ManageNavButton to={`/patient/allergens/${patient.id}`}><BsExclamationDiamond />Allergens</ManageNavButton>\r\n    <ManageNavButton to={`/patient/blood-tests/${patient.id}`}><BiTestTube />Blood tests</ManageNavButton>\r\n    <ManageNavButton to={`/patient/appointments/${patient.id}`}><AiTwotoneCalendar />Appointments</ManageNavButton>\r\n  </Wrapper>;\r\n};\r\n\r\nexport default ManageNavBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  height: 40px;\r\n  padding: 0 30px;\r\n  background-color: ${({ theme }) => theme.colors.blue3};\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport { initialPatient, PatientContext } from 'contexts/PatientContext';\r\n// import { useParams } from 'react-router';\r\nimport { Wrapper } from './ManageTop.styles';\r\nimport { addPatient, addPatientState } from 'store/store';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nconst ManageTop = () => {\r\n  const navigate = useNavigate();\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  // const patients = useSelector((state: any) => state.patients);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSaveClick = () => {\r\n    dispatch(addPatient(patient));\r\n    dispatch(addPatientState(patient));\r\n    setPatient(initialPatient);\r\n    navigate('/');\r\n  };\r\n\r\n  const handleExitClick = () => {\r\n    navigate('/');\r\n    setPatient(initialPatient);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Button onClick={handleSaveClick} backgroundColor=\"#00A3D9\" padding=\"6px 18px\" fontSize=\"12px\">\r\n        Save changes\r\n      </Button>\r\n      <Button onClick={handleExitClick} backgroundColor=\"#505050\" padding=\"6px 28px\" fontSize=\"12px\">\r\n        Discard / Exit\r\n      </Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ManageTop;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 1100px;\r\n  min-width: 600px;\r\n  margin: 0 auto;\r\n  color: ${({ theme }) => theme.colors.black};\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: ${({ theme }) => theme.colors.grey3};\r\n`;\r\n\r\nconst AboutBottomBarBox = ({ children }: { children: string | number }) => {\r\n  return <Wrapper>{children}</Wrapper>;\r\n};\r\n\r\nexport default AboutBottomBarBox;\r\n","import styled from \"styled-components\";\r\n\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 120px 1fr;\r\n  width: 100%;\r\n  height: 100px;\r\n  padding: 20px 20px 20px 5px;\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  color: ${({ theme }) => theme.colors.white};\r\n\r\n  .text {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const CalculationsWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr 2fr 2fr;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const Calc = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  p {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n","import { InitialPatientType } from 'interfaces';\r\n\r\nconst useCalculate = (patient: InitialPatientType) => {\r\n  const calculateBMI = () => {\r\n    const height = Number(patient.height) / 100;\r\n    const BMI = (Number(patient.bodymass) / Math.pow(height, 2)).toFixed(2).toString();\r\n    return BMI;\r\n  };\r\n\r\n  const BMIdescription = () => {\r\n    const height = Number(patient.height) / 100;\r\n    let BMI = Number((Number(patient.bodymass) / Math.pow(height, 2)).toFixed(2));\r\n    if (BMI < 25 && BMI > 18.5) {\r\n      return 'Normal';\r\n    } else if (BMI >= 25) {\r\n      return 'Obesity';\r\n    } else if (BMI <= 18.5) {\r\n      return 'Underweight';\r\n    } else {\r\n      return 'OK';\r\n    }\r\n  };\r\n\r\n  const calculateRisk = () => {\r\n    const height = Number(patient.height) / 100;\r\n    let BMI = Number((Number(patient.bodymass) / Math.pow(height, 2)).toFixed(2));\r\n    if (BMI < 25 && BMI > 18.5) {\r\n      return 'Lowest';\r\n    } else if (BMI >= 25 && BMI <= 35) {\r\n      return 'High';\r\n    } else if (BMI >= 35) {\r\n      return 'Very high';\r\n    } else if (BMI <= 18.5) {\r\n      return 'High';\r\n    } else {\r\n      return 'OK';\r\n    }\r\n  };\r\n\r\n  const idealWeight = () => {\r\n    const height = Number(patient.height);\r\n    let idealWeightMin = '';\r\n    let idealWeightMax = '';\r\n    if (patient.sex === 'Male') {\r\n      idealWeightMin = (height - 100 - (height - 138) / 4).toString();\r\n      idealWeightMax = (height - 100 - (height - 162) / 4).toString();\r\n    } else {\r\n      idealWeightMin = (height - 100 - (height - 138) / 2).toString();\r\n      idealWeightMax = (height - 100 - (height - 162) / 2).toString();\r\n    }\r\n\r\n    return `${idealWeightMin} - ${idealWeightMax} kg`;\r\n  };\r\n\r\n  const calculateCPM = () => {\r\n    const CPM = (66.5 + 13.75 * Number(patient.bodymass) + 5.003 * Number(patient.height) - 6.775 * Number(patient.age)) * Number(patient.activity);\r\n    return CPM.toFixed().toString();\r\n  };\r\n\r\n\r\n\r\n  return { calculateBMI, BMIdescription, calculateRisk, idealWeight, calculateCPM };\r\n};\r\n\r\nexport default useCalculate;\r\n","import AboutBottomBarBox from 'components/atoms/AboutBottomBarBox/AboutBottomBarBox';\r\nimport React, { useContext } from 'react';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { CalculationsWrapper, Calc, Wrapper } from './AboutBottomBar.styles';\r\nimport useCalculate from 'hooks/useCalculate';\r\n\r\nconst AboutBottomBar = () => {\r\n  const { patient } = useContext(PatientContext);\r\n  const { BMIdescription, calculateBMI, calculateRisk, idealWeight } = useCalculate(patient);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"text\">Body weight assessment</div>\r\n      <CalculationsWrapper>\r\n        <Calc>\r\n          <p>BMI</p>\r\n          <AboutBottomBarBox>{patient.bodymass && patient.height ? calculateBMI() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n        <Calc>\r\n          <p>Description</p>\r\n          <AboutBottomBarBox>{patient.bodymass && patient.height ? BMIdescription() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n        <Calc>\r\n          <p>Risk of cardiovascular disease</p>\r\n          <AboutBottomBarBox>{patient.bodymass && patient.height ? calculateRisk() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n        <Calc>\r\n          <p>Ideal body weight</p>\r\n          <AboutBottomBarBox>{patient.bodymass && patient.height ? idealWeight() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n      </CalculationsWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AboutBottomBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  .sex {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n  div {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 35px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding-right: 5%;\r\n\r\n    label {\r\n      input {\r\n        margin: 0 5px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Wrapper } from './SexButton.styles';\r\n\r\nconst SexButton = () => {\r\n  return (\r\n    <Wrapper>\r\n      <label className=\"sex\">Sex</label>\r\n      <div>\r\n        <label>\r\n          <input type=\"radio\" name=\"sex\" value=\"Male\" />\r\n          Male\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"sex\" value=\"Female\" />\r\n          Female\r\n        </label>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SexButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.form`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 15px;\r\n  width: 100%;\r\n  min-height: calc(100vh - 175px);\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n\r\n  div:nth-child(1) {\r\n    grid-area: 1/1/2/3;\r\n  }\r\n  div:nth-child(2) {\r\n    grid-area: 1/3/2/5;\r\n  }\r\n  div:nth-child(3) {\r\n    grid-area: 1/5/2/6;\r\n  }\r\n  div:nth-child(4) {\r\n    grid-area: 1/6/2/7;\r\n  }\r\n  div:nth-child(5) {\r\n    grid-area: 2/1/3/2;\r\n  }\r\n  div:nth-child(6) {\r\n    grid-area: 2/2/3/3;\r\n  }\r\n  div:nth-child(7) {\r\n    grid-area: 2/3/3/5;\r\n  }\r\n  div:nth-child(8) {\r\n    grid-area: 2/5/3/7;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n\r\n  label {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 35px;\r\n    border: none;\r\n    border-radius: 6px;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    padding: 0 10px;\r\n    -webkit-appearance: none;\r\n  }\r\n  \r\n`;\r\n\r\nexport const TextArea = styled.div`\r\n  width: 100%;\r\n  grid-area: 3/1/4/5;\r\n\r\n  label {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n  textarea {\r\n    width: 100%;\r\n    border: none;\r\n    border-radius: 6px;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    padding: 10px;\r\n    height: 100px;\r\n    font-family: 'Montserrat', sans-serif;\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n\r\nexport const Slider = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  grid-area: 4/1/5/7;\r\n \r\n  p {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n  input {\r\n    width: 100%;\r\n    -webkit-appearance: none;\r\n    margin: 7px 0;\r\n  }\r\n  .minmax {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n  }\r\n  input::-webkit-slider-runnable-track {\r\n    width: 100%;\r\n    height: 10px;\r\n    cursor: pointer;\r\n    background: ${({ theme }) => theme.colors.blue3};\r\n    border-radius: 3px;\r\n  }\r\n\r\n  input::-webkit-slider-thumb {\r\n    height: 22px;\r\n    width: 15px;\r\n    border-radius: 5px;\r\n    background-color: ${({ theme }) => theme.colors.grey4};\r\n    cursor: pointer;\r\n    -webkit-appearance: none;\r\n    margin-top: -6.5px;\r\n  }\r\n`;\r\n","import SexButton from 'components/molecules/SexButton';\r\nimport React, { useContext, useEffect, useRef } from 'react';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { useParams } from 'react-router';\r\nimport axios from 'axios';\r\nimport { Input, Slider, TextArea, Wrapper } from './AboutForm.styles';\r\n\r\nconst newPatient = {\r\n  id: new Date().getTime(),\r\n  name: '',\r\n  surname: '',\r\n  age: '',\r\n  sex: 'Male',\r\n  email: '',\r\n  telephone: '',\r\n  bodymass: '',\r\n  height: '',\r\n  notes: '',\r\n  activity: '1.2',\r\n};\r\n\r\nconst AboutForm = () => {\r\n  const { id } = useParams();\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  const nameValue = useRef<HTMLInputElement>(null);\r\n  const surnameValue = useRef<HTMLInputElement>(null);\r\n  const ageValue = useRef<HTMLInputElement>(null);\r\n  const telephoneValue = useRef<HTMLInputElement>(null);\r\n  const emailValue = useRef<HTMLInputElement>(null);\r\n  const bodymassValue = useRef<HTMLInputElement>(null);\r\n  const heightValue = useRef<HTMLInputElement>(null);\r\n  const notesValue = useRef<HTMLTextAreaElement>(null);\r\n  const activityValue = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      axios\r\n        .get(`/dietmaster/patient/about/${id}`)\r\n        .then(({ data }) => {\r\n          data[0] && setPatient(data[0]);\r\n        })\r\n        .catch((err) => console.log(err));\r\n\r\n      if (nameValue.current) {\r\n        nameValue.current.value = patient.name;\r\n      }\r\n      if (surnameValue.current) {\r\n        surnameValue.current.value = patient.surname;\r\n      }\r\n      if (ageValue.current) {\r\n        ageValue.current.value = patient.age;\r\n      }\r\n      if (telephoneValue.current) {\r\n        telephoneValue.current.value = patient.telephone;\r\n      }\r\n      if (emailValue.current) {\r\n        emailValue.current.value = patient.email;\r\n      }\r\n      if (bodymassValue.current) {\r\n        bodymassValue.current.value = patient.bodymass;\r\n      }\r\n      if (heightValue.current) {\r\n        heightValue.current.value = patient.height;\r\n      }\r\n      if (notesValue.current) {\r\n        notesValue.current.value = patient.notes;\r\n      }\r\n      if (activityValue.current) {\r\n        activityValue.current.value = patient.activity;\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    setPatient({\r\n      ...patient,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper onChange={handleChange}>\r\n      <Input>\r\n        <label htmlFor=\"Name\">Name</label>\r\n        <input ref={nameValue} id=\"name\" name=\"name\" type=\"text\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Surname\">Surname</label>\r\n        <input ref={surnameValue} id=\"surname\" name=\"surname\" type=\"text\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Age\">Age</label>\r\n        <input ref={ageValue} id=\"age\" name=\"age\" type=\"number\" />\r\n      </Input>\r\n      <SexButton />\r\n      <Input>\r\n        <label htmlFor=\"Body mass (kg)\">Body mass (kg)</label>\r\n        <input ref={bodymassValue} id=\"bodymass\" name=\"bodymass\" type=\"number\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Height (cm)\">Height (cm)</label>\r\n        <input ref={heightValue} id=\"height\" name=\"height\" type=\"number\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Telephone\">Telephone</label>\r\n        <input ref={telephoneValue} id=\"telephone\" name=\"telephone\" type=\"tel\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"E-mail\">E-mail</label>\r\n        <input ref={emailValue} id=\"email\" name=\"email\" type=\"email\" />\r\n      </Input>\r\n      <TextArea>\r\n        <label htmlFor=\"Notes\">Notes</label>\r\n        <textarea ref={notesValue} id=\"notes\" name=\"notes\" />\r\n      </TextArea>\r\n      <Slider>\r\n        <p>Physical activity</p>\r\n        <input ref={activityValue} id=\"activity\" name=\"activity\" type=\"range\" min=\"1.2\" max=\"2.4\" step=\"0.1\" />\r\n        <div className=\"minmax\">\r\n          <p>1.2</p>\r\n          <p>2.4</p>\r\n        </div>\r\n      </Slider>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AboutForm;\r\n","import React from 'react';\r\nimport ManageNavBar from 'components/organisms/ManageNavBar';\r\nimport ManageTop from 'components/organisms/ManageTop';\r\nimport { Wrapper } from './About.styles';\r\nimport AboutBottomBar from 'components/organisms/AboutBottomBar';\r\nimport AboutForm from 'components/organisms/AboutForm';\r\n\r\nconst About = () => {\r\n  return (\r\n      <Wrapper>\r\n        <ManageTop />\r\n        <ManageNavBar />\r\n        <AboutForm />\r\n        <AboutBottomBar />\r\n      </Wrapper>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 15px;\r\n  width: 100%;\r\n  min-height: calc(100vh - 75px);\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n`;\r\nexport const Sliders = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  gap: 15px;\r\n`;\r\n\r\nexport const SliderDesc = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-left: 70px;\r\n  margin-top: -10px;\r\n`;\r\n\r\nexport const SliderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  h4 {\r\n    margin: 2px 0 5px;\r\n  }\r\n`;\r\n\r\nexport const SliderInput = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: ${({ theme }) => theme.colors.grey4};\r\n    width: 60px;\r\n    height: 30px;\r\n    border-radius: 5px;\r\n    margin-right: 14px;\r\n    color: white;\r\n    overflow: hidden;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    -webkit-appearance: none;\r\n    margin: 10px 0;\r\n    width: 100%;\r\n  }\r\n\r\n  input::-webkit-slider-runnable-track {\r\n    width: 100%;\r\n    height: 12px;\r\n    cursor: pointer;\r\n    background: ${({ theme }) => theme.colors.blue3};\r\n    border-radius: 3px;\r\n  }\r\n\r\n  input::-webkit-slider-thumb {\r\n    height: 25px;\r\n    width: 15px;\r\n    border-radius: 5px;\r\n    background-color: ${({ theme }) => theme.colors.grey4};\r\n    cursor: pointer;\r\n    -webkit-appearance: none;\r\n    margin-top: -8px;\r\n  }\r\n\r\n  .blue::-webkit-slider-runnable-track {\r\n    background: ${({ theme }) => theme.colors.blue3};\r\n  }\r\n  .red::-webkit-slider-runnable-track {\r\n    background: ${({ theme }) => theme.colors.red};\r\n  }\r\n  .yellow::-webkit-slider-runnable-track {\r\n    background: ${({ theme }) => theme.colors.yellow};\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n`;\r\n\r\nexport const CPMWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nexport const ShowCPM = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-content: center;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  height: 75px;\r\n  width: 200px;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  font-size: ${({ theme }) => theme.fontSizes.xm};\r\n  color: white;\r\n\r\n  input {\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: ${({ theme }) => theme.fontSizes.l};\r\n    padding: 5px;\r\n    text-align: center;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n  }\r\n  div {\r\n    font-size: ${({ theme }) => theme.fontSizes.l};\r\n    padding: 5px;\r\n  }\r\n`;\r\n\r\nexport const MicronutrientsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n  margin: 10px 0;\r\n`;\r\n\r\nexport const MicronutrientsColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n  align-items: flex-end;\r\n`;\r\n\r\nexport const Nutrient = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-size: 0.9rem;\r\n\r\n  input {\r\n    text-align: right;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    width: 60px;\r\n    height: 21px;\r\n    border-radius: 3px;\r\n    padding: 2px 6px;\r\n    border: none;\r\n  }\r\n`;\r\n","import { PatientContext } from 'contexts/PatientContext';\r\nimport useCalculate from 'hooks/useCalculate';\r\nimport React, { useContext, useState } from 'react';\r\nimport {\r\n  Nutrient,\r\n  CPMWrapper,\r\n  Input,\r\n  MicronutrientsColumn,\r\n  MicronutrientsWrapper,\r\n  ShowCPM,\r\n  SliderDesc,\r\n  SliderInput,\r\n  Sliders,\r\n  SliderWrapper,\r\n  Wrapper,\r\n} from './DietForm.styles';\r\n\r\nconst DietForm = () => {\r\n  const { patient } = useContext(PatientContext);\r\n  const { calculateCPM } = useCalculate(patient);\r\n  const [establishCPM, setEstablishCPM] = useState(calculateCPM());\r\n  const [protein, setProtein] = useState(22);\r\n  const [fat, setFat] = useState(18);\r\n  const [carbs, setCarbs] = useState(56);\r\n\r\n  const handleCPMInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEstablishCPM(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSliderChange = (e: React.FormEvent<HTMLFormElement>) => {\r\n    // console.log(e.target);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <CPMWrapper>\r\n        <ShowCPM>\r\n          <p>Recommended CPM</p>\r\n          <div>{calculateCPM()}</div>\r\n        </ShowCPM>\r\n        <ShowCPM>\r\n          <p>Established CPM</p>\r\n          <input type=\"text\" value={establishCPM} onChange={(e) => handleCPMInputChange(e)} />\r\n        </ShowCPM>\r\n      </CPMWrapper>\r\n      <Sliders onChange={(e) => handleSliderChange(e)}>\r\n        <SliderWrapper>\r\n          <h4>Protein</h4>\r\n          <SliderInput>\r\n            <div>{`${((Number(establishCPM) * protein) / 400).toFixed()}g`}</div>\r\n            <input\r\n              className=\"red\"\r\n              id=\"protein\"\r\n              name=\"protein\"\r\n              type=\"range\"\r\n              min=\"1\"\r\n              max=\"100\"\r\n              step=\"1\"\r\n              value={protein}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setProtein(Number(e.currentTarget.value))}\r\n            />\r\n          </SliderInput>\r\n        </SliderWrapper>\r\n        <SliderWrapper>\r\n          <h4>Fat</h4>\r\n          <SliderInput>\r\n            <div>{`${((Number(establishCPM) * fat) / 900).toFixed()}g`}</div>\r\n            <input\r\n              className=\"yellow\"\r\n              id=\"fat\"\r\n              name=\"fat\"\r\n              type=\"range\"\r\n              min=\"1\"\r\n              max=\"100\"\r\n              step=\"1\"\r\n              value={fat}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setFat(Number(e.currentTarget.value))}\r\n            />\r\n          </SliderInput>\r\n        </SliderWrapper>\r\n        <SliderWrapper>\r\n          <h4>Carbohydrates</h4>\r\n          <SliderInput>\r\n            <div>{`${((Number(establishCPM) * carbs) / 400).toFixed()}g`}</div>\r\n            <Input\r\n              className=\"blue\"\r\n              id=\"carbs\"\r\n              name=\"carbs\"\r\n              type=\"range\"\r\n              min=\"1\"\r\n              max=\"100\"\r\n              step=\"1\"\r\n              value={carbs}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCarbs(Number(e.currentTarget.value))}\r\n            />\r\n          </SliderInput>\r\n        </SliderWrapper>\r\n        <SliderDesc>\r\n          <p>0%</p>\r\n          <p>100%</p>\r\n        </SliderDesc>\r\n      </Sliders>\r\n      <MicronutrientsWrapper>\r\n        <MicronutrientsColumn>\r\n          <Nutrient>\r\n            <p>fiber [g]</p>\r\n            <input type=\"text\" value=\"20\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>sugar [g]</p>\r\n            <input type=\"text\" value=\"42.5\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>SFA [g]</p>\r\n            <input type=\"text\" value=\"9.8\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>MUFA [g]</p>\r\n            <input type=\"text\" value=\"29\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>PUFA [g]</p>\r\n            <input type=\"text\" value=\"16.1\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>omega-3 [g]</p>\r\n            <input type=\"text\" value=\"1.9\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>omega-6 [g]</p>\r\n            <input type=\"text\" value=\"4.6\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>cholesterol [mg]</p>\r\n            <input type=\"text\" value=\"300\" />\r\n          </Nutrient>\r\n        </MicronutrientsColumn>\r\n        <MicronutrientsColumn>\r\n          <Nutrient>\r\n            <p>sodium [mg]</p>\r\n            <input type=\"text\" value=\"1300\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>potassium [mg]</p>\r\n            <input type=\"text\" value=\"3500\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>calcium [mg]</p>\r\n            <input type=\"text\" value=\"1200\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>phosphorus [mg]</p>\r\n            <input type=\"text\" value=\"700\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>magnesium [mg]</p>\r\n            <input type=\"text\" value=\"320\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>iron [mg]</p>\r\n            <input type=\"text\" value=\"10\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>zinc [mg]</p>\r\n            <input type=\"text\" value=\"8\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>copper [mg]</p>\r\n            <input type=\"text\" value=\"0.9\" />\r\n          </Nutrient>\r\n        </MicronutrientsColumn>\r\n        <MicronutrientsColumn>\r\n          <Nutrient>\r\n            <p>vit. A [µg]</p>\r\n            <input type=\"text\" value=\"700\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. D [µg]</p>\r\n            <input type=\"text\" value=\"15\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. E [mg]</p>\r\n            <input type=\"text\" value=\"8\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. K [µg]</p>\r\n            <input type=\"text\" value=\"90\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. B1 [mg]</p>\r\n            <input type=\"text\" value=\"1.1\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. B6 [mg]</p>\r\n            <input type=\"text\" value=\"1.5\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. B12 [mg]</p>\r\n            <input type=\"text\" value=\"2.4\" />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. C [mg]</p>\r\n            <input type='text' value='75' />\r\n          </Nutrient>\r\n        </MicronutrientsColumn>\r\n      </MicronutrientsWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DietForm;\r\n","import ManageNavBar from 'components/organisms/ManageNavBar';\r\nimport ManageTop from 'components/organisms/ManageTop';\r\nimport { Wrapper } from './About.styles';\r\nimport DietForm from 'components/organisms/DietForm';\r\n\r\nconst Diet = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ManageTop />\r\n      <ManageNavBar />\r\n      <DietForm />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Diet;\r\n","export default __webpack_public_path__ + \"static/media/logo.8af3b97f.png\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 350px;\r\n  padding: 30px 20px;\r\n  margin-bottom: 50px;\r\n  gap: 15px;\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n  border-radius: 6px;\r\n  box-shadow: rgba(0, 0, 0, 0.07) 0px 1px 2px, rgba(0, 0, 0, 0.07) 0px 2px 4px, rgba(0, 0, 0, 0.07) 0px 4px 8px, rgba(0, 0, 0, 0.07) 0px 8px 16px,\r\n    rgba(54, 44, 44, 0.07) 0px 16px 32px, rgba(0, 0, 0, 0.07) 0px 32px 64px;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  height: 100px;\r\n  margin: 15px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  height: 35px;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  padding: 8px;\r\n  margin: 10px 0;\r\n  border-radius: 6px;\r\n  border: none;\r\n`;\r\nexport const Label = styled.label`\r\n  width: 100%;\r\n  font-size: ${({ theme }) => theme.fontSizes.xm};\r\n`;\r\n","import { ILoginInput } from 'interfaces';\r\nimport React from 'react';\r\nimport { Input, Label, Wrapper } from './LoginInput.styles';\r\n\r\nconst LoginInput = React.forwardRef(({ label, name, id, type, value, onChange, ...props }: ILoginInput, ref: any) => {\r\n  return (\r\n    <Wrapper>\r\n      <Label htmlFor={id}>{label}</Label>\r\n      <Input name={name} type={type} id={id} onChange={onChange} value={value} {...props} ref={ref} />\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default LoginInput;\r\n","import { useForm } from 'react-hook-form';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport logo from '../assets/images/logo.png'\r\nimport { useAuth } from 'hooks/useAuth';\r\nimport { Wrapper, Form, Image } from './Login.styles';\r\nimport LoginInput from 'components/molecules/LoginInput';\r\n\r\n\r\nconst Login = () => {\r\n  const { signIn } = useAuth();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src={logo} />\r\n      <Form onSubmit={handleSubmit(signIn)}>\r\n        <LoginInput id=\"login\" label=\"Login\" type=\"text\" placeholder='login: jack123' {...register('login', { required: true })} />\r\n        {/* {errors.login ?? <h6>Login is required</h6>} */}\r\n        <LoginInput id=\"password\" label=\"Password\" type=\"password\" placeholder='pass: Pass123' {...register('password', { required: true })} />\r\n        {/* {errors.password ?? <h6>Password is required</h6>}  */}\r\n        <Button type=\"submit\">Sign in</Button>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { GlobalStyle } from 'assets/styles/GlobalStyle';\nimport { Wrapper } from './Root.styles';\nimport Main from './Main';\nimport About from './About';\nimport ManageDiet from './Diet';\nimport Login from './Login';\nimport { useAuth } from 'hooks/useAuth';\n\nconst Root = () => {\n  const { user } = useAuth();\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <GlobalStyle />\n        <Routes>\n          {user.login ? (\n            <Wrapper>\n              <Route path=\"/patient/appointments/:id\" element={<ManageDiet />} />\n              <Route path=\"/patient/blood-tests/:id\" element={<ManageDiet />} />\n              <Route path=\"/patient/allergens/:id\" element={<ManageDiet />} />\n              <Route path=\"/patient/diet/:id\" element={<ManageDiet />} />\n              <Route path=\"/patient/about/:id\" element={<About />} />\n              <Route path=\"/\" element={<Main />} />\n              <Route path=\"*\" element={<Navigate to=\"/\" />} />\n            </Wrapper>\n          ) : (\n            <>\n              <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n              <Route path=\"/login\" element={<Login />} />\n            </>\n          )}\n        </Routes>\n    </Router>\n  );\n};\n\nexport default Root;\n","export const theme = {\n  colors: {\n    white: '#FFFFFF',\n    black: '#111111',\n    lightBlack: '#343434',\n    grey1: '#E5E5E5',\n    grey2: '#C1C1C1',\n    grey3: '#9D9D9D',\n    grey4: '#505050',\n    blue1: '#50D4FF',\n    blue2: '#16C6FF',\n    blue3: '#00BEFC',\n    blue4: '#00A3D9',\n    red: '#D90000',\n    yellow: '#F8DA00',\n\n  },\n  fontSizes: {\n    xxl: '34px',\n    xl: '24px',\n    l: '17px',\n    xm: '14px',\n    m: '12px',\n    s: '11px',\n  },\n};\n","import { theme } from 'assets/styles/theme';\r\nimport { AuthProvider } from 'hooks/useAuth';\r\nimport { ReactNode } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport PatientProvider from './PatientContext';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from 'store/store';\r\n\r\nconst AppProviders = ({ children }: { children: ReactNode }) => {\r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n        <ThemeProvider theme={theme}>\r\n          <PatientProvider>\r\n            <AuthProvider>{children}</AuthProvider>\r\n          </PatientProvider>\r\n        </ThemeProvider>\r\n      </Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppProviders;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'pages/Root';\nimport AppProviders from 'contexts/AppProviders';\n\nasync function main() {\n  if (window.location.pathname === '/dietmaster') {\n    window.location.pathname = '/dietmaster/';\n    return;\n  }\n  const { worker } = require('./mocks/browser');\n  await worker.start({\n    serviceWorker: {\n      url: '/dietmaster/mockServiceWorker.js',\n    },\n  });\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <AppProviders>\n        <Root />\n      </AppProviders>\n    </React.StrictMode>,\n    document.getElementById('root'),\n  );\n}\nmain();\n","import { rest } from 'msw';\r\n// import patients from '../data/patientsList';\r\nimport { db } from 'mocks/db';\r\n\r\nexport const patients = [\r\n  rest.get('/dietmaster', (req, res, ctx) => {\r\n    return res(ctx.status(200), ctx.json(db.patient.getAll()));\r\n  }),\r\n\r\n  rest.post('/dietmaster', (req, res, ctx) => {\r\n    const searchInList = db.patient.getAll().filter((patient) => {\r\n      return patient.name.toLowerCase().includes(`${req.body}`) || patient.surname.toLowerCase().includes(`${req.body}`);\r\n    });\r\n    return res(ctx.status(200), ctx.json(searchInList));\r\n  }),\r\n\r\n  rest.get('/dietmaster/patient/about/:id', (req, res, ctx) => {\r\n    if (req.params.id) {\r\n      const matchingPatient = db.patient.getAll().filter((patient) => patient.id === Number(req.params.id));\r\n      return res(ctx.status(200), ctx.json(matchingPatient));\r\n    }\r\n  }),\r\n\r\n  rest.post('/dietmaster/add', (req, res, ctx) => {\r\n    const patient = req.body;\r\n    db.patient.create(patient)\r\n    return res(ctx.status(200), ctx.json(patient));\r\n  }),\r\n  rest.put('/dietmaster/add', (req, res, ctx) => {\r\n    const updatedPatient = db.patient.update({\r\n      where: {\r\n        id: {\r\n          equals: req.body.id,\r\n        },\r\n      },\r\n      data: req.body,\r\n    })\r\n    console.log(updatedPatient)\r\n    return res(ctx.status(200), ctx.json(updatedPatient));\r\n  }),\r\n  rest.delete('/dietmaster', (req, res, ctx) => {\r\n    if (req.body) {\r\n      const removedPatient = db.patient.delete({\r\n        where: {\r\n          id: {\r\n            equals: req.body.id,\r\n          },\r\n        },\r\n      });\r\n      return res(\r\n        ctx.status(200),\r\n        ctx.json({\r\n          removedPatient,\r\n        }),\r\n      );\r\n    }\r\n  }),\r\n];\r\n","import { rest } from 'msw';\r\nimport { db } from 'mocks/db';\r\nimport { authenticateRequest } from 'mocks/helpers';\r\n\r\nconst sanitizeUser = (user) => {\r\n  const { password, ...rest } = user;\r\n  return rest;\r\n};\r\n\r\nexport const auth = [\r\n  rest.post('/dietmaster/login', (req, res, ctx) => {\r\n    const user = db.dietitian.findFirst({\r\n      where: {\r\n        login: {\r\n          equals: req.body.login,\r\n        },\r\n      },\r\n    });\r\n    if (user && user.password === req.body.password) {\r\n      const token = btoa(user.login);\r\n      localStorage.setItem('__be_token__', token);\r\n      return res(ctx.status(200), ctx.json({ ...sanitizeUser(user), token }));\r\n    }\r\n    return res(\r\n      ctx.status(403),\r\n      ctx.json({\r\n        error: 'Invalid user data',\r\n      })\r\n    );\r\n  }),\r\n  rest.get('/me', (req, res, ctx) => {\r\n    if (authenticateRequest(req)) {\r\n      const user = db.dietitian.getAll();\r\n      return res(ctx.status(200), ctx.json({ ...sanitizeUser(user) }));\r\n    }\r\n    return res(ctx.status(401));\r\n  }),\r\n];","export const authenticateRequest = (req: any) => {\r\n  const token = localStorage.getItem('__be_token__') || null;\r\n  const userToken = req.headers.get('Authorization')?.replace('Bearer ', '');\r\n\r\n  return token === userToken;\r\n};","import { patients } from './patients';\r\nimport { auth } from './auth';\r\n\r\nexport const handlers = [...patients, ...auth];","import { setupWorker } from 'msw';\r\nimport { handlers } from './handlers';\r\nimport { db } from './db';\r\n\r\nexport const worker = setupWorker(...handlers);\r\n\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.dietitian.create()\r\n"],"sourceRoot":""}