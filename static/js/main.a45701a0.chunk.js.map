{"version":3,"sources":["mocks/db.ts","assets/styles/GlobalStyle.ts","pages/Root.styles.ts","components/atoms/Button/Button.styles.ts","components/atoms/Button/Button.tsx","store/store.tsx","components/organisms/MainBottomBar/MainBottomBar.tsx","contexts/PatientContext.tsx","components/molecules/MainPatientInfo/MainPatientInfo.styles.ts","components/molecules/MainPatientInfo/MainPatientInfo.tsx","components/atoms/InputMain/InputMain.tsx","hooks/useAuth.tsx","components/organisms/MainTopBar/MainTopBar.tsx","pages/Main.styles.ts","pages/Main.tsx","components/atoms/ManageNavButton/ManageNavButton.styles.ts","components/atoms/ManageNavButton/ManageNavButton.tsx","components/organisms/ManageNavBar/ManageNavBar.tsx","components/organisms/ManageTop/ManageTop.styles.ts","components/organisms/ManageTop/ManageTop.tsx","pages/About.styles.ts","components/atoms/AboutBottomBarBox/AboutBottomBarBox.tsx","components/organisms/AboutBottomBar/AboutBottomBar.styles.ts","hooks/useCalculate.tsx","components/organisms/AboutBottomBar/AboutBottomBar.tsx","components/molecules/SexButton/SexButton.styles.ts","components/molecules/SexButton/SexButton.tsx","components/organisms/AboutForm/AboutForm.styles.ts","components/organisms/AboutForm/AboutForm.tsx","pages/About.tsx","components/organisms/DietForm/DietForm.styles.ts","components/organisms/DietForm/DietForm.tsx","pages/Diet.tsx","assets/images/logo.png","pages/Login.styles.ts","components/molecules/LoginInput/LoginInput.styles.ts","components/molecules/LoginInput/LoginInput.tsx","pages/Login.tsx","components/atoms/AllergensListButton/AllergensListButton.tsx","components/molecules/AllergensInput/AllergensInput.tsx","components/molecules/AllergensList/AllergensList.tsx","components/organisms/AllergensForm/AllergensForm.styles.ts","components/organisms/AllergensForm/AllergensForm.tsx","components/organisms/DiseasesForm/DiseasesForm.tsx","components/organisms/PreferencesForm/PreferencesForm.tsx","components/organisms/AllergensFormContainer/AllergensFormContainer.styles.ts","components/organisms/AllergensFormContainer/AllergensFormContainer.tsx","pages/Allergens.tsx","pages/BloodTests.tsx","pages/Appointments.tsx","pages/Root.tsx","assets/styles/theme.ts","contexts/AppProviders.tsx","index.tsx","mocks/handlers/patients.ts","mocks/handlers/auth.ts","mocks/helpers.ts","mocks/handlers/index.ts","mocks/browser.ts"],"names":["sex","note","products","getRandomValue","array","index","db","factory","patient","id","primaryKey","faker","datatype","number","min","max","name","fake","surname","age","email","telephone","bodymass","height","notes","activity","precision","calories","protein","fat","carbs","allergens","preferences","diseases","dietitian","login","password","GlobalStyle","createGlobalStyle","Wrapper","styled","div","StyledButton","button","marginLeft","padding","backgroundColor","colors","theme","blue3","borderRadius","fontSize","fontSizes","l","white","Button","props","children","initialPatient","fetchPatients","createAsyncThunk","a","axios","get","response","data","console","log","patientFound","addNewPatient","findPatient","findFirst","where","equals","post","put","removePatient","delete","patientsListSlice","createSlice","initialState","reducers","sortPatientsList","state","action","sort","b","payload","addAlergens","type","extraReducers","builder","addCase","fulfilled","findIndex","push","filter","removedPatient","actions","store","configureStore","reducer","patientsList","grey4","MainBottomBar","useSelector","dispatch","useDispatch","className","onClick","getAll","PatientContext","createContext","managePatient","setPatient","searchResults","searchTerm","setSearchTerm","PatientProvider","useState","setSearchResults","useEffect","then","catch","err","Provider","value","li","grey1","black","MainPatientInfo","useContext","navigate","useNavigate","patients","handleManageClick","handleDeleteClick","Input","input","InputMain","InitialUserValues","token","AuthContext","signIn","signOut","user","AuthProvider","setUser","localStorage","getItem","headers","authorization","setItem","removeItem","useAuth","lightBlack","MainTopBar","placeholder","onChange","e","currentTarget","toLowerCase","Date","getTime","ul","Main","map","NavLink","color","ManageNavButton","to","ManageNavBar","ManageTop","grey3","AboutBottomBarBox","CalculationsWrapper","Calc","useCalculate","calculateBMI","Number","Math","pow","toFixed","toString","BMIdescription","BMI","calculateRisk","idealWeight","idealWeightMin","idealWeightMax","calculateCPM","AboutBottomBar","SexButton","form","TextArea","Slider","AboutForm","useParams","nameValue","useRef","surnameValue","ageValue","telephoneValue","emailValue","bodymassValue","heightValue","notesValue","activityValue","current","target","htmlFor","ref","step","About","Sliders","SliderDesc","SliderWrapper","SliderInput","red","yellow","CPMWrapper","ShowCPM","xm","MicronutrientsWrapper","MicronutrientsColumn","Nutrient","DietForm","caloriesValue","proteinValue","fatValue","carbsValue","getPatient","readOnly","Diet","Form","Image","img","Label","label","LoginInput","React","forwardRef","Login","useForm","register","handleSubmit","formState","errors","src","logo","onSubmit","required","xl","AllergensListButton","AllergensInput","item","maxLength","AllergensList","allergensList","deleteItem","AllergensForm","setAllergensList","getList","event","preventDefault","alert","length","choosedItem","DiseasesForm","diseasesList","setDiseasesList","PreferencesForm","preferencesList","setPreferencesList","AllergensFormContainer","Allergens","BloodTests","Appointments","Root","basename","process","path","element","grey2","blue1","blue2","blue4","xxl","m","s","AppProviders","window","location","pathname","require","worker","start","serviceWorker","url","ReactDOM","render","StrictMode","document","getElementById","main","rest","req","res","ctx","status","json","searchInList","includes","body","params","matchingPatient","create","updatedPatient","update","sanitizeUser","auth","btoa","error","replace","authenticateRequest","handlers","setupWorker"],"mappings":"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","file":"static/js/main.a45701a0.chunk.js","sourcesContent":["import { factory, primaryKey } from '@mswjs/data';\r\nimport faker from 'faker';\r\n\r\nconst sex = ['Male', 'Female'];\r\nconst note = ['Too fat', 'Too skinny'];\r\nconst products = ['soya', 'apple', 'strawberries', 'avocado', 'eggs', 'coffee', 'oats', 'fish', 'milk', 'rice', 'peanuts'];\r\nconst getRandomValue = (array: string[], index: number) => array[index];\r\n\r\nexport const db = factory({\r\n  patient: {\r\n    id: primaryKey(() => faker.datatype.number({ min: 1116550949262, max: 1636550949262 })),\r\n    name: () => faker.fake('{{name.firstName}}'),\r\n    surname: (): string => faker.fake('{{name.lastName}}'),\r\n    age: (): string => `${faker.datatype.number({ min: 20, max: 70 })}`,\r\n    sex: (): string => getRandomValue(sex, faker.datatype.number({ min: 0, max: 1 })),\r\n    email: (): string => faker.fake('{{internet.email}}'),\r\n    telephone: (): string => `${faker.datatype.number({ min: 100000000, max: 999999999 })}`,\r\n    bodymass: (): string => `${faker.datatype.number({ min: 50, max: 110 })}`,\r\n    height: (): string => `${faker.datatype.number({ min: 160, max: 200 })}`,\r\n    notes: (): string => getRandomValue(note, faker.datatype.number({ min: 0, max: 1 })),\r\n    activity: (): string => `${faker.datatype.number({ min: 1.2, max: 2.4, precision: 0.1 })}`,\r\n    calories: (): string => '0',\r\n    protein: (): string => '30',\r\n    fat: (): string => '20',\r\n    carbs: (): string => '50',\r\n    allergens: (): string[] => [getRandomValue(products, faker.datatype.number({ min: 0, max: 10 }))],\r\n    preferences: (): string[] => [getRandomValue(products, faker.datatype.number({ min: 0, max: 10 }))],\r\n    diseases: (): string[] => [],\r\n    // details: {\r\n    //   energyTab: {\r\n    //     street: String,\r\n    //   },\r\n    //   allergensTab: {\r\n    //     alergens: String,\r\n    //     preferences: String,\r\n    //     diseases: ['a'],\r\n    //   },\r\n    //   testsTab: {\r\n    //     street: String,\r\n    //   },\r\n    //   appointmentsTab: {\r\n    //     street: String,\r\n    //   },\r\n    // },\r\n  },\r\n  dietitian: {\r\n    id: primaryKey(() => '1'),\r\n    name: () => 'Jacek Placek',\r\n    login: () => 'jack123',\r\n    password: () => 'Pass123',\r\n  },\r\n});\r\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n  }\n  \n  *, *::after, *::before {\n    box-sizing: inherit;\n    margin: 0;\n    padding: 0;\n  }\n  \n  body {\n    font-family: 'Montserrat', sans-serif;\n    margin: 0;\n    padding: 0;\n    overflow-x: hidden;\n  }\n  \n  a, button {\n    font-family: 'Montserrat', sans-serif;\n  }\n`;\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n`;","import { IButton } from 'types/interfaces';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button<IButton>`\r\n  cursor: pointer;\r\n  margin-left: ${({ marginLeft }) => (marginLeft ? marginLeft : 'none')};\r\n  padding: ${({ padding }) => (padding ? padding : '8px 20px')};\r\n  background-color: ${({ backgroundColor, theme: { colors } }) => (backgroundColor ? backgroundColor : colors.blue3)};\r\n  border-radius: ${({ borderRadius }) => (borderRadius ? borderRadius : '6px')};\r\n  border: none;\r\n  font-size: ${({ fontSize, theme: { fontSizes } }) => (fontSize ? fontSize : fontSizes.l)};\r\n  color: ${({ theme }) => theme.colors.white};\r\n\r\n  &:hover {\r\n    box-shadow: inset 0 0 100px 100px rgba(255, 255, 255, 0.3);\r\n  }\r\n`;\r\n","import { IButton } from 'types/interfaces';\r\nimport { StyledButton } from './Button.styles';\r\n\r\nconst Button = ({ ...props }: IButton) => {\r\n  return <StyledButton {...props}>{props.children}</StyledButton>;\r\n};\r\n\r\nexport default Button;\r\n","import { createSlice, configureStore, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { db } from 'mocks/db';\r\nimport axios from 'axios';\r\n\r\nexport const initialPatient = {\r\n  id: 0,\r\n  name: '',\r\n  surname: '',\r\n  age: '',\r\n  sex: 'Male',\r\n  email: '',\r\n  telephone: '',\r\n  bodymass: '',\r\n  height: '',\r\n  notes: '',\r\n  activity: '1.2',\r\n  calories: '0',\r\n  protein: '5',\r\n  fat: '15',\r\n  carbs: '10',\r\n  allergens: [''],\r\n  preferences: [''],\r\n  diseases: [''],\r\n};\r\n\r\nconst initialState: typeof initialPatient[] = [];\r\n\r\nexport const fetchPatients = createAsyncThunk('patients/getPatients', async () => {\r\n  try {\r\n    const response = await axios.get('/dietmaster');\r\n    return response.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n});\r\n\r\nlet patientFound = false;\r\nexport const addNewPatient = createAsyncThunk('patients/addPatient', async (patient: typeof initialPatient) => {\r\n  patientFound = false;\r\n  const findPatient = db.patient.findFirst({\r\n    where: {\r\n      id: {\r\n        equals: patient.id,\r\n      },\r\n    },\r\n  });\r\n  if (!findPatient) {\r\n    try {\r\n      const response = await axios.post('/dietmaster/add', patient);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  } else if (findPatient) {\r\n    patientFound = true;\r\n    try {\r\n      const response = await axios.put('/dietmaster/add', patient);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n});\r\n\r\nexport const removePatient = createAsyncThunk('patients/removePatient', async (patient: number) => {\r\n  const findPatient = db.patient.findFirst({\r\n    where: {\r\n      id: {\r\n        equals: patient,\r\n      },\r\n    },\r\n  });\r\n  if (findPatient) {\r\n    try {\r\n      const response = await axios.delete('/dietmaster', { data: findPatient });\r\n      return response.data;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n});\r\n\r\nconst patientsListSlice = createSlice({\r\n  name: 'patientsList',\r\n  initialState,\r\n  reducers: {\r\n    sortPatientsList(state, action) {\r\n      // eslint-disable-next-line array-callback-return\r\n      return state.sort((a, b): any => {\r\n        if (action.payload === 'female') {\r\n          return a.sex > b.sex ? 1 : b.sex > a.sex ? -1 : 0;\r\n        } else if (action.payload === 'male') {\r\n          return a.sex > b.sex ? -1 : b.sex > a.sex ? 1 : 0;\r\n        } else if (action.payload === 'off') {\r\n          return a.id > b.id ? -1 : b.id > a.id ? 1 : 0;\r\n        } else if (action.payload === 'a-z') {\r\n          return a.surname > b.surname ? 1 : b.surname > a.surname ? -1 : 0;\r\n        } else if (action.payload === 'z-a') {\r\n          return a.surname > b.surname ? -1 : b.surname > a.surname ? 1 : 0;\r\n        }\r\n      });\r\n    },\r\n    addAlergens(state,action) {\r\n      if (action.payload.type === 'allergens') {\r\n        console.log('aaaaaaaaal')\r\n      }\r\n    }\r\n\r\n  },\r\n  extraReducers(builder) {\r\n    builder.addCase(fetchPatients.fulfilled, (state, action) => {\r\n      return action.payload;\r\n    });\r\n    builder.addCase(addNewPatient.fulfilled, (state, action) => {\r\n      if (!patientFound) {\r\n        state.push(action.payload);\r\n      } else if (patientFound) {\r\n        const findIndex = state.findIndex((patient) => patient.id === action.payload.id);\r\n        state[findIndex] = action.payload;\r\n      }\r\n    });\r\n    builder.addCase(removePatient.fulfilled, (state, action) => {\r\n      return state.filter((patient) => patient.id !== action.payload.removedPatient.id);\r\n    });\r\n  },\r\n});\r\n\r\nexport const { sortPatientsList, addAlergens } = patientsListSlice.actions;\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    patientsList: patientsListSlice.reducer,\r\n  },\r\n});\r\n","import Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { sortPatientsList } from 'store/store';\r\nimport { db } from 'mocks/db';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  width: 100vw;\r\n  height: 60px;\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  padding: 0 20px 2px;\r\n\r\n  p {\r\n    font-size: 0.7rem;\r\n    color: ${({ theme }) => theme.colors.white};\r\n  }\r\n\r\n  .filterSex {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .buttons {\r\n      display: flex;\r\n      gap: 2px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MainBottomBar = () => {\r\n  const patientsList = useSelector((state: any) => state.patientsList);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"filterSex\">\r\n        <p>Sort</p>\r\n        <div className=\"buttons\">\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(sortPatientsList('off'));\r\n              console.log('state ', patientsList);\r\n              console.log('api', db.patient.getAll());\r\n            }}\r\n            padding=\"6px 20px\"\r\n            borderRadius=\"6px 0 0 6px\"\r\n          >\r\n            off\r\n          </Button>\r\n          <Button onClick={() => dispatch(sortPatientsList('female'))} padding=\"6px 20px\" borderRadius=\"0\">\r\n            female\r\n          </Button>\r\n          <Button onClick={() => dispatch(sortPatientsList('male'))} padding=\"6px 20px\" borderRadius=\"0\">\r\n            male\r\n          </Button>\r\n          <Button onClick={() => dispatch(sortPatientsList('a-z'))} padding=\"6px 20px\" borderRadius=\"0\">\r\n            a-z\r\n          </Button>\r\n          <Button onClick={() => dispatch(sortPatientsList('z-a'))} padding=\"6px 20px\" borderRadius=\"0 6px 6px 0\">\r\n            z-a\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainBottomBar;\r\n","import { createContext, useEffect, useState, ReactNode } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { InitialPatientType } from 'types/interfaces';\r\nimport { fetchPatients } from 'store/store';\r\n\r\nexport const initialPatient = {\r\n  id: 0,\r\n  name: '',\r\n  surname: '',\r\n  age: '',\r\n  sex: 'Male',\r\n  email: '',\r\n  telephone: '',\r\n  bodymass: '',\r\n  height: '',\r\n  notes: '',\r\n  activity: '1.2',\r\n  calories: '0',\r\n  protein: '30',\r\n  fat: '20',\r\n  carbs: '50',\r\n  allergens: [],\r\n  preferences: [],\r\n  diseases: [],\r\n};\r\n\r\nexport type PatientContextType = {\r\n  managePatient: (id: number) => void;\r\n  setPatient: (obj: InitialPatientType) => void;\r\n  searchResults: InitialPatientType[];\r\n  patient: InitialPatientType;\r\n  searchTerm: string;\r\n  setSearchTerm: (term: string) => void;\r\n};\r\n\r\nexport const PatientContext = createContext<PatientContextType>({\r\n  managePatient() {},\r\n  setPatient() {},\r\n  searchResults: [initialPatient],\r\n  searchTerm: '',\r\n  setSearchTerm() {},\r\n  patient: initialPatient,\r\n});\r\n\r\nconst PatientProvider = ({ children }: { children: ReactNode }) => {\r\n  const [patient, setPatient] = useState<InitialPatientType>(initialPatient);\r\n  const [searchResults, setSearchResults] = useState<InitialPatientType[]>([] as InitialPatientType[]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const patientsList = useSelector((state: any) => state.patientsList);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPatients())\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post('/dietmaster', searchTerm)\r\n      .then(({ data }) => {\r\n        setSearchResults(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [searchTerm]);\r\n\r\n  const managePatient = (id: number) => {\r\n    const findPatient = patientsList.filter((patient: any) => patient.id === id);\r\n    setPatient(findPatient[0]);\r\n  };\r\n\r\n  return (\r\n    <PatientContext.Provider\r\n      value={{\r\n        managePatient,\r\n        patient,\r\n        setPatient,\r\n        searchResults,\r\n        searchTerm,\r\n        setSearchTerm,\r\n      }}\r\n    >\r\n      {children}\r\n    </PatientContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PatientProvider;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.li`\r\n  display: grid;\r\n  grid-template-columns: 5% 20% 20% 10% 15% 30%;\r\n  align-items: center;\r\n  gap: 2px;\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n  padding: 5px;\r\n  color: ${({ theme }) => theme.colors.black};\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  .buttons {\r\n    grid-column: 6/7;\r\n    display: flex;\r\n    align-content: center;\r\n    justify-content: space-evenly;\r\n    height: 100%;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Wrapper } from './MainPatientInfo.styles';\r\nimport { removePatient } from 'store/store';\r\nimport { IPatientInfo } from 'types/interfaces';\r\n\r\n\r\nconst MainPatientInfo = ({ name, surname, age, id, index }: IPatientInfo) => {\r\n  const { managePatient } = useContext(PatientContext);\r\n  const navigate = useNavigate();\r\n\r\n  const patients = useSelector((state: any) => state.patients);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleManageClick = (id: number) => {\r\n    managePatient(id);\r\n    navigate(`/patient/about/${id}`);\r\n  };\r\n  const handleDeleteClick = (id: number) => {\r\n    dispatch(removePatient(id))\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>{index + 1}</div>\r\n      <div>{name}</div>\r\n      <div>{surname}</div>\r\n      <div>{age}</div>\r\n      <div className=\"buttons\">\r\n        <Button onClick={() => handleManageClick(id)}>Manage</Button>\r\n        <Button backgroundColor=\"#FF4343\" onClick={() => handleDeleteClick(id)}>\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainPatientInfo;\r\n","import { IInput } from 'types/interfaces';\r\nimport styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n  padding: 8px;\r\n  border: 1px solid ${({ theme }) => theme.colors.white};\r\n  border-radius: 6px;\r\n  font-size: ${({ theme }) => theme.fontSizes.l};\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  color: ${({ theme }) => theme.colors.white};\r\n`;\r\n\r\nconst InputMain = ({...props}: IInput) => {\r\n  return <Input {...props}></Input>;\r\n};\r\n\r\nexport default InputMain;\r\n","import axios from 'axios';\r\nimport React, { createContext, ReactNode, useEffect, useState, useContext } from 'react';\r\n\r\nconst InitialUserValues = { id: '', login: '', name: '', token: '' };\r\n\r\nexport type PatientContextType = {\r\n  signIn: ({ login, password }: { login: string; password: string }) => any;\r\n  signOut: () => void;\r\n  user: typeof InitialUserValues;\r\n};\r\n\r\nconst AuthContext = createContext<PatientContextType>({\r\n  signIn() {},\r\n  signOut() {},\r\n  user: InitialUserValues,\r\n});\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }): any => {\r\n  const [user, setUser] = useState(InitialUserValues);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      (async () => {\r\n        try {\r\n          const response = await axios.get('/me', {\r\n            headers: {\r\n              authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          setUser(response.data[0]);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      })();\r\n    }\r\n  }, []);\r\n\r\n  const signIn = async ({ login, password }: { login: string; password: string }) => {\r\n    try {\r\n      const response = await axios.post('/dietmaster/login', { login, password });\r\n      setUser(response.data);\r\n      localStorage.setItem('token', response.data.token);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const signOut = () => {\r\n    setUser({ id: '', login: '', name: '', token: '' });\r\n    localStorage.removeItem('token');\r\n  };\r\n  return <AuthContext.Provider value={{ user, signIn, signOut }}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return auth;\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport InputMain from 'components/atoms/InputMain/InputMain';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { useAuth } from 'hooks/useAuth';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  width: 100vw;\r\n  height: 60px;\r\n  padding: 10px;\r\n  background-color: ${({ theme }) => theme.colors.lightBlack};\r\n\r\n  h2 {\r\n    color: ${({ theme }) => theme.colors.white};\r\n    font-weight: 400;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst MainTopBar = () => {\r\n  const { setPatient, patient, searchTerm, setSearchTerm } = useContext(PatientContext);\r\n  const navigate = useNavigate();\r\n\r\n  const { signOut } = useAuth();\r\n\r\n  const handleClickNewPatient = () => {\r\n    setPatient({\r\n      id: new Date().getTime(),\r\n      name: '',\r\n      surname: '',\r\n      age: '',\r\n      sex: 'Male',\r\n      email: '',\r\n      telephone: '',\r\n      bodymass: '',\r\n      height: '',\r\n      notes: '',\r\n      activity: '1.2',\r\n      calories: '0',\r\n      protein: '30',\r\n      fat: '20',\r\n      carbs: '50',\r\n      allergens: [],\r\n      preferences: [],\r\n      diseases: [],\r\n    });\r\n    navigate(`/patient/about/${patient.id}`);\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <h2>Patients record</h2>\r\n      </div>\r\n      <InputMain placeholder=\"Search patient\" value={searchTerm} onChange={handleChange} />\r\n      <Button onClick={handleClickNewPatient}>New patient</Button>\r\n      <Button onClick={signOut} backgroundColor=\"#505050\" marginLeft=\"auto\">\r\n        Log Out\r\n      </Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainTopBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2px;\r\n  padding: 2px;\r\n  width: 100%;\r\n  margin: 60px 0;\r\n  list-style: none;\r\n  color: ${({ theme }) => theme.colors.black};\r\n`;\r\n","import MainBottomBar from 'components/organisms/MainBottomBar/MainBottomBar';\r\nimport MainPatientInfo from 'components/molecules/MainPatientInfo/MainPatientInfo';\r\nimport MainTopBar from 'components/organisms/MainTopBar/MainTopBar';\r\nimport React, { useContext } from 'react';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { Wrapper } from './Main.styles';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Main = () => {\r\n  const { searchResults, searchTerm } = useContext(PatientContext);\r\n  const patients = useSelector((state: any) => state.patientsList);\r\n\r\n  return (\r\n    <>\r\n      <MainTopBar />\r\n      <MainBottomBar />\r\n      <Wrapper>\r\n        {searchTerm &&\r\n          searchResults.map((patient, index) => {\r\n            return <MainPatientInfo index={index} key={patient.id} {...patient} />;\r\n          })}\r\n        {!searchTerm &&\r\n          patients.map((patient: any, index: any) => {\r\n            return <MainPatientInfo index={index} key={patient.id} {...patient} />;\r\n          })}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledButton = styled(NavLink)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 8px;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  background-color: ${({ color, theme: { colors } }) => (color ? color : colors.grey4)};\r\n  border: none;\r\n  font-size: ${({ theme }) => theme.fontSizes.l};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    box-shadow: inset 0 0 100px 100px rgba(255, 255, 255, 0.3);\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${({ theme }) => theme.colors.blue3};\r\n  }\r\n`;\r\n","import { IManageNavButton } from 'types/interfaces';\r\nimport { StyledButton } from './ManageNavButton.styles';\r\n\r\nconst ManageNavButton = ({ children, to }: IManageNavButton) => {\r\n  return <StyledButton to={to}>{children}</StyledButton>;\r\n};\r\n\r\nexport default ManageNavButton;\r\n","import ManageNavButton from 'components/atoms/ManageNavButton/ManageNavButton';\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BsFillPersonFill, BsExclamationDiamond } from \"react-icons/bs\";\r\nimport { ImSpoonKnife } from \"react-icons/im\";\r\nimport { BiTestTube } from \"react-icons/bi\";\r\nimport { AiTwotoneCalendar } from \"react-icons/ai\";\r\nimport { PatientContext } from 'contexts/PatientContext';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  width: 100%;\r\n  height: 35px;\r\n`;\r\n\r\nconst ManageNavBar = () => {\r\n  const { patient } = useContext(PatientContext);\r\n\r\n  return <Wrapper>\r\n    <ManageNavButton to={`/patient/about/${patient.id}`}><BsFillPersonFill />About</ManageNavButton>\r\n    <ManageNavButton to={`/patient/diet/${patient.id}`}><ImSpoonKnife />Diet</ManageNavButton>\r\n    <ManageNavButton to={`/patient/allergens/${patient.id}`}><BsExclamationDiamond />Allergens</ManageNavButton>\r\n    <ManageNavButton to={`/patient/blood-tests/${patient.id}`}><BiTestTube />Blood tests</ManageNavButton>\r\n    <ManageNavButton to={`/patient/appointments/${patient.id}`}><AiTwotoneCalendar />Appointments</ManageNavButton>\r\n  </Wrapper>;\r\n};\r\n\r\nexport default ManageNavBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  height: 40px;\r\n  padding: 0 30px;\r\n  background-color: ${({ theme }) => theme.colors.blue3};\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { initialPatient } from 'store/store';\r\n// import { useParams } from 'react-router';\r\nimport { Wrapper } from './ManageTop.styles';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst ManageTop = () => {\r\n  const navigate = useNavigate();\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleExitClick = () => {\r\n    navigate('/');\r\n    setPatient(initialPatient);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Button onClick={handleExitClick} backgroundColor=\"#505050\" padding=\"6px 28px\" fontSize=\"12px\">\r\n        Back\r\n      </Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ManageTop;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 1100px;\r\n  min-width: 600px;\r\n  margin: 0 auto;\r\n  color: ${({ theme }) => theme.colors.black};\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: ${({ theme }) => theme.colors.grey3};\r\n`;\r\n\r\nconst AboutBottomBarBox = ({ children }: { children: string | number }) => {\r\n  return <Wrapper>{children}</Wrapper>;\r\n};\r\n\r\nexport default AboutBottomBarBox;\r\n","import styled from \"styled-components\";\r\n\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 120px 1fr;\r\n  width: 100%;\r\n  height: 100px;\r\n  padding: 20px 20px 20px 5px;\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  color: ${({ theme }) => theme.colors.white};\r\n\r\n  .text {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const CalculationsWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr 2fr 2fr;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const Calc = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  p {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n","import { InitialPatientType } from 'types/interfaces';\r\n\r\nconst useCalculate = (patient: InitialPatientType) => {\r\n  const calculateBMI = () => {\r\n    const height = Number(patient.height) / 100;\r\n    const BMI = (Number(patient.bodymass) / Math.pow(height, 2)).toFixed(2).toString();\r\n    return BMI;\r\n  };\r\n\r\n  const BMIdescription = () => {\r\n    const height = Number(patient.height) / 100;\r\n    let BMI = Number((Number(patient.bodymass) / Math.pow(height, 2)).toFixed(2));\r\n    if (BMI < 25 && BMI > 18.5) {\r\n      return 'Normal';\r\n    } else if (BMI >= 25) {\r\n      return 'Obesity';\r\n    } else if (BMI <= 18.5) {\r\n      return 'Underweight';\r\n    } else {\r\n      return 'OK';\r\n    }\r\n  };\r\n\r\n  const calculateRisk = () => {\r\n    const height = Number(patient.height) / 100;\r\n    let BMI = Number((Number(patient.bodymass) / Math.pow(height, 2)).toFixed(2));\r\n    if (BMI < 25 && BMI > 18.5) {\r\n      return 'Lowest';\r\n    } else if (BMI >= 25 && BMI <= 35) {\r\n      return 'High';\r\n    } else if (BMI >= 35) {\r\n      return 'Very high';\r\n    } else if (BMI <= 18.5) {\r\n      return 'High';\r\n    } else {\r\n      return 'OK';\r\n    }\r\n  };\r\n\r\n  const idealWeight = () => {\r\n    const height = Number(patient.height);\r\n    let idealWeightMin = '';\r\n    let idealWeightMax = '';\r\n    if (patient.sex === 'Male') {\r\n      idealWeightMin = (height - 100 - (height - 138) / 4).toString();\r\n      idealWeightMax = (height - 100 - (height - 162) / 4).toString();\r\n    } else {\r\n      idealWeightMin = (height - 100 - (height - 138) / 2).toString();\r\n      idealWeightMax = (height - 100 - (height - 162) / 2).toString();\r\n    }\r\n\r\n    return `${idealWeightMin} - ${idealWeightMax} kg`;\r\n  };\r\n\r\n  const calculateCPM = () => {\r\n    const CPM = (66.5 + 13.75 * Number(patient.bodymass) + 5.003 * Number(patient.height) - 6.775 * Number(patient.age)) * Number(patient.activity);\r\n    return CPM.toFixed().toString();\r\n  };\r\n\r\n\r\n\r\n  return { calculateBMI, BMIdescription, calculateRisk, idealWeight, calculateCPM };\r\n};\r\n\r\nexport default useCalculate;\r\n","import AboutBottomBarBox from 'components/atoms/AboutBottomBarBox/AboutBottomBarBox';\r\nimport React, { useContext } from 'react';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { CalculationsWrapper, Calc, Wrapper } from './AboutBottomBar.styles';\r\nimport useCalculate from 'hooks/useCalculate';\r\n\r\nconst AboutBottomBar = () => {\r\n  const { patient } = useContext(PatientContext);\r\n  const { BMIdescription, calculateBMI, calculateRisk, idealWeight } = useCalculate(patient);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"text\">Body weight assessment</div>\r\n      <CalculationsWrapper>\r\n        <Calc>\r\n          <p>BMI</p>\r\n          <AboutBottomBarBox>{patient.bodymass && patient.height ? calculateBMI() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n        <Calc>\r\n          <p>Description</p>\r\n          <AboutBottomBarBox>{patient.bodymass && patient.height ? BMIdescription() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n        <Calc>\r\n          <p>Risk of cardiovascular disease</p>\r\n          <AboutBottomBarBox>{patient.bodymass && patient.height ? calculateRisk() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n        <Calc>\r\n          <p>Ideal body weight</p>\r\n          <AboutBottomBarBox>{patient.bodymass && patient.height ? idealWeight() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n      </CalculationsWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AboutBottomBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  .sex {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n  div {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 35px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding-right: 5%;\r\n\r\n    label {\r\n      input {\r\n        margin: 0 5px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Wrapper } from './SexButton.styles';\r\n\r\nconst SexButton = () => {\r\n  return (\r\n    <Wrapper>\r\n      <label className=\"sex\">Sex</label>\r\n      <div>\r\n        <label>\r\n          <input type=\"radio\" name=\"sex\" value=\"Male\" />\r\n          Male\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"sex\" value=\"Female\" />\r\n          Female\r\n        </label>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SexButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.form`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 15px;\r\n  width: 100%;\r\n  min-height: calc(100vh - 175px);\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n\r\n  div:nth-child(1) {\r\n    grid-area: 1/1/2/3;\r\n  }\r\n  div:nth-child(2) {\r\n    grid-area: 1/3/2/5;\r\n  }\r\n  div:nth-child(3) {\r\n    grid-area: 1/5/2/6;\r\n  }\r\n  div:nth-child(4) {\r\n    grid-area: 1/6/2/7;\r\n  }\r\n  div:nth-child(5) {\r\n    grid-area: 2/1/3/2;\r\n  }\r\n  div:nth-child(6) {\r\n    grid-area: 2/2/3/3;\r\n  }\r\n  div:nth-child(7) {\r\n    grid-area: 2/3/3/5;\r\n  }\r\n  div:nth-child(8) {\r\n    grid-area: 2/5/3/7;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n\r\n  label {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 35px;\r\n    border: none;\r\n    border-radius: 6px;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    padding: 0 10px;\r\n    -webkit-appearance: none;\r\n  }\r\n  \r\n`;\r\n\r\nexport const TextArea = styled.div`\r\n  width: 100%;\r\n  grid-area: 3/1/4/5;\r\n\r\n  label {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n  textarea {\r\n    width: 100%;\r\n    border: none;\r\n    border-radius: 6px;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    padding: 10px;\r\n    height: 100px;\r\n    font-family: 'Montserrat', sans-serif;\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n\r\nexport const Slider = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  grid-area: 4/1/5/7;\r\n \r\n  p {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n  input {\r\n    width: 100%;\r\n    -webkit-appearance: none;\r\n    margin: 7px 0;\r\n  }\r\n  .minmax {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n  }\r\n  input::-webkit-slider-runnable-track {\r\n    width: 100%;\r\n    height: 10px;\r\n    cursor: pointer;\r\n    background: ${({ theme }) => theme.colors.blue3};\r\n    border-radius: 3px;\r\n  }\r\n\r\n  input::-webkit-slider-thumb {\r\n    height: 22px;\r\n    width: 15px;\r\n    border-radius: 5px;\r\n    background-color: ${({ theme }) => theme.colors.grey4};\r\n    cursor: pointer;\r\n    -webkit-appearance: none;\r\n    margin-top: -6.5px;\r\n  }\r\n`;\r\n","import SexButton from 'components/molecules/SexButton/SexButton';\r\nimport React, { useContext, useEffect, useRef } from 'react';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { useParams } from 'react-router';\r\nimport axios from 'axios';\r\nimport { Input, Slider, TextArea, Wrapper } from './AboutForm.styles';\r\nimport { addNewPatient } from 'store/store';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nconst AboutForm = () => {\r\n  const { id } = useParams();\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  const nameValue = useRef<HTMLInputElement>(null);\r\n  const surnameValue = useRef<HTMLInputElement>(null);\r\n  const ageValue = useRef<HTMLInputElement>(null);\r\n  const telephoneValue = useRef<HTMLInputElement>(null);\r\n  const emailValue = useRef<HTMLInputElement>(null);\r\n  const bodymassValue = useRef<HTMLInputElement>(null);\r\n  const heightValue = useRef<HTMLInputElement>(null);\r\n  const notesValue = useRef<HTMLTextAreaElement>(null);\r\n  const activityValue = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      axios\r\n        .get(`/dietmaster/patient/about/${id}`)\r\n        .then(({ data }) => {\r\n          data[0] && setPatient(data[0]);\r\n        })\r\n        .catch((err) => console.log(err));\r\n\r\n      if (nameValue.current) {\r\n        nameValue.current.value = patient.name;\r\n      }\r\n      if (surnameValue.current) {\r\n        surnameValue.current.value = patient.surname;\r\n      }\r\n      if (ageValue.current) {\r\n        ageValue.current.value = patient.age;\r\n      }\r\n      if (telephoneValue.current) {\r\n        telephoneValue.current.value = patient.telephone;\r\n      }\r\n      if (emailValue.current) {\r\n        emailValue.current.value = patient.email;\r\n      }\r\n      if (bodymassValue.current) {\r\n        bodymassValue.current.value = patient.bodymass;\r\n      }\r\n      if (heightValue.current) {\r\n        heightValue.current.value = patient.height;\r\n      }\r\n      if (notesValue.current) {\r\n        notesValue.current.value = patient.notes;\r\n      }\r\n      if (activityValue.current) {\r\n        activityValue.current.value = patient.activity;\r\n      }\r\n    }\r\n  }, []);\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(addNewPatient(patient))\r\n  }, [patient]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    setPatient({\r\n      ...patient,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper onChange={handleChange}>\r\n      <Input>\r\n        <label htmlFor=\"Name\">Name</label>\r\n        <input ref={nameValue} id=\"name\" name=\"name\" type=\"text\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Surname\">Surname</label>\r\n        <input ref={surnameValue} id=\"surname\" name=\"surname\" type=\"text\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Age\">Age</label>\r\n        <input ref={ageValue} id=\"age\" name=\"age\" type=\"number\" />\r\n      </Input>\r\n      <SexButton />\r\n      <Input>\r\n        <label htmlFor=\"Body mass (kg)\">Body mass (kg)</label>\r\n        <input ref={bodymassValue} id=\"bodymass\" name=\"bodymass\" type=\"number\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Height (cm)\">Height (cm)</label>\r\n        <input ref={heightValue} id=\"height\" name=\"height\" type=\"number\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Telephone\">Telephone</label>\r\n        <input ref={telephoneValue} id=\"telephone\" name=\"telephone\" type=\"tel\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"E-mail\">E-mail</label>\r\n        <input ref={emailValue} id=\"email\" name=\"email\" type=\"email\" />\r\n      </Input>\r\n      <TextArea>\r\n        <label htmlFor=\"Notes\">Notes</label>\r\n        <textarea ref={notesValue} id=\"notes\" name=\"notes\" />\r\n      </TextArea>\r\n      <Slider>\r\n        <p>Physical activity</p>\r\n        <input ref={activityValue} id=\"activity\" name=\"activity\" type=\"range\" min=\"1.2\" max=\"2.4\" step=\"0.1\" />\r\n        <div className=\"minmax\">\r\n          <p>1.2</p>\r\n          <p>2.4</p>\r\n        </div>\r\n      </Slider>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AboutForm;\r\n","import React from 'react';\r\nimport ManageNavBar from 'components/organisms/ManageNavBar/ManageNavBar';\r\nimport ManageTop from 'components/organisms/ManageTop/ManageTop';\r\nimport { Wrapper } from './About.styles';\r\nimport AboutBottomBar from 'components/organisms/AboutBottomBar/AboutBottomBar';\r\nimport AboutForm from 'components/organisms/AboutForm/AboutForm';\r\n\r\nconst About = () => {\r\n  return (\r\n      <Wrapper>\r\n        <ManageTop />\r\n        <ManageNavBar />\r\n        <AboutForm />\r\n        <AboutBottomBar />\r\n      </Wrapper>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 15px;\r\n  width: 100%;\r\n  min-height: calc(100vh - 75px);\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n`;\r\nexport const Sliders = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  gap: 15px;\r\n`;\r\n\r\nexport const SliderDesc = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-left: 70px;\r\n  margin-top: -10px;\r\n`;\r\n\r\nexport const SliderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  h4 {\r\n    margin: 2px 0 5px;\r\n    font-weight: 400;\r\n  }\r\n`;\r\n\r\nexport const SliderInput = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: ${({ theme }) => theme.colors.grey4};\r\n    width: 60px;\r\n    height: 30px;\r\n    border-radius: 5px;\r\n    margin-right: 14px;\r\n    color: white;\r\n    overflow: hidden;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    -webkit-appearance: none;\r\n    margin: 10px 0;\r\n    width: 100%;\r\n  }\r\n\r\n  input::-webkit-slider-runnable-track {\r\n    width: 100%;\r\n    height: 10px;\r\n    cursor: pointer;\r\n    background: ${({ theme }) => theme.colors.blue3};\r\n    border-radius: 3px;\r\n  }\r\n\r\n  input::-webkit-slider-thumb {\r\n    height: 25px;\r\n    width: 15px;\r\n    border-radius: 5px;\r\n    background-color: ${({ theme }) => theme.colors.grey4};\r\n    cursor: pointer;\r\n    -webkit-appearance: none;\r\n    margin-top: -8px;\r\n  }\r\n\r\n  .blue::-webkit-slider-runnable-track {\r\n    background: ${({ theme }) => theme.colors.blue3};\r\n  }\r\n  .red::-webkit-slider-runnable-track {\r\n    background: ${({ theme }) => theme.colors.red};\r\n  }\r\n  .yellow::-webkit-slider-runnable-track {\r\n    background: ${({ theme }) => theme.colors.yellow};\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n`;\r\n\r\nexport const CPMWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nexport const ShowCPM = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-content: center;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  height: 75px;\r\n  width: 200px;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  font-size: ${({ theme }) => theme.fontSizes.xm};\r\n  color: white;\r\n\r\n  input {\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: ${({ theme }) => theme.fontSizes.l};\r\n    padding: 5px;\r\n    text-align: center;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n  }\r\n  div {\r\n    font-size: ${({ theme }) => theme.fontSizes.l};\r\n    padding: 5px;\r\n  }\r\n`;\r\n\r\nexport const MicronutrientsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n  margin: 5px 0;\r\n`;\r\n\r\nexport const MicronutrientsColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n  align-items: flex-end;\r\n`;\r\n\r\nexport const Nutrient = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-size: 0.9rem;\r\n\r\n  input {\r\n    text-align: right;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    width: 60px;\r\n    height: 21px;\r\n    border-radius: 3px;\r\n    padding: 2px 6px;\r\n    border: none;\r\n  }\r\n`;\r\n","import { PatientContext } from 'contexts/PatientContext';\r\nimport useCalculate from 'hooks/useCalculate';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewPatient } from 'store/store';\r\nimport {\r\n  Nutrient,\r\n  CPMWrapper,\r\n  Input,\r\n  MicronutrientsColumn,\r\n  MicronutrientsWrapper,\r\n  ShowCPM,\r\n  SliderDesc,\r\n  SliderInput,\r\n  Sliders,\r\n  SliderWrapper,\r\n  Wrapper,\r\n} from './DietForm.styles';\r\n\r\nconst DietForm = () => {\r\n  const { id } = useParams();\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  const { calculateCPM } = useCalculate(patient);\r\n  const caloriesValue = useRef<HTMLInputElement>(null);\r\n  const proteinValue = useRef<HTMLInputElement>(null);\r\n  const fatValue = useRef<HTMLInputElement>(null);\r\n  const carbsValue = useRef<HTMLInputElement>(null);\r\n\r\n  const patientsList = useSelector((state: any) => state.patientsList);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const getPatient = patientsList.filter((patient: any) => patient.id === Number(id));\r\n      setPatient(getPatient[0]);\r\n\r\n      if (proteinValue.current) {\r\n        proteinValue.current.value = patient.protein;\r\n      }\r\n      if (carbsValue.current) {\r\n        carbsValue.current.value = patient.carbs;\r\n      }\r\n      if (fatValue.current) {\r\n        fatValue.current.value = patient.fat;\r\n      }\r\n      if (caloriesValue.current) {\r\n        caloriesValue.current.value = patient.calories;\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    setPatient({\r\n      ...patient,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(addNewPatient(patient));\r\n  }, [patient]);\r\n\r\n  return (\r\n    <Wrapper onChange={handleChange}>\r\n      <CPMWrapper>\r\n        <ShowCPM>\r\n          <p>Recommended CPM</p>\r\n          <div>{patient.bodymass && patient.age && patient.height && `${calculateCPM()} kcal`}</div>\r\n        </ShowCPM>\r\n        <ShowCPM>\r\n          <p>Energy deficit / surplus</p>\r\n          <input id=\"calories\" name=\"calories\" type=\"number\" ref={caloriesValue} />\r\n        </ShowCPM>\r\n        <ShowCPM>\r\n          <p>Established CPM</p>\r\n          <div>{patient.bodymass && patient.age && patient.height && `${Number(calculateCPM()) + Number(patient.calories)} kcal`}</div>\r\n        </ShowCPM>\r\n      </CPMWrapper>\r\n      <Sliders>\r\n        <SliderWrapper>\r\n          <h4>Protein</h4>\r\n          <SliderInput>\r\n            <div>{patient.bodymass && patient.age && patient.height && `${(((Number(calculateCPM()) + Number(patient.calories)) * Number(patient.protein)) / 400).toFixed()}g`}</div>\r\n            <input className=\"red\" id=\"protein\" name=\"protein\" type=\"range\" min=\"1\" max=\"100\" step=\"1\" ref={proteinValue} />\r\n          </SliderInput>\r\n        </SliderWrapper>\r\n        <SliderWrapper>\r\n          <h4>Fat</h4>\r\n          <SliderInput>\r\n            <div>{patient.bodymass && patient.age && patient.height && `${(((Number(calculateCPM()) + Number(patient.calories)) * Number(patient.fat)) / 900).toFixed()}g`}</div>\r\n            <input className=\"yellow\" id=\"fat\" name=\"fat\" type=\"range\" min=\"1\" max=\"100\" step=\"1\" ref={fatValue} />\r\n          </SliderInput>\r\n        </SliderWrapper>\r\n        <SliderWrapper>\r\n          <h4>Carbohydrates</h4>\r\n          <SliderInput>\r\n            <div>{patient.bodymass && patient.age && patient.height && `${(((Number(calculateCPM()) + Number(patient.calories)) * Number(patient.carbs)) / 400).toFixed()}g`}</div>\r\n            <Input className=\"blue\" id=\"carbs\" name=\"carbs\" type=\"range\" min=\"1\" max=\"100\" step=\"1\" ref={carbsValue} />\r\n          </SliderInput>\r\n        </SliderWrapper>\r\n        <SliderDesc>\r\n          <p>0%</p>\r\n          <p>100%</p>\r\n        </SliderDesc>\r\n      </Sliders>\r\n      <MicronutrientsWrapper>\r\n        <MicronutrientsColumn>\r\n          <Nutrient>\r\n            <p>fiber [g]</p>\r\n            <input type=\"text\" value=\"20\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>sugar [g]</p>\r\n            <input type=\"text\" value=\"42.5\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>SFA [g]</p>\r\n            <input type=\"text\" value=\"9.8\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>MUFA [g]</p>\r\n            <input type=\"text\" value=\"29\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>PUFA [g]</p>\r\n            <input type=\"text\" value=\"16.1\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>omega-3 [g]</p>\r\n            <input type=\"text\" value=\"1.9\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>omega-6 [g]</p>\r\n            <input type=\"text\" value=\"4.6\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>cholesterol [mg]</p>\r\n            <input type=\"text\" value=\"300\" readOnly />\r\n          </Nutrient>\r\n        </MicronutrientsColumn>\r\n        <MicronutrientsColumn>\r\n          <Nutrient>\r\n            <p>sodium [mg]</p>\r\n            <input type=\"text\" value=\"1300\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>potassium [mg]</p>\r\n            <input type=\"text\" value=\"3500\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>calcium [mg]</p>\r\n            <input type=\"text\" value=\"1200\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>phosphorus [mg]</p>\r\n            <input type=\"text\" value=\"700\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>magnesium [mg]</p>\r\n            <input type=\"text\" value=\"320\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>iron [mg]</p>\r\n            <input type=\"text\" value=\"10\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>zinc [mg]</p>\r\n            <input type=\"text\" value=\"8\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>copper [mg]</p>\r\n            <input type=\"text\" value=\"0.9\" readOnly />\r\n          </Nutrient>\r\n        </MicronutrientsColumn>\r\n        <MicronutrientsColumn>\r\n          <Nutrient>\r\n            <p>vit. A [µg]</p>\r\n            <input type=\"text\" value=\"700\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. D [µg]</p>\r\n            <input type=\"text\" value=\"15\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. E [mg]</p>\r\n            <input type=\"text\" value=\"8\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. K [µg]</p>\r\n            <input type=\"text\" value=\"90\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. B1 [mg]</p>\r\n            <input type=\"text\" value=\"1.1\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. B6 [mg]</p>\r\n            <input type=\"text\" value=\"1.5\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. B12 [mg]</p>\r\n            <input type=\"text\" value=\"2.4\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. C [mg]</p>\r\n            <input type=\"text\" value=\"75\" readOnly />\r\n          </Nutrient>\r\n        </MicronutrientsColumn>\r\n      </MicronutrientsWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DietForm;\r\n","import ManageNavBar from 'components/organisms/ManageNavBar/ManageNavBar';\r\nimport ManageTop from 'components/organisms/ManageTop/ManageTop';\r\nimport { Wrapper } from './About.styles';\r\nimport DietForm from 'components/organisms/DietForm/DietForm';\r\n\r\nconst Diet = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ManageTop />\r\n      <ManageNavBar />\r\n      <DietForm />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Diet;\r\n","export default __webpack_public_path__ + \"static/media/logo.8af3b97f.png\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 350px;\r\n  padding: 30px 20px;\r\n  margin-bottom: 50px;\r\n  gap: 15px;\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n  border-radius: 6px;\r\n  box-shadow: rgba(0, 0, 0, 0.07) 0px 1px 2px, rgba(0, 0, 0, 0.07) 0px 2px 4px, rgba(0, 0, 0, 0.07) 0px 4px 8px, rgba(0, 0, 0, 0.07) 0px 8px 16px,\r\n    rgba(54, 44, 44, 0.07) 0px 16px 32px, rgba(0, 0, 0, 0.07) 0px 32px 64px;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  height: 100px;\r\n  margin: 15px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  height: 35px;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  padding: 8px;\r\n  margin: 10px 0;\r\n  border-radius: 6px;\r\n  border: none;\r\n`;\r\nexport const Label = styled.label`\r\n  width: 100%;\r\n  font-size: ${({ theme }) => theme.fontSizes.xm};\r\n`;\r\n","import { ILoginInput } from 'types/interfaces';\r\nimport React from 'react';\r\nimport { Input, Label, Wrapper } from './LoginInput.styles';\r\n\r\nconst LoginInput = React.forwardRef(({ label, name, id, type, value, onChange, ...props }: ILoginInput, ref: any) => {\r\n  return (\r\n    <Wrapper>\r\n      <Label htmlFor={id}>{label}</Label>\r\n      <Input name={name} type={type} id={id} onChange={onChange} value={value} {...props} ref={ref} />\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default LoginInput;\r\n","import { useForm } from 'react-hook-form';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport logo from '../assets/images/logo.png'\r\nimport { useAuth } from 'hooks/useAuth';\r\nimport { Wrapper, Form, Image } from './Login.styles';\r\nimport LoginInput from 'components/molecules/LoginInput/LoginInput';\r\n\r\n\r\nconst Login = () => {\r\n  const { signIn } = useAuth();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src={logo} />\r\n      <Form onSubmit={handleSubmit(signIn)}>\r\n        <LoginInput id=\"login\" label=\"Login\" type=\"text\" placeholder='login: jack123' {...register('login', { required: true })} />\r\n        {/* {errors.login ?? <h6>Login is required</h6>} */}\r\n        <LoginInput id=\"password\" label=\"Password\" type=\"password\" placeholder='pass: Pass123' {...register('password', { required: true })} />\r\n        {/* {errors.password ?? <h6>Password is required</h6>}  */}\r\n        <Button type=\"submit\">Sign in</Button>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { IButton } from 'types/interfaces';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button<IButton>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  height: 25px;\r\n  width: 25px;\r\n  background-color: transparent;\r\n  border: none;\r\n  font-size: ${({ fontSize, theme: { fontSizes } }) => (fontSize ? fontSize : fontSizes.xl)};\r\n  color: ${({ color, theme: { colors } }) => (color ? color : colors.blue3)};\r\n`;\r\n\r\nconst AllergensListButton = ({ ...props }: IButton) => {\r\n  return <StyledButton {...props}>{props.children}</StyledButton>;\r\n};\r\n\r\nexport default AllergensListButton;\r\n","import AllergensListButton from 'components/atoms/AllergensListButton/AllergensListButton';\r\nimport React, { useState } from 'react';\r\nimport { MdAddCircle } from 'react-icons/md';\r\nimport styled from 'styled-components';\r\n\r\nconst Form = styled.form`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-left: 5px;\r\n    padding-right: 40px;\r\n    font-size: 1rem;\r\n    line-height: 1rem;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background-color: white;\r\n  }\r\n\r\n  input::placeholder {\r\n    padding-left: 5px;\r\n    font-size: ${({ theme }) => theme.fontSizes.xm};\r\n  }\r\n  div {\r\n    position: absolute;\r\n    right: 8px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`;\r\n\r\ninterface IAllergensInput {\r\n  handleSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\r\n  placeholder: string;\r\n  setItem: React.Dispatch<React.SetStateAction<string>>;\r\n  item: string;\r\n  color?: string;\r\n}\r\n\r\nconst AllergensInput = ({ placeholder, handleSubmit, setItem, item, color }: IAllergensInput) => {\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <input value={item} onChange={(e) => setItem(e.target.value)} maxLength={20} type=\"text\" placeholder={placeholder} />\r\n      <div>\r\n        <AllergensListButton color={color}>\r\n          <MdAddCircle />\r\n        </AllergensListButton>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AllergensInput;\r\n","import AllergensListButton from 'components/atoms/AllergensListButton/AllergensListButton';\r\nimport { MdRemoveCircle } from 'react-icons/md';\r\nimport styled from 'styled-components';\r\n\r\ninterface IAllergensList {\r\n  allergensList: string[];\r\n  deleteItem: (choosedItem: string) => void;\r\n  color?: string;\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  ul {\r\n    width: 100%;\r\n  }\r\n\r\n  li {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 5px 8px;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst AllergensList = ({ allergensList, deleteItem, color }: IAllergensList) => {\r\n  return (\r\n    <Wrapper>\r\n      <ul>\r\n        {allergensList.map((item, index) => {\r\n          return (\r\n            <li key={index}>\r\n              {item}\r\n              <div>\r\n                <AllergensListButton color={color} onClick={() => deleteItem(item)}>\r\n                  <MdRemoveCircle />\r\n                </AllergensListButton>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AllergensList;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 20px;\r\n \r\n  h3 {\r\n    text-align: center;\r\n    margin: 5px 0;\r\n  }\r\n  p {\r\n    text-align: center;\r\n    margin: 10px 0;\r\n    font-size: ${({ theme }) => theme.fontSizes.xm};\r\n  }\r\n`;\r\n","import AllergensInput from 'components/molecules/AllergensInput/AllergensInput';\r\nimport AllergensList from 'components/molecules/AllergensList/AllergensList';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Wrapper } from './AllergensForm.styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addAlergens, addNewPatient } from 'store/store';\r\nimport { useParams } from 'react-router-dom';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\n\r\nconst AllergensForm = () => {\r\n  const { id } = useParams();\r\n  const [allergensList, setAllergensList] = useState<string[]>([]);\r\n  const [item, setItem] = useState('');\r\n  const patientsList = useSelector((state: any) => state.patientsList);\r\n  const dispatch = useDispatch();\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\r\n    event.preventDefault();\r\n\r\n    if (item) {\r\n      setAllergensList([...allergensList, item]);\r\n      setItem('');\r\n    } else if (!item) {\r\n      alert('Please enter value!');\r\n    }\r\n  };\r\n\r\n  const deleteItem = (choosedItem: string) => {\r\n    setAllergensList(allergensList.filter((item) => item !== choosedItem));\r\n  };\r\n  useEffect(() => {\r\n    const getList = patientsList.filter((item: typeof patient) => item.id === Number(id));\r\n    setAllergensList(getList[0].allergens);\r\n  }, []);\r\n  useEffect(() => {\r\n    setPatient({ ...patient, allergens: allergensList })\r\n    dispatch(addNewPatient({...patient, allergens: allergensList}))\r\n  }, [allergensList]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h3>Allergens</h3>\r\n      <AllergensInput color=\"#D90000\" placeholder=\"\" item={item} setItem={setItem} handleSubmit={handleSubmit} />\r\n\r\n      {allergensList.length ? (\r\n        <>\r\n          <AllergensList color=\"#D90000\" deleteItem={deleteItem} allergensList={allergensList} />\r\n        </>\r\n      ) : (\r\n        <p>Patient doesn't have any allergies</p>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AllergensForm;\r\n","import AllergensInput from 'components/molecules/AllergensInput/AllergensInput';\r\nimport AllergensList from 'components/molecules/AllergensList/AllergensList';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Wrapper } from '../AllergensForm/AllergensForm.styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewPatient } from 'store/store';\r\nimport { useParams } from 'react-router-dom';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\n\r\nconst DiseasesForm = () => {\r\n  const [diseasesList, setDiseasesList] = useState<string[]>([]);\r\n  const [item, setItem] = useState('');\r\n  const patientsList = useSelector((state: any) => state.patientsList);\r\n  const dispatch = useDispatch();\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  const { id } = useParams();\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\r\n    event.preventDefault();\r\n\r\n    if (item) {\r\n      setDiseasesList([...diseasesList, item]);\r\n      setItem('');\r\n    } else if (!item) {\r\n      alert('Please enter value!');\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const getList = patientsList.filter((item: typeof patient) => item.id === Number(id));\r\n    setDiseasesList(getList[0].diseases);\r\n  }, []);\r\n  useEffect(() => {\r\n    setPatient({ ...patient, diseases: diseasesList })\r\n    dispatch(addNewPatient({ ...patient, diseases: diseasesList }));\r\n  }, [diseasesList]);\r\n \r\n  const deleteItem = (choosedItem: string) => {\r\n    console.log(choosedItem);\r\n    setDiseasesList(diseasesList.filter((item) => item !== choosedItem));\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <h3>Diseases</h3>\r\n      <AllergensInput placeholder=\"\" item={item} setItem={setItem} handleSubmit={handleSubmit} />\r\n\r\n      {diseasesList.length ? (\r\n        <>\r\n          <AllergensList deleteItem={deleteItem} allergensList={diseasesList} />\r\n        </>\r\n      ) : (\r\n        <p>Patient doesn't have any diseases</p>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DiseasesForm;\r\n","import AllergensInput from 'components/molecules/AllergensInput/AllergensInput';\r\nimport AllergensList from 'components/molecules/AllergensList/AllergensList';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Wrapper } from '../AllergensForm/AllergensForm.styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewPatient } from 'store/store';\r\nimport { useParams } from 'react-router-dom';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\n\r\nconst PreferencesForm = () => {\r\n  const { id } = useParams();\r\n  const [preferencesList, setPreferencesList] = useState<string[]>(['rice', 'sausage', 'avocado']);\r\n  const [item, setItem] = useState('');\r\n  const patientsList = useSelector((state: any) => state.patientsList);\r\n  const dispatch = useDispatch();\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\r\n    event.preventDefault();\r\n\r\n    if (item) {\r\n      setPreferencesList([...preferencesList, item]);\r\n      setItem('');\r\n    } else if (!item) {\r\n      alert('Please enter value!');\r\n    }\r\n  };\r\n\r\n  const deleteItem = (choosedItem: string) => {\r\n    console.log(choosedItem);\r\n    setPreferencesList(preferencesList.filter((item) => item !== choosedItem));\r\n  };\r\n  useEffect(() => {\r\n    const getList = patientsList.filter((item: typeof patient) => item.id === Number(id));\r\n    setPreferencesList(getList[0].preferences);\r\n  }, []);\r\n  useEffect(() => {\r\n    setPatient({ ...patient, preferences: preferencesList })\r\n    dispatch(addNewPatient({ ...patient, preferences: preferencesList }));\r\n  }, [preferencesList]);\r\n  return (\r\n    <Wrapper>\r\n      <h3>Doesn't like</h3>\r\n      <AllergensInput color=\"#F8DA00\" placeholder=\"\" item={item} setItem={setItem} handleSubmit={handleSubmit} />\r\n\r\n      {preferencesList.length ? (\r\n        <>\r\n          <AllergensList color=\"#F8DA00\" deleteItem={deleteItem} allergensList={preferencesList} />\r\n        </>\r\n      ) : (\r\n        <p>Patient doesn't have any preferences</p>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PreferencesForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  padding: 15px;\r\n  width: 100%;\r\n  min-height: calc(100vh - 75px);\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n`;\r\n","import AllergensForm from '../AllergensForm/AllergensForm';\r\nimport DiseasesForm from '../DiseasesForm/DiseasesForm';\r\nimport PreferencesForm from '../PreferencesForm/PreferencesForm';\r\nimport { Wrapper } from './AllergensFormContainer.styles';\r\n\r\nconst AllergensFormContainer = () => {\r\n  return (\r\n    <Wrapper>\r\n      <AllergensForm />\r\n      <PreferencesForm />\r\n      <DiseasesForm />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AllergensFormContainer;\r\n","import AllergensFormContainer from 'components/organisms/AllergensFormContainer/AllergensFormContainer';\r\nimport ManageNavBar from 'components/organisms/ManageNavBar/ManageNavBar';\r\nimport ManageTop from 'components/organisms/ManageTop/ManageTop';\r\n\r\nimport { Wrapper } from './About.styles';\r\n\r\nconst Allergens = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ManageTop />\r\n      <ManageNavBar />\r\n      <AllergensFormContainer />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Allergens;\r\n","import ManageNavBar from 'components/organisms/ManageNavBar/ManageNavBar';\r\nimport ManageTop from 'components/organisms/ManageTop/ManageTop';\r\nimport { Wrapper } from './About.styles';\r\n\r\nconst BloodTests = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ManageTop />\r\n      <ManageNavBar />\r\n      \r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default BloodTests;\r\n","import ManageNavBar from 'components/organisms/ManageNavBar/ManageNavBar';\r\nimport ManageTop from 'components/organisms/ManageTop/ManageTop';\r\nimport { Wrapper } from './About.styles';\r\n\r\nconst Appointments = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ManageTop />\r\n      <ManageNavBar />\r\n      \r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { GlobalStyle } from 'assets/styles/GlobalStyle';\nimport { Wrapper } from './Root.styles';\nimport Main from './Main';\nimport About from './About';\nimport Diet from './Diet';\nimport Login from './Login';\nimport { useAuth } from 'hooks/useAuth';\nimport Allergens from './Allergens';\nimport BloodTests from './BloodTests';\nimport Appointments from './Appointments';\n\nconst Root = () => {\n  const { user } = useAuth();\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <GlobalStyle />\n        <Routes>\n          {user.login ? (\n            <Wrapper>\n              <Route path=\"/patient/appointments/:id\" element={<Appointments />} />\n              <Route path=\"/patient/blood-tests/:id\" element={<BloodTests />} />\n              <Route path=\"/patient/allergens/:id\" element={<Allergens />} />\n              <Route path=\"/patient/diet/:id\" element={<Diet />} />\n              <Route path=\"/patient/about/:id\" element={<About />} />\n              <Route path=\"/\" element={<Main />} />\n              <Route path=\"*\" element={<Navigate to=\"/\" />} />\n            </Wrapper>\n          ) : (\n            <>\n              <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n              <Route path=\"/login\" element={<Login />} />\n            </>\n          )}\n        </Routes>\n    </Router>\n  );\n};\n\nexport default Root;\n","export const theme = {\n  colors: {\n    white: '#FFFFFF',\n    black: '#111111',\n    lightBlack: '#343434',\n    grey1: '#E5E5E5',\n    grey2: '#C1C1C1',\n    grey3: '#9D9D9D',\n    grey4: '#505050',\n    blue1: '#50D4FF',\n    blue2: '#16C6FF',\n    blue3: '#00BEFC',\n    blue4: '#00A3D9',\n    red: '#D90000',\n    yellow: '#F8DA00',\n\n  },\n  fontSizes: {\n    xxl: '34px',\n    xl: '24px',\n    l: '17px',\n    xm: '14px',\n    m: '12px',\n    s: '11px',\n  },\n};\n","import { theme } from 'assets/styles/theme';\r\nimport { AuthProvider } from 'hooks/useAuth';\r\nimport { ReactNode } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport PatientProvider from './PatientContext';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from 'store/store';\r\n\r\nconst AppProviders = ({ children }: { children: ReactNode }) => {\r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n        <ThemeProvider theme={theme}>\r\n          <PatientProvider>\r\n            <AuthProvider>{children}</AuthProvider>\r\n          </PatientProvider>\r\n        </ThemeProvider>\r\n      </Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppProviders;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'pages/Root';\nimport AppProviders from 'contexts/AppProviders';\n\nasync function main() {\n  if (window.location.pathname === '/dietmaster') {\n    window.location.pathname = '/dietmaster/';\n    return;\n  }\n  const { worker } = require('./mocks/browser');\n  await worker.start({\n    serviceWorker: {\n      url: '/dietmaster/mockServiceWorker.js',\n    },\n  });\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <AppProviders>\n        <Root />\n      </AppProviders>\n    </React.StrictMode>,\n    document.getElementById('root'),\n  );\n}\nmain();\n","// @ts-nocheck\r\nimport { rest } from 'msw';\r\nimport { db } from 'mocks/db';\r\n\r\nexport const patients = [\r\n  rest.get('/dietmaster', (req, res, ctx) => {\r\n    return res(ctx.status(200), ctx.json(db.patient.getAll()));\r\n  }),\r\n\r\n  rest.post('/dietmaster', (req, res, ctx) => {\r\n    const searchInList = db.patient.getAll().filter((patient) => {\r\n      return patient.name.toLowerCase().includes(`${req.body}`) || patient.surname.toLowerCase().includes(`${req.body}`);\r\n    });\r\n    return res(ctx.status(200), ctx.json(searchInList));\r\n  }),\r\n\r\n  rest.get('/dietmaster/patient/about/:id', (req, res, ctx) => {\r\n    if (req.params.id) {\r\n      const matchingPatient = db.patient.getAll().filter((patient) => patient.id === Number(req.params.id));\r\n      return res(ctx.status(200), ctx.json(matchingPatient));\r\n    }\r\n  }),\r\n\r\n  rest.post('/dietmaster/add', (req, res, ctx) => {\r\n    const patient = req.body;\r\n    db.patient.create(patient);\r\n    return res(ctx.status(200), ctx.json(patient));\r\n  }),\r\n  rest.put('/dietmaster/add', (req, res, ctx) => {\r\n    const updatedPatient = db.patient.update({\r\n      where: {\r\n        id: {\r\n          equals: req.body.id,\r\n        },\r\n      },\r\n      data: req.body,\r\n    });\r\n    return res(ctx.status(200), ctx.json(updatedPatient));\r\n  }),\r\n  rest.delete('/dietmaster', (req, res, ctx) => {\r\n    if (req.body) {\r\n      const removedPatient = db.patient.delete({\r\n        where: {\r\n          id: {\r\n            equals: req.body.id,\r\n          },\r\n        },\r\n      });\r\n      return res(\r\n        ctx.status(200),\r\n        ctx.json({\r\n          removedPatient,\r\n        }),\r\n      );\r\n    }\r\n  }),\r\n];\r\n","// @ts-nocheck\r\nimport { rest } from 'msw';\r\nimport { db } from 'mocks/db';\r\nimport { authenticateRequest } from 'mocks/helpers';\r\n\r\nconst sanitizeUser = (user) => {\r\n  const { password, ...rest } = user;\r\n  return rest;\r\n};\r\n\r\nexport const auth = [\r\n  rest.post('/dietmaster/login', (req, res, ctx) => {\r\n    const user = db.dietitian.findFirst({\r\n      where: {\r\n        login: {\r\n          equals: req.body.login,\r\n        },\r\n      },\r\n    });\r\n    if (user && user.password === req.body.password) {\r\n      const token = btoa(user.login);\r\n      localStorage.setItem('__be_token__', token);\r\n      return res(ctx.status(200), ctx.json({ ...sanitizeUser(user), token }));\r\n    }\r\n    return res(\r\n      ctx.status(403),\r\n      ctx.json({\r\n        error: 'Invalid user data',\r\n      }),\r\n    );\r\n  }),\r\n  rest.get('/me', (req, res, ctx) => {\r\n    if (authenticateRequest(req)) {\r\n      const user = db.dietitian.getAll();\r\n      return res(ctx.status(200), ctx.json({ ...sanitizeUser(user) }));\r\n    }\r\n    return res(ctx.status(401));\r\n  }),\r\n];\r\n","export const authenticateRequest = (req: any) => {\r\n  const token = localStorage.getItem('__be_token__') || null;\r\n  const userToken = req.headers.get('Authorization')?.replace('Bearer ', '');\r\n\r\n  return token === userToken;\r\n};","import { patients } from './patients';\r\nimport { auth } from './auth';\r\n\r\nexport const handlers = [...patients, ...auth];","import { setupWorker } from 'msw';\r\nimport { handlers } from './handlers';\r\nimport { db } from './db';\r\n\r\nexport const worker = setupWorker(...handlers);\r\n\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.dietitian.create()\r\n"],"sourceRoot":""}