{"version":3,"sources":["mocks/db.ts","assets/styles/GlobalStyle.ts","pages/Root.styles.ts","components/atoms/Button/Button.styles.ts","components/atoms/Button/Button.tsx","store/store.tsx","components/organisms/MainBottomBar/MainBottomBar.tsx","types/interfaces.ts","contexts/PatientContext.tsx","components/molecules/MainPatientInfo/MainPatientInfo.styles.ts","components/organisms/Modal/useModal.tsx","components/organisms/Modal/Modal.styles.ts","components/organisms/Modal/Modal.tsx","components/organisms/Modal/TestsModal.styles.ts","components/organisms/Modal/DeleteModal.styles.ts","components/organisms/Modal/DeleteModal.tsx","components/molecules/MainPatientInfo/MainPatientInfo.tsx","components/atoms/InputMain/InputMain.tsx","hooks/useAuth.tsx","components/organisms/MainTopBar/MainTopBar.tsx","pages/Main.styles.ts","pages/Main.tsx","components/atoms/ManageNavButton/ManageNavButton.styles.ts","components/atoms/ManageNavButton/ManageNavButton.tsx","components/organisms/ManageNavBar/ManageNavBar.tsx","components/organisms/ManageTop/ManageTop.styles.ts","components/organisms/ManageTop/ManageTop.tsx","pages/About.styles.ts","components/atoms/AboutBottomBarBox/AboutBottomBarBox.tsx","components/organisms/AboutBottomBar/AboutBottomBar.styles.ts","hooks/useCalculate.tsx","components/organisms/AboutBottomBar/AboutBottomBar.tsx","components/molecules/SexButton/SexButton.styles.ts","components/molecules/SexButton/SexButton.tsx","components/organisms/AboutForm/AboutForm.styles.ts","components/organisms/AboutForm/AboutForm.tsx","pages/About.tsx","components/organisms/DietForm/DietForm.styles.ts","components/organisms/DietForm/DietForm.tsx","pages/Diet.tsx","assets/images/logo.png","pages/Login.styles.ts","components/molecules/LoginInput/LoginInput.styles.ts","components/molecules/LoginInput/LoginInput.tsx","pages/Login.tsx","components/atoms/AllergensListButton/AllergensListButton.tsx","components/molecules/AllergensInput/AllergensInput.styles.ts","components/molecules/AllergensInput/AllergensInput.tsx","components/molecules/AllergensList/AllergensList.tsx","components/organisms/AllergensForm/AllergensForm.styles.ts","components/organisms/AllergensForm/AllergensForm.tsx","components/organisms/DiseasesForm/DiseasesForm.tsx","components/organisms/PreferencesForm/PreferencesForm.tsx","components/organisms/AllergensFormContainer/AllergensFormContainer.styles.ts","components/organisms/AllergensFormContainer/AllergensFormContainer.tsx","pages/Allergens.tsx","components/molecules/BloodTestsFormBottomBar/BloodTestsFormBottomBar.tsx","components/molecules/BloodTestsFormTopBar/BloodTestsFormTopBar.styles.ts","components/molecules/BloodTestsFormTopBar/BloodTestsFormTopBar.tsx","components/molecules/BloodTestPatientInfo/BloodTestPatientInfo.styles.ts","components/molecules/BloodTestPatientInfo/BloodTestPatientInfo.tsx","components/organisms/Modal/TestsModal.tsx","components/organisms/BloodTestsForm/BloodTestsForm.tsx","pages/BloodTests.tsx","components/molecules/AppointmentsFormBottomBar/AppointmentsFormBottomBar.tsx","components/molecules/AppointmentsFormTopBar/AppointmentsFormTopBar.tsx","components/molecules/AppointmentsPatientInfo/AppointmentsPatientInfo.styles.ts","components/molecules/AppointmentsPatientInfo/AppointmentsPatientInfo.tsx","components/organisms/Modal/AppointmentsModal.tsx","components/organisms/AppointmentsForm/AppointmentsForm.tsx","pages/Appointments.tsx","pages/Root.tsx","assets/styles/theme.ts","contexts/AppProviders.tsx","index.tsx","mocks/handlers/patients.ts","mocks/handlers/auth.ts","mocks/helpers.ts","mocks/handlers/index.ts","mocks/browser.ts"],"names":["sex","note","products","getRandomValue","array","index","db","factory","patient","id","primaryKey","faker","datatype","number","min","max","name","fake","surname","age","email","telephone","bodymass","height","notes","activity","precision","calories","protein","fat","carbs","allergens","preferences","diseases","tests","date","type","value","appointments","BMI","hips","waist","dietitian","login","password","GlobalStyle","createGlobalStyle","Wrapper","styled","div","StyledButton","button","marginLeft","padding","backgroundColor","colors","theme","blue3","borderRadius","fontSize","fontSizes","l","white","Button","props","children","fetchPatients","createAsyncThunk","a","axios","get","response","data","console","log","patientFound","addNewPatient","findPatient","findFirst","where","equals","post","put","removePatient","delete","patientsListSlice","createSlice","initialState","reducers","sortPatientsList","state","action","sort","b","payload","extraReducers","builder","addCase","fulfilled","findIndex","push","filter","removedPatient","actions","store","configureStore","reducer","patientsList","grey4","MainBottomBar","useSelector","dispatch","useDispatch","className","onClick","getAll","initialPatientValues","PatientContext","createContext","managePatient","setPatient","searchResults","searchTerm","setSearchTerm","PatientProvider","useState","setSearchResults","useEffect","then","catch","err","Provider","li","grey1","black","useModal","isOpen","setModalState","handleCloseModal","handleOpenModal","ReactModal","Modal","appElement","document","getElementById","onRequestClose","ModalTop","blue2","ModalForm","form","xm","ButtonsWrapper","DeleteModal","patientID","MainPatientInfo","useContext","navigate","useNavigate","handleManageClick","Input","input","InputMain","InitialUserValues","token","AuthContext","signIn","signOut","user","AuthProvider","setUser","localStorage","getItem","headers","authorization","setItem","removeItem","useAuth","lightBlack","MainTopBar","placeholder","onChange","e","currentTarget","toLowerCase","Date","getTime","ul","Main","patients","map","NavLink","color","ManageNavButton","to","ManageNavBar","ManageTop","grey3","AboutBottomBarBox","CalculationsWrapper","Calc","useCalculate","calculateBMI","Number","Math","pow","toFixed","toString","BMIdescription","calculateRisk","idealWeight","idealWeightMin","idealWeightMax","calculateCPM","AboutBottomBar","SexButton","TextArea","Slider","AboutForm","useParams","nameValue","useRef","surnameValue","ageValue","telephoneValue","emailValue","bodymassValue","heightValue","notesValue","activityValue","current","target","htmlFor","ref","step","About","Sliders","SliderDesc","SliderWrapper","SliderInput","red","yellow","CPMWrapper","ShowCPM","MicronutrientsWrapper","MicronutrientsColumn","Nutrient","DietForm","caloriesValue","proteinValue","fatValue","carbsValue","getPatient","readOnly","Diet","Form","Image","img","Label","label","LoginInput","React","forwardRef","Login","useForm","register","handleSubmit","formState","errors","src","logo","onSubmit","required","xl","AllergensListButton","AllergensInput","item","maxLength","AllergensList","allergensList","deleteItem","AllergensForm","setAllergensList","preventDefault","alert","length","choosedItem","DiseasesForm","diseasesList","setDiseasesList","getList","event","PreferencesForm","preferencesList","setPreferencesList","AllergensFormContainer","Allergens","BloodTestsFormBottomBar","BloodTestsFormTopBar","BloodTestPatientInfo","deleteTest","TestsModal","testRecord","setTestRecord","BloodTestsForm","BloodTests","AppointmentsFormBottomBar","AppointmentsFormTopBar","AppointmentsPatientInfo","deleteAppointment","AppointmentsModal","appointmentRecord","setAppointmentRecord","AppointmentsForm","Appointments","Root","basename","process","path","element","grey2","blue1","blue4","xxl","m","s","AppProviders","window","location","pathname","require","worker","start","serviceWorker","url","ReactDOM","render","StrictMode","main","rest","req","res","ctx","status","json","searchInList","includes","body","params","matchingPatient","create","updatedPatient","update","sanitizeUser","auth","btoa","error","replace","authenticateRequest","handlers","setupWorker"],"mappings":"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","file":"static/js/main.56cd9f32.chunk.js","sourcesContent":["import { factory, primaryKey } from '@mswjs/data';\r\nimport faker from 'faker';\r\n\r\nconst sex = ['Male', 'Female'];\r\nconst note = ['Too fat', 'Too skinny'];\r\nconst products = ['soya', 'apple', 'strawberries', 'avocado', 'eggs', 'coffee', 'oats', 'fish', 'milk', 'rice', 'peanuts', 'onion', 'carrot', 'tomato', 'potato', 'cucumber', 'radish', 'beef', 'tofu', 'garlic'];\r\nconst getRandomValue = (array: string[], index: number) => array[index];\r\n\r\nexport const db = factory({\r\n  patient: {\r\n    id: primaryKey(() => faker.datatype.number({ min: 1116550949262, max: 1636550949262 })),\r\n    name: () => faker.fake('{{name.firstName}}'),\r\n    surname: (): string => faker.fake('{{name.lastName}}'),\r\n    age: (): string => `${faker.datatype.number({ min: 20, max: 70 })}`,\r\n    sex: (): string => getRandomValue(sex, faker.datatype.number({ min: 0, max: 1 })),\r\n    email: (): string => faker.fake('{{internet.email}}'),\r\n    telephone: (): string => `${faker.datatype.number({ min: 100000000, max: 999999999 })}`,\r\n    bodymass: (): string => `${faker.datatype.number({ min: 50, max: 110 })}`,\r\n    height: (): string => `${faker.datatype.number({ min: 160, max: 200 })}`,\r\n    notes: (): string => getRandomValue(note, faker.datatype.number({ min: 0, max: 1 })),\r\n    activity: (): string => `${faker.datatype.number({ min: 1.2, max: 2.4, precision: 0.1 })}`,\r\n    calories: (): string => '0',\r\n    protein: (): string => '30',\r\n    fat: (): string => '20',\r\n    carbs: (): string => '50',\r\n    allergens: (): string[] => [\r\n      getRandomValue(products, faker.datatype.number({ min: 0, max: 20 })),\r\n      getRandomValue(products, faker.datatype.number({ min: 0, max: 20 })),\r\n    ],\r\n    preferences: (): string[] => [\r\n      getRandomValue(products, faker.datatype.number({ min: 0, max: 20 })),\r\n      getRandomValue(products, faker.datatype.number({ min: 0, max: 20 })),\r\n    ],\r\n    diseases: (): string[] => [],\r\n    tests: (): any[] => [\r\n      {\r\n        date: '2021-11-26',\r\n        type: 'Red blood cells',\r\n        value: '75 mln',\r\n      },\r\n      {\r\n        date: '2021-11-26',\r\n        type: 'Cholesterol',\r\n        value: '420 mg',\r\n      },\r\n      {\r\n        date: '2021-11-26',\r\n        type: 'Glucose',\r\n        value: '102 mg',\r\n      },\r\n    ],\r\n    appointments: (): any[] => [\r\n      {\r\n        date: '2021-11-26',\r\n        bodymass: '82',\r\n        BMI: '26.1',\r\n        hips: '113',\r\n        waist: '98',\r\n      },\r\n      {\r\n        date: '2021-11-26',\r\n        bodymass: '80',\r\n        BMI: '25.2',\r\n        hips: '107',\r\n        waist: '94',\r\n      },\r\n    ],\r\n  },\r\n  dietitian: {\r\n    id: primaryKey(() => '1'),\r\n    name: () => 'Jacek Placek',\r\n    login: () => 'jack123',\r\n    password: () => 'Pass123',\r\n  },\r\n});\r\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n  }\n  \n  *, *::after, *::before {\n    box-sizing: inherit;\n    margin: 0;\n    padding: 0;\n  }\n  \n  body {\n    font-family: 'Montserrat', sans-serif;\n    margin: 0;\n    padding: 0;\n    overflow-x: hidden;\n    min-width: 700px;\n  }\n  \n  a, button {\n    font-family: 'Montserrat', sans-serif;\n  }\n`;\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n`;","import { IButton } from 'types/interfaces';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button<IButton>`\r\n  cursor: pointer;\r\n  margin-left: ${({ marginLeft }) => (marginLeft ? marginLeft : 'none')};\r\n  padding: ${({ padding }) => (padding ? padding : '8px 20px')};\r\n  background-color: ${({ backgroundColor, theme: { colors } }) => (backgroundColor ? backgroundColor : colors.blue3)};\r\n  border-radius: ${({ borderRadius }) => (borderRadius ? borderRadius : '6px')};\r\n  border: none;\r\n  font-size: ${({ fontSize, theme: { fontSizes } }) => (fontSize ? fontSize : fontSizes.l)};\r\n  color: ${({ theme }) => theme.colors.white};\r\n\r\n  &:hover {\r\n    box-shadow: inset 0 0 100px 100px rgba(255, 255, 255, 0.3);\r\n  }\r\n`;\r\n","import { IButton } from 'types/interfaces';\r\nimport { StyledButton } from './Button.styles';\r\n\r\nconst Button = ({ ...props }: IButton) => {\r\n  return <StyledButton {...props}>{props.children}</StyledButton>;\r\n};\r\n\r\nexport default Button;\r\n","import { createSlice, configureStore, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { db } from 'mocks/db';\r\nimport axios from 'axios';\r\nimport { InitialPatientType, initialPatientValues } from 'types/interfaces';\r\n\r\nconst initialState = [] as InitialPatientType[];\r\n\r\nexport const fetchPatients = createAsyncThunk('patients/getPatients', async () => {\r\n  try {\r\n    const response = await axios.get('/dietmaster');\r\n    return response.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n});\r\n\r\nlet patientFound = false;\r\nexport const addNewPatient = createAsyncThunk('patients/addPatient', async (patient: InitialPatientType) => {\r\n  patientFound = false;\r\n  const findPatient = db.patient.findFirst({\r\n    where: {\r\n      id: {\r\n        equals: patient.id,\r\n      },\r\n    },\r\n  });\r\n  if (!findPatient) {\r\n    try {\r\n      const response = await axios.post('/dietmaster/add', patient);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  } else if (findPatient) {\r\n    patientFound = true;\r\n    try {\r\n      const response = await axios.put('/dietmaster/add', patient);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n});\r\n\r\nexport const removePatient = createAsyncThunk('patients/removePatient', async (patient: number) => {\r\n  const findPatient = db.patient.findFirst({\r\n    where: {\r\n      id: {\r\n        equals: patient,\r\n      },\r\n    },\r\n  });\r\n  if (findPatient) {\r\n    try {\r\n      const response = await axios.delete('/dietmaster', { data: findPatient });\r\n      return response.data;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n});\r\n\r\nconst patientsListSlice = createSlice({\r\n  name: 'patientsList',\r\n  initialState,\r\n  reducers: {\r\n    sortPatientsList(state, action) {\r\n      // eslint-disable-next-line array-callback-return\r\n      return state.sort((a, b): any => {\r\n        if (action.payload === 'female') {\r\n          return a.sex > b.sex ? 1 : b.sex > a.sex ? -1 : 0;\r\n        } else if (action.payload === 'male') {\r\n          return a.sex > b.sex ? -1 : b.sex > a.sex ? 1 : 0;\r\n        } else if (action.payload === 'off') {\r\n          return a.id > b.id ? -1 : b.id > a.id ? 1 : 0;\r\n        } else if (action.payload === 'a-z') {\r\n          return a.surname > b.surname ? 1 : b.surname > a.surname ? -1 : 0;\r\n        } else if (action.payload === 'z-a') {\r\n          return a.surname > b.surname ? -1 : b.surname > a.surname ? 1 : 0;\r\n        }\r\n      });\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder.addCase(fetchPatients.fulfilled, (state, action) => {\r\n      return action.payload;\r\n    });\r\n    builder.addCase(addNewPatient.fulfilled, (state, action) => {\r\n      if (!patientFound) {\r\n        state.push(action.payload);\r\n      } else if (patientFound) {\r\n        const findIndex = state.findIndex((patient) => patient.id === action.payload.id);\r\n        state[findIndex] = action.payload;\r\n      }\r\n    });\r\n    builder.addCase(removePatient.fulfilled, (state, action) => {\r\n      return state.filter((patient) => patient.id !== action.payload.removedPatient.id);\r\n    });\r\n  },\r\n});\r\n\r\nexport const { sortPatientsList } = patientsListSlice.actions;\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    patientsList: patientsListSlice.reducer,\r\n  },\r\n});\r\n\r\n// export const patientsListApi = createApi({\r\n//   reducerPath: 'patientsListApi',\r\n//   baseQuery: fetchBaseQuery({\r\n//     baseUrl: '/dietmaster',\r\n//   }),\r\n//   tagTypes: ['Patients'],\r\n//   endpoints: (builder) => ({\r\n//     getPatients: builder.query<InitialPatientType[], void>({\r\n//       query: () => '/',\r\n//       providesTags: ['Patients'],\r\n//     }),\r\n//     addPatient: builder.mutation<any, any>({\r\n//       query: (body) => ({\r\n//         url: '/add',\r\n//         method: 'POST',\r\n//         body,\r\n//       }),\r\n//       invalidatesTags: ['Patients'],\r\n//     }),\r\n//     deletePatient: builder.mutation<any, any>({\r\n//       query: (body) => ({\r\n//         url: '/',\r\n//         method: 'DELETE',\r\n//         body,\r\n//       }),\r\n//     }),\r\n//   }),\r\n// });\r\n// export const { useGetPatientsQuery, useAddPatientMutation } = patientsListApi;\r\n","import Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { sortPatientsList } from 'store/store';\r\nimport { db } from 'mocks/db';\r\n\r\nconst Wrapper = styled.div` \r\n  display: flex;\r\n  align-items: center;\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 60px;\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  padding: 0 20px 2px;\r\n\r\n  p {\r\n    font-size: 0.7rem;\r\n    color: ${({ theme }) => theme.colors.white};\r\n  }\r\n\r\n  .filterSex {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .buttons {\r\n      display: flex;\r\n      gap: 2px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MainBottomBar = () => {\r\n  const patientsList = useSelector((state: any) => state.patientsList);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"filterSex\">\r\n        <p>Sort</p>\r\n        <div className=\"buttons\">\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(sortPatientsList('off'));\r\n              console.log('state ', patientsList);\r\n              console.log('api', db.patient.getAll());\r\n            }}\r\n            padding=\"6px 20px\"\r\n            borderRadius=\"6px 0 0 6px\"\r\n          >\r\n            off\r\n          </Button>\r\n          <Button onClick={() => dispatch(sortPatientsList('female'))} padding=\"6px 20px\" borderRadius=\"0\">\r\n            female\r\n          </Button>\r\n          <Button onClick={() => dispatch(sortPatientsList('male'))} padding=\"6px 20px\" borderRadius=\"0\">\r\n            male\r\n          </Button>\r\n          <Button onClick={() => dispatch(sortPatientsList('a-z'))} padding=\"6px 20px\" borderRadius=\"0\">\r\n            a-z\r\n          </Button>\r\n          <Button onClick={() => dispatch(sortPatientsList('z-a'))} padding=\"6px 20px\" borderRadius=\"0 6px 6px 0\">\r\n            z-a\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainBottomBar;\r\n","import { ReactNode } from 'react';\r\n\r\nexport interface IInitialState {\r\n  name: string;\r\n  surname: string;\r\n  age: number;\r\n  id: number;\r\n  sex: string;\r\n}\r\n\r\nexport interface IButton {\r\n  children: any;\r\n  backgroundColor?: string;\r\n  marginLeft?: string;\r\n  padding?: string;\r\n  borderRadius?: string;\r\n  fontSize?: string;\r\n  onClick?: () => void;\r\n  type?: 'submit' | 'reset' | 'button';\r\n  color?: string;\r\n}\r\n\r\nexport interface IInput {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  placeholder: string;\r\n  value: string;\r\n}\r\n\r\nexport interface IManageNavButton {\r\n  children: ReactNode;\r\n  to: string;\r\n  exact?: boolean;\r\n}\r\n\r\nexport interface ILoginInput {\r\n  label: string;\r\n  name: string;\r\n  id: string;\r\n  type: string;\r\n  placeholder?: string;\r\n  onChange: (data: any) => void;\r\n  value?: string;\r\n}\r\n\r\nexport interface IPatientInfo {\r\n  name: string;\r\n  surname: string;\r\n  age: string;\r\n  id: number;\r\n  index: number;\r\n}\r\n\r\nexport const initialPatientValues = {\r\n  id: 0,\r\n  name: '',\r\n  surname: '',\r\n  age: '',\r\n  sex: 'Male',\r\n  email: '',\r\n  telephone: '',\r\n  bodymass: '',\r\n  height: '',\r\n  notes: '',\r\n  activity: '1.2',\r\n  calories: '0',\r\n  protein: '5',\r\n  fat: '15',\r\n  carbs: '10',\r\n  allergens: [''],\r\n  preferences: [''],\r\n  diseases: [''],\r\n  tests: [{ date: '2021-01-26', type: 'Red blood cells', value: '75mg' }],\r\n  appointments: [\r\n    {\r\n      date: '2021-06-05',\r\n      bodymass: '82',\r\n      BMI: '28',\r\n      hips: '113',\r\n      waist: '98',\r\n    },\r\n  ],\r\n};\r\n\r\nexport type InitialPatientType = typeof initialPatientValues;\r\n\r\nexport interface IAllergensInput {\r\n  handleSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\r\n  placeholder: string;\r\n  setItem: React.Dispatch<React.SetStateAction<string>>;\r\n  item: string;\r\n  color?: string;\r\n}\r\n\r\nexport interface IAllergensList {\r\n  allergensList: string[];\r\n  deleteItem: (choosedItem: string) => void;\r\n  color?: string;\r\n}\r\n\r\nexport interface IDeleteModal {\r\n  handleCloseModal: () => void;\r\n  patientID: number;\r\n}","import { createContext, useEffect, useState, ReactNode } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { InitialPatientType, initialPatientValues } from 'types/interfaces';\r\nimport { fetchPatients } from 'store/store';\r\n\r\nexport type PatientContextType = {\r\n  managePatient: (id: number) => void;\r\n  setPatient: (obj: InitialPatientType) => void;\r\n  searchResults: InitialPatientType[];\r\n  patient: InitialPatientType;\r\n  searchTerm: string;\r\n  setSearchTerm: (term: string) => void;\r\n};\r\n\r\nexport const PatientContext = createContext<PatientContextType>({\r\n  managePatient() {},\r\n  setPatient() {},\r\n  searchResults: [initialPatientValues],\r\n  searchTerm: '',\r\n  setSearchTerm() {},\r\n  patient: initialPatientValues,\r\n});\r\n\r\nconst PatientProvider = ({ children }: { children: ReactNode }) => {\r\n  const [patient, setPatient] = useState<InitialPatientType>(initialPatientValues);\r\n  const [searchResults, setSearchResults] = useState<InitialPatientType[]>([] as InitialPatientType[]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const patientsList = useSelector((state: any) => state.patientsList);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPatients());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post('/dietmaster', searchTerm)\r\n      .then(({ data }) => {\r\n        setSearchResults(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [searchTerm]);\r\n\r\n  const managePatient = (id: number) => {\r\n    const findPatient = patientsList.filter((patient: any) => patient.id === id);\r\n    setPatient(findPatient[0]);\r\n  };\r\n\r\n  return (\r\n    <PatientContext.Provider\r\n      value={{\r\n        managePatient,\r\n        patient,\r\n        setPatient,\r\n        searchResults,\r\n        searchTerm,\r\n        setSearchTerm,\r\n      }}\r\n    >\r\n      {children}\r\n    </PatientContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PatientProvider;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.li`\r\n  display: grid;\r\n  grid-template-columns: 5% 20% 20% 10% 15% 30%;\r\n  align-items: center;\r\n  gap: 2px;\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n  padding: 5px;\r\n  color: ${({ theme }) => theme.colors.black};\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  .buttons {\r\n    grid-column: 6/7;\r\n    display: flex;\r\n    align-content: center;\r\n    justify-content: space-evenly;\r\n    height: 100%;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\n \r\nconst useModal = () => {\r\n  const [isOpen, setModalState] = useState(false);\r\n\r\n  const handleCloseModal = () => {\r\n    setModalState(false);\r\n  };\r\n  const handleOpenModal = () => {\r\n    setModalState(true);\r\n  };\r\n\r\n  return {\r\n    isOpen,\r\n    handleCloseModal,\r\n    handleOpenModal,\r\n  };\r\n};\r\n\r\nexport default useModal;\r\n","import styled from 'styled-components';\r\nimport ReactModal from 'react-modal';\r\n\r\nexport const Wrapper = styled<any>(ReactModal)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  min-width: 400px;\r\n  min-height: 150px;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  border: 1px solid grey;\r\n`;\r\n","import { ReactNode } from 'react';\r\nimport { Wrapper } from './Modal.styles';\r\n\r\ninterface IModal {\r\n  isOpen: boolean;\r\n  handleCloseModal: () => void;\r\n  children: ReactNode;\r\n}\r\n\r\nconst Modal = ({ isOpen, handleCloseModal, children }: IModal) => {\r\n  return (\r\n    <Wrapper appElement={document.getElementById('root')} isOpen={isOpen} onRequestClose={handleCloseModal}>\r\n      {children}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div``;\r\n\r\nexport const ModalTop = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 40px;\r\n  padding: 10px 15px;\r\n  background-color: ${({ theme }) => theme.colors.blue2};\r\n  color: white;\r\n`;\r\n\r\nexport const ModalForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 500px;\r\n  padding: 15px;\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n  gap: 15px;\r\n\r\n  label {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px;\r\n    font-size: ${({ theme }) => theme.fontSizes.xm};\r\n  }\r\n  input {\r\n    border: none;\r\n    padding: 0 5px;\r\n    height: 32px;\r\n    font-size: ${({ theme }) => theme.fontSizes.xm};\r\n    border-radius: 5px;\r\n  }\r\n\r\n  button {\r\n    margin-top: 15px;\r\n    width: 200px;\r\n    align-self: center;\r\n  }\r\n\r\n  h3 {\r\n    text-align: center;\r\n    font-weight: 500;\r\n    margin: 10px 0;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n\r\n  button {\r\n    width: 100px;\r\n    background-color: ${({ theme }) => theme.colors.grey4};\r\n  }\r\n`;\r\n","import Button from 'components/atoms/Button/Button';\r\nimport { ModalForm, ModalTop, Wrapper } from './TestsModal.styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removePatient } from 'store/store';\r\nimport { IDeleteModal } from 'types/interfaces';\r\nimport { ButtonsWrapper } from './DeleteModal.styles';\r\n\r\nconst DeleteModal = ({ handleCloseModal, patientID }: IDeleteModal) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = (id: number) => {\r\n    dispatch(removePatient(id));\r\n    handleCloseModal();\r\n  };\r\n  const handleRefuse = () => {\r\n    handleCloseModal();\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ModalTop>\r\n        Danger!\r\n        <Button backgroundColor=\"#505050\" padding=\"6px 28px\" fontSize=\"12px\" onClick={handleCloseModal}>\r\n          Close\r\n        </Button>\r\n      </ModalTop>\r\n      <ModalForm>\r\n        <h3>Do you want to remove selected patient?</h3>\r\n        <ButtonsWrapper>\r\n          <Button type=\"button\" onClick={() => handleDelete(patientID)}>\r\n            Yes\r\n          </Button>\r\n          <Button type=\"button\" onClick={handleRefuse}>\r\n            No\r\n          </Button>\r\n        </ButtonsWrapper>\r\n      </ModalForm>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DeleteModal;\r\n","import { useContext } from 'react';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Wrapper } from './MainPatientInfo.styles';\r\nimport { IPatientInfo } from 'types/interfaces';\r\nimport useModal from 'components/organisms/Modal/useModal';\r\nimport Modal from 'components/organisms/Modal/Modal';\r\nimport DeleteModal from 'components/organisms/Modal/DeleteModal';\r\n\r\nconst MainPatientInfo = ({ name, surname, age, id, index }: IPatientInfo) => {\r\n  const { managePatient } = useContext(PatientContext);\r\n  const navigate = useNavigate();\r\n  const { isOpen, handleCloseModal, handleOpenModal } = useModal();\r\n\r\n  const handleManageClick = (id: number) => {\r\n    managePatient(id);\r\n    navigate(`/patient/about/${id}`);\r\n  };\r\n  const handleDeleteClick = () => {\r\n    handleOpenModal();\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>{index + 1}</div>\r\n      <div>{name}</div>\r\n      <div>{surname}</div>\r\n      <div>{age}</div>\r\n      <div className=\"buttons\">\r\n        <Button onClick={() => handleManageClick(id)}>Manage</Button>\r\n        <Button backgroundColor=\"#FF4343\" onClick={handleDeleteClick}>\r\n          Delete\r\n        </Button>\r\n      </div>\r\n      <Modal handleCloseModal={handleCloseModal} isOpen={isOpen}>\r\n        <DeleteModal handleCloseModal={handleCloseModal} patientID={id} />\r\n      </Modal>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainPatientInfo;\r\n","import { IInput } from 'types/interfaces';\r\nimport styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n  padding: 8px;\r\n  border: 1px solid ${({ theme }) => theme.colors.white};\r\n  border-radius: 6px;\r\n  font-size: ${({ theme }) => theme.fontSizes.l};\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  width: 300px;\r\n`;\r\n\r\nconst InputMain = ({ ...props }: IInput) => {\r\n  return <Input {...props}></Input>;\r\n};\r\n\r\nexport default InputMain; \r\n","import axios from 'axios';\r\nimport React, { createContext, ReactNode, useEffect, useState, useContext } from 'react';\r\n\r\nconst InitialUserValues = { id: '', login: '', name: '', token: '' };\r\n\r\nexport type PatientContextType = {\r\n  signIn: ({ login, password }: { login: string; password: string }) => any;\r\n  signOut: () => void;\r\n  user: typeof InitialUserValues;\r\n};\r\n\r\nconst AuthContext = createContext<PatientContextType>({\r\n  signIn() {},\r\n  signOut() {},\r\n  user: InitialUserValues,\r\n});\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }): any => {\r\n  const [user, setUser] = useState(InitialUserValues);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      (async () => {\r\n        try {\r\n          const response = await axios.get('/me', {\r\n            headers: {\r\n              authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          setUser(response.data[0]);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      })();\r\n    }\r\n  }, []);\r\n\r\n  const signIn = async ({ login, password }: { login: string; password: string }) => {\r\n    try {\r\n      const response = await axios.post('/dietmaster/login', { login, password });\r\n      setUser(response.data);\r\n      localStorage.setItem('token', response.data.token);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const signOut = () => {\r\n    setUser({ id: '', login: '', name: '', token: '' });\r\n    localStorage.removeItem('token');\r\n  };\r\n  return <AuthContext.Provider value={{ user, signIn, signOut }}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return auth;\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport InputMain from 'components/atoms/InputMain/InputMain';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { useAuth } from 'hooks/useAuth';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 60px;\r\n  padding: 10px;\r\n  background-color: ${({ theme }) => theme.colors.lightBlack};\r\n\r\n  h2 {\r\n    color: ${({ theme }) => theme.colors.white};\r\n    font-weight: 400;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst MainTopBar = () => {\r\n  const { setPatient, patient, searchTerm, setSearchTerm } = useContext(PatientContext);\r\n  const navigate = useNavigate();\r\n  const { signOut } = useAuth();\r\n\r\n  const handleClickNewPatient = () => {\r\n    setPatient({\r\n      id: new Date().getTime(),\r\n      name: '',\r\n      surname: '',\r\n      age: '',\r\n      sex: 'Male',\r\n      email: '',\r\n      telephone: '',\r\n      bodymass: '',\r\n      height: '',\r\n      notes: '',\r\n      activity: '1.2',\r\n      calories: '0',\r\n      protein: '30',\r\n      fat: '20',\r\n      carbs: '50',\r\n      allergens: [],\r\n      preferences: [],\r\n      diseases: [],\r\n      tests: [],\r\n      appointments: [],\r\n    });\r\n    navigate(`/patient/about/${patient.id}`);\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <h2>Patients record</h2>\r\n      </div>\r\n      <InputMain placeholder=\"Search patient\" value={searchTerm} onChange={handleChange} />\r\n      <Button onClick={handleClickNewPatient}>New patient</Button>\r\n      <Button onClick={signOut} backgroundColor=\"#505050\" marginLeft=\"auto\">\r\n        Log Out\r\n      </Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainTopBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2px;\r\n  padding: 2px;\r\n  width: 100%;\r\n  margin: 60px 0;\r\n  list-style: none;\r\n  color: ${({ theme }) => theme.colors.black};\r\n`;\r\n","import MainBottomBar from 'components/organisms/MainBottomBar/MainBottomBar';\r\nimport MainPatientInfo from 'components/molecules/MainPatientInfo/MainPatientInfo';\r\nimport MainTopBar from 'components/organisms/MainTopBar/MainTopBar';\r\nimport React, { useContext } from 'react';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { Wrapper } from './Main.styles';\r\nimport { useSelector } from 'react-redux';\r\nimport { InitialPatientType } from 'types/interfaces';\r\n\r\nconst Main = () => {\r\n  const { searchResults, searchTerm } = useContext(PatientContext);\r\n  const patients = useSelector((state: any) => state.patientsList);\r\n\r\n  return (\r\n    <>\r\n      <MainTopBar />\r\n      <MainBottomBar />\r\n      <Wrapper>\r\n        {searchTerm &&\r\n          searchResults.map((patient: InitialPatientType, index: number) => {\r\n            return <MainPatientInfo index={index} key={patient.id} {...patient} />;\r\n          })}\r\n        {!searchTerm &&\r\n          patients.map((patient: InitialPatientType, index: number) => {\r\n            return <MainPatientInfo index={index} key={patient.id} {...patient} />;\r\n          })}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledButton = styled(NavLink)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 8px;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  background-color: ${({ color, theme: { colors } }) => (color ? color : colors.grey4)};\r\n  border: none;\r\n  font-size: ${({ theme }) => theme.fontSizes.l};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    box-shadow: inset 0 0 100px 100px rgba(255, 255, 255, 0.3);\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${({ theme }) => theme.colors.blue3};\r\n  }\r\n`;\r\n","import { IManageNavButton } from 'types/interfaces';\r\nimport { StyledButton } from './ManageNavButton.styles';\r\n\r\nconst ManageNavButton = ({ children, to }: IManageNavButton) => {\r\n  return <StyledButton to={to}>{children}</StyledButton>;\r\n};\r\n\r\nexport default ManageNavButton;\r\n","import ManageNavButton from 'components/atoms/ManageNavButton/ManageNavButton';\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BsFillPersonFill, BsExclamationDiamond } from \"react-icons/bs\";\r\nimport { ImSpoonKnife } from \"react-icons/im\";\r\nimport { BiTestTube } from \"react-icons/bi\";\r\nimport { AiTwotoneCalendar } from \"react-icons/ai\";\r\nimport { PatientContext } from 'contexts/PatientContext';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  width: 100%;\r\n  height: 35px;\r\n`;\r\n\r\nconst ManageNavBar = () => {\r\n  const { patient } = useContext(PatientContext);\r\n\r\n  return <Wrapper>\r\n    <ManageNavButton to={`/patient/about/${patient.id}`}><BsFillPersonFill />About</ManageNavButton>\r\n    <ManageNavButton to={`/patient/diet/${patient.id}`}><ImSpoonKnife />Diet</ManageNavButton>\r\n    <ManageNavButton to={`/patient/allergens/${patient.id}`}><BsExclamationDiamond />Allergens</ManageNavButton>\r\n    <ManageNavButton to={`/patient/blood-tests/${patient.id}`}><BiTestTube />Tests</ManageNavButton>\r\n    <ManageNavButton to={`/patient/appointments/${patient.id}`}><AiTwotoneCalendar />Appointments</ManageNavButton>\r\n  </Wrapper>;\r\n};\r\n\r\nexport default ManageNavBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  height: 40px;\r\n  padding: 0 30px;\r\n  background-color: ${({ theme }) => theme.colors.blue3};\r\n`;\r\n","import { useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { Wrapper } from './ManageTop.styles';\r\nimport { initialPatientValues } from 'types/interfaces';\r\n\r\nconst ManageTop = () => {\r\n  const navigate = useNavigate();\r\n  const { setPatient } = useContext(PatientContext);\r\n\r\n  const handleExitClick = () => {\r\n    navigate('/');\r\n    setPatient(initialPatientValues);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Button onClick={handleExitClick} backgroundColor=\"#505050\" padding=\"6px 28px\" fontSize=\"12px\">\r\n        Back\r\n      </Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ManageTop;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 1100px;\r\n  min-width: 600px;\r\n  margin: 0 auto;\r\n  color: ${({ theme }) => theme.colors.black};\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: ${({ theme }) => theme.colors.grey3};\r\n`;\r\n\r\nconst AboutBottomBarBox = ({ children }: { children: string | number }) => {\r\n  return <Wrapper>{children}</Wrapper>;\r\n};\r\n\r\nexport default AboutBottomBarBox;\r\n","import styled from \"styled-components\";\r\n\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 120px 1fr;\r\n  width: 100%;\r\n  height: 100px;\r\n  padding: 20px 20px 20px 5px;\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  color: ${({ theme }) => theme.colors.white};\r\n\r\n  .text {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const CalculationsWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr 2fr 2fr;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const Calc = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  p {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n","import { InitialPatientType } from 'types/interfaces';\r\n\r\nconst useCalculate = (patient: InitialPatientType) => {\r\n  const calculateBMI = () => {\r\n    const height = Number(patient.height) / 100;\r\n    const BMI = (Number(patient.bodymass) / Math.pow(height, 2)).toFixed(2).toString();\r\n    return BMI;\r\n  };\r\n\r\n  const BMIdescription = () => {\r\n    const height = Number(patient.height) / 100;\r\n    let BMI = Number((Number(patient.bodymass) / Math.pow(height, 2)).toFixed(2));\r\n    if (BMI < 25 && BMI > 18.5) {\r\n      return 'Normal';\r\n    } else if (BMI >= 25) {\r\n      return 'Obesity';\r\n    } else if (BMI <= 18.5) {\r\n      return 'Underweight';\r\n    } else {\r\n      return 'OK';\r\n    }\r\n  };\r\n\r\n  const calculateRisk = () => {\r\n    const height = Number(patient.height) / 100;\r\n    let BMI = Number((Number(patient.bodymass) / Math.pow(height, 2)).toFixed(2));\r\n    if (BMI < 25 && BMI > 18.5) {\r\n      return 'Lowest';\r\n    } else if (BMI >= 25 && BMI <= 35) {\r\n      return 'High';\r\n    } else if (BMI >= 35) {\r\n      return 'Very high';\r\n    } else if (BMI <= 18.5) {\r\n      return 'High';\r\n    } else {\r\n      return 'OK';\r\n    }\r\n  };\r\n\r\n  const idealWeight = () => {\r\n    const height = Number(patient.height);\r\n    let idealWeightMin = '';\r\n    let idealWeightMax = '';\r\n    if (patient.sex === 'Male') {\r\n      idealWeightMin = (height - 100 - (height - 138) / 4).toString();\r\n      idealWeightMax = (height - 100 - (height - 162) / 4).toString();\r\n    } else {\r\n      idealWeightMin = (height - 100 - (height - 138) / 2).toString();\r\n      idealWeightMax = (height - 100 - (height - 162) / 2).toString();\r\n    }\r\n\r\n    return `${idealWeightMin} - ${idealWeightMax} kg`;\r\n  };\r\n\r\n  const calculateCPM = () => {\r\n    const CPM = (66.5 + 13.75 * Number(patient.bodymass) + 5.003 * Number(patient.height) - 6.775 * Number(patient.age)) * Number(patient.activity);\r\n    return CPM.toFixed().toString();\r\n  };\r\n\r\n\r\n\r\n  return { calculateBMI, BMIdescription, calculateRisk, idealWeight, calculateCPM };\r\n};\r\n\r\nexport default useCalculate;\r\n","import AboutBottomBarBox from 'components/atoms/AboutBottomBarBox/AboutBottomBarBox';\r\nimport React, { useContext } from 'react';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { CalculationsWrapper, Calc, Wrapper } from './AboutBottomBar.styles';\r\nimport useCalculate from 'hooks/useCalculate';\r\n\r\nconst AboutBottomBar = () => {\r\n  const { patient } = useContext(PatientContext);\r\n  const { BMIdescription, calculateBMI, calculateRisk, idealWeight } = useCalculate(patient);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"text\">Body weight assessment</div>\r\n      <CalculationsWrapper>\r\n        <Calc>\r\n          <p>BMI</p>\r\n          <AboutBottomBarBox>{patient.bodymass && patient.height ? calculateBMI() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n        <Calc>\r\n          <p>Description</p>\r\n          <AboutBottomBarBox>{patient.bodymass && patient.height ? BMIdescription() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n        <Calc>\r\n          <p>Risk of cardiovascular disease</p>\r\n          <AboutBottomBarBox>{patient.bodymass && patient.height ? calculateRisk() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n        <Calc>\r\n          <p>Ideal body weight</p>\r\n          <AboutBottomBarBox>{patient.bodymass && patient.height ? idealWeight() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n      </CalculationsWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AboutBottomBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  .sex {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n  div {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 35px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding-right: 5%;\r\n\r\n    label {\r\n      input {\r\n        margin: 0 5px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Wrapper } from './SexButton.styles';\r\n\r\nconst SexButton = () => {\r\n  return (\r\n    <Wrapper>\r\n      <label className=\"sex\">Sex</label>\r\n      <div>\r\n        <label>\r\n          <input type=\"radio\" name=\"sex\" value=\"Male\" />\r\n          Male\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"sex\" value=\"Female\" />\r\n          Female\r\n        </label>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SexButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.form`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 15px;\r\n  width: 100%;\r\n  min-height: calc(100vh - 175px);\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n\r\n  div:nth-child(1) {\r\n    grid-area: 1/1/2/3;\r\n  }\r\n  div:nth-child(2) {\r\n    grid-area: 1/3/2/5;\r\n  }\r\n  div:nth-child(3) {\r\n    grid-area: 1/5/2/6;\r\n  }\r\n  div:nth-child(4) {\r\n    grid-area: 1/6/2/7;\r\n  }\r\n  div:nth-child(5) {\r\n    grid-area: 2/1/3/2;\r\n  }\r\n  div:nth-child(6) {\r\n    grid-area: 2/2/3/3;\r\n  }\r\n  div:nth-child(7) {\r\n    grid-area: 2/3/3/5;\r\n  }\r\n  div:nth-child(8) {\r\n    grid-area: 2/5/3/7;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n\r\n  label {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 35px;\r\n    border: none;\r\n    border-radius: 6px;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    padding: 0 10px;\r\n    -webkit-appearance: none;\r\n  }\r\n  \r\n`;\r\n\r\nexport const TextArea = styled.div`\r\n  width: 100%;\r\n  grid-area: 3/1/4/5;\r\n\r\n  label {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n  textarea {\r\n    width: 100%;\r\n    border: none;\r\n    border-radius: 6px;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    padding: 10px;\r\n    height: 100px;\r\n    font-family: 'Montserrat', sans-serif;\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n\r\nexport const Slider = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  grid-area: 4/1/5/7;\r\n \r\n  p {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n  input {\r\n    width: 100%;\r\n    -webkit-appearance: none;\r\n    margin: 7px 0;\r\n  }\r\n  .minmax {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n  }\r\n  input::-webkit-slider-runnable-track {\r\n    width: 100%;\r\n    height: 10px;\r\n    cursor: pointer;\r\n    background: ${({ theme }) => theme.colors.blue3};\r\n    border-radius: 3px;\r\n  }\r\n\r\n  input::-webkit-slider-thumb {\r\n    height: 22px;\r\n    width: 15px;\r\n    border-radius: 5px;\r\n    background-color: ${({ theme }) => theme.colors.grey4};\r\n    cursor: pointer;\r\n    -webkit-appearance: none;\r\n    margin-top: -6.5px;\r\n  }\r\n`;\r\n","import SexButton from 'components/molecules/SexButton/SexButton';\r\nimport React, { useContext, useEffect, useRef } from 'react';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { useParams } from 'react-router';\r\nimport axios from 'axios';\r\nimport { Input, Slider, TextArea, Wrapper } from './AboutForm.styles';\r\nimport { addNewPatient } from 'store/store';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst AboutForm = () => {\r\n  const { id } = useParams();\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  const nameValue = useRef<HTMLInputElement>(null);\r\n  const surnameValue = useRef<HTMLInputElement>(null);\r\n  const ageValue = useRef<HTMLInputElement>(null);\r\n  const telephoneValue = useRef<HTMLInputElement>(null);\r\n  const emailValue = useRef<HTMLInputElement>(null);\r\n  const bodymassValue = useRef<HTMLInputElement>(null);\r\n  const heightValue = useRef<HTMLInputElement>(null);\r\n  const notesValue = useRef<HTMLTextAreaElement>(null);\r\n  const activityValue = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      axios\r\n        .get(`/dietmaster/patient/about/${id}`)\r\n        .then(({ data }) => {\r\n          data[0] && setPatient(data[0]);\r\n        })\r\n        .catch((err) => console.log(err));\r\n\r\n      if (nameValue.current) {\r\n        nameValue.current.value = patient.name;\r\n      }\r\n      if (surnameValue.current) {\r\n        surnameValue.current.value = patient.surname;\r\n      }\r\n      if (ageValue.current) {\r\n        ageValue.current.value = patient.age;\r\n      }\r\n      if (telephoneValue.current) {\r\n        telephoneValue.current.value = patient.telephone;\r\n      }\r\n      if (emailValue.current) {\r\n        emailValue.current.value = patient.email;\r\n      }\r\n      if (bodymassValue.current) {\r\n        bodymassValue.current.value = patient.bodymass;\r\n      }\r\n      if (heightValue.current) {\r\n        heightValue.current.value = patient.height;\r\n      }\r\n      if (notesValue.current) {\r\n        notesValue.current.value = patient.notes;\r\n      }\r\n      if (activityValue.current) {\r\n        activityValue.current.value = patient.activity;\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(addNewPatient(patient));\r\n  }, [patient]);\r\n\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    setPatient({\r\n      ...patient,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper onChange={handleChange}>\r\n      <Input>\r\n        <label htmlFor=\"Name\">Name</label>\r\n        <input ref={nameValue} id=\"name\" name=\"name\" type=\"text\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Surname\">Surname</label>\r\n        <input ref={surnameValue} id=\"surname\" name=\"surname\" type=\"text\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Age\">Age</label>\r\n        <input ref={ageValue} id=\"age\" name=\"age\" type=\"number\" />\r\n      </Input>\r\n      <SexButton />\r\n      <Input>\r\n        <label htmlFor=\"Body mass (kg)\">Body mass (kg)</label>\r\n        <input ref={bodymassValue} id=\"bodymass\" name=\"bodymass\" type=\"number\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Height (cm)\">Height (cm)</label>\r\n        <input ref={heightValue} id=\"height\" name=\"height\" type=\"number\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Telephone\">Telephone</label>\r\n        <input ref={telephoneValue} id=\"telephone\" name=\"telephone\" type=\"tel\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"E-mail\">E-mail</label>\r\n        <input ref={emailValue} id=\"email\" name=\"email\" type=\"email\" />\r\n      </Input>\r\n      <TextArea>\r\n        <label htmlFor=\"Notes\">Notes</label>\r\n        <textarea ref={notesValue} id=\"notes\" name=\"notes\" />\r\n      </TextArea>\r\n      <Slider>\r\n        <p>Physical activity</p>\r\n        <input ref={activityValue} id=\"activity\" name=\"activity\" type=\"range\" min=\"1.2\" max=\"2.4\" step=\"0.1\" />\r\n        <div className=\"minmax\">\r\n          <p>1.2</p>\r\n          <p>2.4</p>\r\n        </div>\r\n      </Slider>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AboutForm;\r\n","import React from 'react';\r\nimport ManageNavBar from 'components/organisms/ManageNavBar/ManageNavBar';\r\nimport ManageTop from 'components/organisms/ManageTop/ManageTop';\r\nimport { Wrapper } from './About.styles';\r\nimport AboutBottomBar from 'components/organisms/AboutBottomBar/AboutBottomBar';\r\nimport AboutForm from 'components/organisms/AboutForm/AboutForm';\r\n\r\nconst About = () => {\r\n  return (\r\n      <Wrapper>\r\n        <ManageTop />\r\n        <ManageNavBar />\r\n        <AboutForm />\r\n        <AboutBottomBar />\r\n      </Wrapper>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 15px;\r\n  width: 100%;\r\n  min-height: calc(100vh - 75px);\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n`;\r\nexport const Sliders = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  gap: 15px;\r\n`;\r\n\r\nexport const SliderDesc = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-left: 70px;\r\n  margin-top: -10px;\r\n`;\r\n\r\nexport const SliderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  h4 {\r\n    margin: 2px 0 5px;\r\n    font-weight: 400;\r\n  }\r\n`;\r\n\r\nexport const SliderInput = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: ${({ theme }) => theme.colors.grey4};\r\n    width: 60px;\r\n    height: 30px;\r\n    border-radius: 5px;\r\n    margin-right: 14px;\r\n    color: white;\r\n    overflow: hidden;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    -webkit-appearance: none;\r\n    margin: 10px 0;\r\n    width: 100%;\r\n  }\r\n\r\n  input::-webkit-slider-runnable-track {\r\n    width: 100%;\r\n    height: 10px;\r\n    cursor: pointer;\r\n    background: ${({ theme }) => theme.colors.blue3};\r\n    border-radius: 3px;\r\n  }\r\n\r\n  input::-webkit-slider-thumb {\r\n    height: 25px;\r\n    width: 15px;\r\n    border-radius: 5px;\r\n    background-color: ${({ theme }) => theme.colors.grey4};\r\n    cursor: pointer;\r\n    -webkit-appearance: none;\r\n    margin-top: -8px;\r\n  }\r\n\r\n  .blue::-webkit-slider-runnable-track {\r\n    background: ${({ theme }) => theme.colors.blue3};\r\n  }\r\n  .red::-webkit-slider-runnable-track {\r\n    background: ${({ theme }) => theme.colors.red};\r\n  }\r\n  .yellow::-webkit-slider-runnable-track {\r\n    background: ${({ theme }) => theme.colors.yellow};\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n`;\r\n\r\nexport const CPMWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nexport const ShowCPM = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-content: center;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  height: 75px;\r\n  width: 200px;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  font-size: ${({ theme }) => theme.fontSizes.xm};\r\n  color: white;\r\n\r\n  input {\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: ${({ theme }) => theme.fontSizes.l};\r\n    padding: 5px;\r\n    text-align: center;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n  }\r\n  div {\r\n    font-size: ${({ theme }) => theme.fontSizes.l};\r\n    padding: 5px;\r\n  }\r\n`;\r\n\r\nexport const MicronutrientsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n  margin: 5px 0;\r\n`;\r\n\r\nexport const MicronutrientsColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n  align-items: flex-end;\r\n`;\r\n\r\nexport const Nutrient = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-size: 0.9rem;\r\n\r\n  input {\r\n    text-align: right;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    width: 60px;\r\n    height: 21px;\r\n    border-radius: 3px;\r\n    padding: 2px 6px;\r\n    border: none;\r\n  }\r\n`;\r\n","import { PatientContext } from 'contexts/PatientContext';\r\nimport useCalculate from 'hooks/useCalculate';\r\nimport React, { useContext, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewPatient } from 'store/store';\r\nimport {\r\n  Nutrient,\r\n  CPMWrapper,\r\n  Input,\r\n  MicronutrientsColumn,\r\n  MicronutrientsWrapper,\r\n  ShowCPM,\r\n  SliderDesc,\r\n  SliderInput,\r\n  Sliders,\r\n  SliderWrapper,\r\n  Wrapper,\r\n} from './DietForm.styles';\r\n\r\nconst DietForm = () => {\r\n  const { id } = useParams();\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  const { calculateCPM } = useCalculate(patient);\r\n  const caloriesValue = useRef<HTMLInputElement>(null);\r\n  const proteinValue = useRef<HTMLInputElement>(null);\r\n  const fatValue = useRef<HTMLInputElement>(null);\r\n  const carbsValue = useRef<HTMLInputElement>(null);\r\n\r\n  const patientsList = useSelector((state: any) => state.patientsList);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const getPatient = patientsList.filter((patient: any) => patient.id === Number(id));\r\n      setPatient(getPatient[0]);\r\n\r\n      if (proteinValue.current) {\r\n        proteinValue.current.value = patient.protein;\r\n      }\r\n      if (carbsValue.current) {\r\n        carbsValue.current.value = patient.carbs;\r\n      }\r\n      if (fatValue.current) {\r\n        fatValue.current.value = patient.fat;\r\n      }\r\n      if (caloriesValue.current) {\r\n        caloriesValue.current.value = patient.calories;\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    setPatient({\r\n      ...patient,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(addNewPatient(patient));\r\n  }, [patient]);\r\n\r\n  return (\r\n    <Wrapper onChange={handleChange}>\r\n      <CPMWrapper>\r\n        <ShowCPM>\r\n          <p>Recommended CPM</p>\r\n          <div>{patient.bodymass && patient.age && patient.height && `${calculateCPM()} kcal`}</div>\r\n        </ShowCPM>\r\n        <ShowCPM>\r\n          <p>Energy deficit / surplus</p>\r\n          <input id=\"calories\" name=\"calories\" type=\"number\" ref={caloriesValue} />\r\n        </ShowCPM>\r\n        <ShowCPM>\r\n          <p>Established CPM</p>\r\n          <div>{patient.bodymass && patient.age && patient.height && `${Number(calculateCPM()) + Number(patient.calories)} kcal`}</div>\r\n        </ShowCPM>\r\n      </CPMWrapper>\r\n      <Sliders>\r\n        <SliderWrapper>\r\n          <h4>Protein</h4>\r\n          <SliderInput>\r\n            <div>{patient.bodymass && patient.age && patient.height && `${(((Number(calculateCPM()) + Number(patient.calories)) * Number(patient.protein)) / 400).toFixed()}g`}</div>\r\n            <input className=\"red\" id=\"protein\" name=\"protein\" type=\"range\" min=\"1\" max=\"100\" step=\"1\" ref={proteinValue} />\r\n          </SliderInput>\r\n        </SliderWrapper>\r\n        <SliderWrapper>\r\n          <h4>Fat</h4>\r\n          <SliderInput>\r\n            <div>{patient.bodymass && patient.age && patient.height && `${(((Number(calculateCPM()) + Number(patient.calories)) * Number(patient.fat)) / 900).toFixed()}g`}</div>\r\n            <input className=\"yellow\" id=\"fat\" name=\"fat\" type=\"range\" min=\"1\" max=\"100\" step=\"1\" ref={fatValue} />\r\n          </SliderInput>\r\n        </SliderWrapper>\r\n        <SliderWrapper>\r\n          <h4>Carbohydrates</h4>\r\n          <SliderInput>\r\n            <div>{patient.bodymass && patient.age && patient.height && `${(((Number(calculateCPM()) + Number(patient.calories)) * Number(patient.carbs)) / 400).toFixed()}g`}</div>\r\n            <Input className=\"blue\" id=\"carbs\" name=\"carbs\" type=\"range\" min=\"1\" max=\"100\" step=\"1\" ref={carbsValue} />\r\n          </SliderInput>\r\n        </SliderWrapper>\r\n        <SliderDesc>\r\n          <p>0%</p>\r\n          <p>100%</p>\r\n        </SliderDesc>\r\n      </Sliders>\r\n      <MicronutrientsWrapper>\r\n        <MicronutrientsColumn>\r\n          <Nutrient>\r\n            <p>fiber [g]</p>\r\n            <input type=\"text\" value=\"20\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>sugar [g]</p>\r\n            <input type=\"text\" value=\"42.5\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>SFA [g]</p>\r\n            <input type=\"text\" value=\"9.8\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>MUFA [g]</p>\r\n            <input type=\"text\" value=\"29\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>PUFA [g]</p>\r\n            <input type=\"text\" value=\"16.1\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>omega-3 [g]</p>\r\n            <input type=\"text\" value=\"1.9\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>omega-6 [g]</p>\r\n            <input type=\"text\" value=\"4.6\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>cholesterol [mg]</p>\r\n            <input type=\"text\" value=\"300\" readOnly />\r\n          </Nutrient>\r\n        </MicronutrientsColumn>\r\n        <MicronutrientsColumn>\r\n          <Nutrient>\r\n            <p>sodium [mg]</p>\r\n            <input type=\"text\" value=\"1300\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>potassium [mg]</p>\r\n            <input type=\"text\" value=\"3500\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>calcium [mg]</p>\r\n            <input type=\"text\" value=\"1200\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>phosphorus [mg]</p>\r\n            <input type=\"text\" value=\"700\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>magnesium [mg]</p>\r\n            <input type=\"text\" value=\"320\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>iron [mg]</p>\r\n            <input type=\"text\" value=\"10\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>zinc [mg]</p>\r\n            <input type=\"text\" value=\"8\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>copper [mg]</p>\r\n            <input type=\"text\" value=\"0.9\" readOnly />\r\n          </Nutrient>\r\n        </MicronutrientsColumn>\r\n        <MicronutrientsColumn>\r\n          <Nutrient>\r\n            <p>vit. A [µg]</p>\r\n            <input type=\"text\" value=\"700\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. D [µg]</p>\r\n            <input type=\"text\" value=\"15\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. E [mg]</p>\r\n            <input type=\"text\" value=\"8\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. K [µg]</p>\r\n            <input type=\"text\" value=\"90\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. B1 [mg]</p>\r\n            <input type=\"text\" value=\"1.1\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. B6 [mg]</p>\r\n            <input type=\"text\" value=\"1.5\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. B12 [mg]</p>\r\n            <input type=\"text\" value=\"2.4\" readOnly />\r\n          </Nutrient>\r\n          <Nutrient>\r\n            <p>vit. C [mg]</p>\r\n            <input type=\"text\" value=\"75\" readOnly />\r\n          </Nutrient>\r\n        </MicronutrientsColumn>\r\n      </MicronutrientsWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DietForm;\r\n","import ManageNavBar from 'components/organisms/ManageNavBar/ManageNavBar';\r\nimport ManageTop from 'components/organisms/ManageTop/ManageTop';\r\nimport { Wrapper } from './About.styles';\r\nimport DietForm from 'components/organisms/DietForm/DietForm';\r\n\r\nconst Diet = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ManageTop />\r\n      <ManageNavBar />\r\n      <DietForm />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Diet;\r\n","export default __webpack_public_path__ + \"static/media/logo.8af3b97f.png\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 350px;\r\n  padding: 30px 20px;\r\n  margin-bottom: 50px;\r\n  gap: 15px;\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n  border-radius: 6px;\r\n  box-shadow: rgba(0, 0, 0, 0.07) 0px 1px 2px, rgba(0, 0, 0, 0.07) 0px 2px 4px, rgba(0, 0, 0, 0.07) 0px 4px 8px, rgba(0, 0, 0, 0.07) 0px 8px 16px,\r\n    rgba(54, 44, 44, 0.07) 0px 16px 32px, rgba(0, 0, 0, 0.07) 0px 32px 64px;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  height: 100px;\r\n  margin: 15px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  height: 35px;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  padding: 8px;\r\n  margin: 10px 0;\r\n  border-radius: 6px;\r\n  border: none;\r\n`;\r\nexport const Label = styled.label`\r\n  width: 100%;\r\n  font-size: ${({ theme }) => theme.fontSizes.xm};\r\n`;\r\n","import { ILoginInput } from 'types/interfaces';\r\nimport React from 'react';\r\nimport { Input, Label, Wrapper } from './LoginInput.styles';\r\n\r\nconst LoginInput = React.forwardRef(({ label, name, id, type, value, onChange, ...props }: ILoginInput, ref: any) => {\r\n  return (\r\n    <Wrapper>\r\n      <Label htmlFor={id}>{label}</Label>\r\n      <Input name={name} type={type} id={id} onChange={onChange} value={value} {...props} ref={ref} />\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default LoginInput;\r\n","import { useForm } from 'react-hook-form';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport logo from '../assets/images/logo.png'\r\nimport { useAuth } from 'hooks/useAuth';\r\nimport { Wrapper, Form, Image } from './Login.styles';\r\nimport LoginInput from 'components/molecules/LoginInput/LoginInput';\r\n\r\n\r\nconst Login = () => {\r\n  const { signIn } = useAuth();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src={logo} />\r\n      <Form onSubmit={handleSubmit(signIn)}>\r\n        <LoginInput id=\"login\" label=\"Login\" type=\"text\" placeholder='login: jack123' {...register('login', { required: true })} />\r\n        {/* {errors.login ?? <h6>Login is required</h6>} */}\r\n        <LoginInput id=\"password\" label=\"Password\" type=\"password\" placeholder='pass: Pass123' {...register('password', { required: true })} />\r\n        {/* {errors.password ?? <h6>Password is required</h6>}  */}\r\n        <Button type=\"submit\">Sign in</Button>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { IButton } from 'types/interfaces';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button<IButton>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  height: 25px;\r\n  width: 25px;\r\n  background-color: transparent;\r\n  border: none;\r\n  font-size: ${({ fontSize, theme: { fontSizes } }) => (fontSize ? fontSize : fontSizes.xl)};\r\n  color: ${({ color, theme: { colors } }) => (color ? color : colors.blue3)};\r\n`;\r\n\r\nconst AllergensListButton = ({ ...props }: IButton) => {\r\n  return <StyledButton {...props}>{props.children}</StyledButton>;\r\n};\r\n\r\nexport default AllergensListButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-left: 5px;\r\n    padding-right: 40px;\r\n    font-size: 1rem;\r\n    line-height: 1rem;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background-color: white;\r\n  }\r\n\r\n  input::placeholder {\r\n    padding-left: 5px;\r\n    font-size: ${({ theme }) => theme.fontSizes.xm};\r\n  }\r\n  div {\r\n    position: absolute;\r\n    right: 8px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`;\r\n","import AllergensListButton from 'components/atoms/AllergensListButton/AllergensListButton';\r\nimport { MdAddCircle } from 'react-icons/md';\r\nimport { IAllergensInput } from 'types/interfaces';\r\nimport { Form } from './AllergensInput.styles';\r\n\r\nconst AllergensInput = ({ placeholder, handleSubmit, setItem, item, color }: IAllergensInput) => {\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <input value={item} onChange={(e) => setItem(e.target.value)} maxLength={20} type=\"text\" placeholder={placeholder} />\r\n      <div>\r\n        <AllergensListButton color={color}>\r\n          <MdAddCircle />\r\n        </AllergensListButton>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AllergensInput;\r\n","import AllergensListButton from 'components/atoms/AllergensListButton/AllergensListButton';\r\nimport { MdRemoveCircle } from 'react-icons/md';\r\nimport styled from 'styled-components';\r\nimport { IAllergensList } from 'types/interfaces';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  ul {\r\n    width: 100%;\r\n  }\r\n\r\n  li {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 5px 8px;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst AllergensList = ({ allergensList, deleteItem, color }: IAllergensList) => {\r\n  return (\r\n    <Wrapper>\r\n      <ul>\r\n        {allergensList.map((item, index) => {\r\n          return (\r\n            <li key={index}>\r\n              {item}\r\n              <div>\r\n                <AllergensListButton color={color} onClick={() => deleteItem(item)}>\r\n                  <MdRemoveCircle />\r\n                </AllergensListButton>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AllergensList;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 20px;\r\n \r\n  h3 {\r\n    text-align: center;\r\n    margin: 10px 0;\r\n    font-weight: 400;\r\n  }\r\n  p {\r\n    text-align: center;\r\n    margin: 10px 0;\r\n    font-size: ${({ theme }) => theme.fontSizes.xm};\r\n  }\r\n`;\r\n","import AllergensInput from 'components/molecules/AllergensInput/AllergensInput';\r\nimport AllergensList from 'components/molecules/AllergensList/AllergensList';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Wrapper } from './AllergensForm.styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewPatient } from 'store/store';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\n\r\nconst AllergensForm = () => {\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  const [allergensList, setAllergensList] = useState<string[]>(patient.allergens);\r\n  const [item, setItem] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (item) {\r\n      setAllergensList([...allergensList, item]);\r\n      setItem('');\r\n    } else if (!item) {\r\n      alert('Please enter value!');\r\n    }\r\n  };\r\n\r\n  const deleteItem = (choosedItem: string) => {\r\n    setAllergensList(allergensList.filter((item) => item !== choosedItem));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPatient({ ...patient, allergens: allergensList });\r\n    dispatch(addNewPatient({ ...patient, allergens: allergensList }));\r\n  }, [allergensList]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h3>Allergens</h3>\r\n      <AllergensInput color=\"#D90000\" placeholder=\"\" item={item} setItem={setItem} handleSubmit={handleSubmit} />\r\n\r\n      {allergensList.length ? (\r\n        <>\r\n          <AllergensList color=\"#D90000\" deleteItem={deleteItem} allergensList={allergensList} />\r\n        </>\r\n      ) : (\r\n        <p>Patient doesn't have any allergies</p>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AllergensForm;\r\n","import AllergensInput from 'components/molecules/AllergensInput/AllergensInput';\r\nimport AllergensList from 'components/molecules/AllergensList/AllergensList';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Wrapper } from '../AllergensForm/AllergensForm.styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewPatient } from 'store/store';\r\nimport { useParams } from 'react-router-dom';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\n\r\nconst DiseasesForm = () => {\r\n  const [diseasesList, setDiseasesList] = useState<string[]>([]);\r\n  const [item, setItem] = useState('');\r\n  const patientsList = useSelector((state: any) => state.patientsList);\r\n  const dispatch = useDispatch();\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  const { id } = useParams();\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\r\n    event.preventDefault();\r\n\r\n    if (item) {\r\n      setDiseasesList([...diseasesList, item]);\r\n      setItem('');\r\n    } else if (!item) {\r\n      alert('Please enter value!');\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const getList = patientsList.filter((item: typeof patient) => item.id === Number(id));\r\n    setDiseasesList(getList[0].diseases);\r\n  }, []);\r\n  useEffect(() => {\r\n    setPatient({ ...patient, diseases: diseasesList })\r\n    dispatch(addNewPatient({ ...patient, diseases: diseasesList }));\r\n  }, [diseasesList]);\r\n \r\n  const deleteItem = (choosedItem: string) => {\r\n    console.log(choosedItem);\r\n    setDiseasesList(diseasesList.filter((item) => item !== choosedItem));\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <h3>Diseases</h3>\r\n      <AllergensInput placeholder=\"\" item={item} setItem={setItem} handleSubmit={handleSubmit} />\r\n\r\n      {diseasesList.length ? (\r\n        <>\r\n          <AllergensList deleteItem={deleteItem} allergensList={diseasesList} />\r\n        </>\r\n      ) : (\r\n        <p>Patient doesn't have any diseases</p>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DiseasesForm;\r\n","import AllergensInput from 'components/molecules/AllergensInput/AllergensInput';\r\nimport AllergensList from 'components/molecules/AllergensList/AllergensList';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Wrapper } from '../AllergensForm/AllergensForm.styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewPatient } from 'store/store';\r\nimport { useParams } from 'react-router-dom';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\n\r\nconst PreferencesForm = () => {\r\n  const { id } = useParams();\r\n  const [preferencesList, setPreferencesList] = useState<string[]>(['']);\r\n  const [item, setItem] = useState('');\r\n  const patientsList = useSelector((state: any) => state.patientsList);\r\n  const dispatch = useDispatch();\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\r\n    event.preventDefault();\r\n\r\n    if (item) {\r\n      setPreferencesList([...preferencesList, item]);\r\n      setItem('');\r\n    } else if (!item) {\r\n      alert('Please enter value!');\r\n    }\r\n  };\r\n\r\n  const deleteItem = (choosedItem: string) => {\r\n    console.log(choosedItem);\r\n    setPreferencesList(preferencesList.filter((item) => item !== choosedItem));\r\n  };\r\n  useEffect(() => {\r\n    const getList = patientsList.filter((item: typeof patient) => item.id === Number(id));\r\n    setPreferencesList(getList[0].preferences);\r\n  }, []);\r\n  useEffect(() => {\r\n    setPatient({ ...patient, preferences: preferencesList })\r\n    dispatch(addNewPatient({ ...patient, preferences: preferencesList }));\r\n  }, [preferencesList]);\r\n  return (\r\n    <Wrapper>\r\n      <h3>Doesn't like</h3>\r\n      <AllergensInput color=\"#F8DA00\" placeholder=\"\" item={item} setItem={setItem} handleSubmit={handleSubmit} />\r\n\r\n      {preferencesList.length ? (\r\n        <>\r\n          <AllergensList color=\"#F8DA00\" deleteItem={deleteItem} allergensList={preferencesList} />\r\n        </>\r\n      ) : (\r\n        <p>Patient doesn't have any preferences</p>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PreferencesForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  padding: 15px;\r\n  width: 100%;\r\n  min-height: calc(100vh - 75px);\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n`;\r\n","import AllergensForm from '../AllergensForm/AllergensForm';\r\nimport DiseasesForm from '../DiseasesForm/DiseasesForm';\r\nimport PreferencesForm from '../PreferencesForm/PreferencesForm';\r\nimport { Wrapper } from './AllergensFormContainer.styles';\r\n\r\nconst AllergensFormContainer = () => {\r\n  return (\r\n    <Wrapper>\r\n      <AllergensForm />\r\n      <PreferencesForm />\r\n      <DiseasesForm />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AllergensFormContainer;\r\n","import AllergensFormContainer from 'components/organisms/AllergensFormContainer/AllergensFormContainer';\r\nimport ManageNavBar from 'components/organisms/ManageNavBar/ManageNavBar';\r\nimport ManageTop from 'components/organisms/ManageTop/ManageTop';\r\nimport { Wrapper } from './About.styles';\r\n\r\nconst Allergens = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ManageTop />\r\n      <ManageNavBar />\r\n      <AllergensFormContainer />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Allergens;\r\n","import Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  padding: 10px;\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n`;\r\n\r\nconst BloodTestsFormBottomBar = ({ handleOpenModal }: { handleOpenModal: () => void }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Button onClick={handleOpenModal}>Add test</Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default BloodTestsFormBottomBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 1fr 4fr 4fr 3fr 3fr;\r\nalign-items: center;\r\njustify-content: center;\r\nwidth: 100%;\r\nheight: 45px;\r\nbackground-color: ${({ theme }) => theme.colors.blue3};\r\ncolor: white;\r\ntext-align: center;\r\n\r\ndiv {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n`;","import { Wrapper } from \"./BloodTestsFormTopBar.styles\";\r\n\r\nconst BloodTestsFormTopBar = () => {\r\n  return (\r\n    <Wrapper>\r\n      <div>No</div>\r\n      <div>Date</div>\r\n      <div>Type of test</div>\r\n      <div>Value</div>\r\n      <div>Manage</div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default BloodTestsFormTopBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 4fr 4fr 3fr 3fr;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 45px;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  font-size: ${({ theme }) => theme.fontSizes.xm};\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n","import { Wrapper } from './BloodTestPatientInfo.styles';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport { useContext } from 'react';\r\nimport { addNewPatient } from 'store/store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { patients } from 'mocks/handlers/patients';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\n\r\nexport interface IBloodTestPatientInfo {\r\n  index: number;\r\n  type: string;\r\n  value: string;\r\n  date: string;\r\n}\r\n\r\nconst BloodTestPatientInfo = ({ index, type, value, date }: IBloodTestPatientInfo) => {\r\n  const { setPatient, patient } = useContext(PatientContext);\r\n  const patientsList = useSelector((state: any) => state.patientsList);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteTest = (type: string) => {\r\n    const tests = patient.tests.filter((item) => item.type !== type);\r\n    setPatient({ ...patient, tests });\r\n    dispatch(addNewPatient({ ...patient, tests }));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>{index}</div>\r\n      <div>{date}</div>\r\n      <div>{type}</div>\r\n      <div>{value}</div>\r\n      <div>\r\n        <Button backgroundColor=\"#C1C1C1\" onClick={() => deleteTest(type)}>\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default BloodTestPatientInfo;\r\n","import Button from 'components/atoms/Button/Button';\r\nimport { ModalForm, ModalTop, Wrapper } from './TestsModal.styles';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addNewPatient } from 'store/store';\r\n\r\nconst TestsModal = ({ handleCloseModal }: { handleCloseModal: () => void }) => {\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  const dispatch = useDispatch();\r\n  const [testRecord, setTestRecord] = useState({\r\n    date: '',\r\n    type: '',\r\n    value: '',\r\n  });\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    setTestRecord({\r\n      ...testRecord,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (testRecord.date && testRecord.value && testRecord.type) {\r\n      setPatient({\r\n        ...patient,\r\n        tests: [...patient.tests, testRecord],\r\n      });\r\n      handleCloseModal();\r\n    } else {\r\n      alert('Please provide all data');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(addNewPatient(patient));\r\n  }, [patient]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ModalTop>\r\n        Add new test record\r\n        <Button backgroundColor=\"#505050\" padding=\"6px 28px\" fontSize=\"12px\" onClick={handleCloseModal}>\r\n          Close\r\n        </Button>\r\n      </ModalTop>\r\n      <ModalForm onChange={handleChange} onSubmit={handleSubmit}>\r\n        <label>\r\n          Type of test\r\n          <input type=\"text\" name=\"type\" placeholder=\"Glucose\" />\r\n        </label>\r\n        <label>\r\n          Value\r\n          <input type=\"text\" name=\"value\" placeholder=\"95mg\" />\r\n        </label>\r\n        <label>\r\n          Date\r\n          <input type=\"text\" name=\"date\" placeholder=\"2021-01-01\" />\r\n        </label>\r\n        <Button backgroundColor=\"#505050\" padding=\"6px 28px\" fontSize=\"12px\" type=\"submit\">\r\n          Add test\r\n        </Button>\r\n      </ModalForm>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TestsModal;\r\n","import BloodTestsFormBottomBar from 'components/molecules/BloodTestsFormBottomBar/BloodTestsFormBottomBar';\r\nimport BloodTestsFormTopBar from 'components/molecules/BloodTestsFormTopBar/BloodTestsFormTopBar';\r\nimport BloodTestPatientInfo from 'components/molecules/BloodTestPatientInfo/BloodTestPatientInfo';\r\nimport styled from 'styled-components';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Modal from '../Modal/Modal';\r\nimport useModal from '../Modal/useModal';\r\nimport TestsModal from '../Modal/TestsModal';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: calc(100vh - 75px);\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n`;\r\n\r\nconst BloodTestsForm = () => {\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  const patientsList = useSelector((state: any) => state.patientsList);\r\n  const { isOpen, handleCloseModal, handleOpenModal } = useModal();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <BloodTestsFormTopBar />\r\n      <BloodTestsFormBottomBar handleOpenModal={handleOpenModal} />\r\n      {patient.tests &&\r\n        patient.tests.map((patient, index) => {\r\n          return <BloodTestPatientInfo index={index + 1} key={patient.type} {...patient} />;\r\n        })}\r\n      <Modal handleCloseModal={handleCloseModal} isOpen={isOpen}>\r\n        <TestsModal handleCloseModal={handleCloseModal} />\r\n      </Modal>\r\n\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default BloodTestsForm;\r\n","import BloodTestsForm from 'components/organisms/BloodTestsForm/BloodTestsForm';\r\nimport ManageNavBar from 'components/organisms/ManageNavBar/ManageNavBar';\r\nimport ManageTop from 'components/organisms/ManageTop/ManageTop';\r\nimport { Wrapper } from './About.styles';\r\n\r\nconst BloodTests = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ManageTop />\r\n      <ManageNavBar />\r\n      <BloodTestsForm />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default BloodTests;\r\n","import Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  padding: 10px;\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n`;\r\n\r\nconst AppointmentsFormBottomBar = ({ handleOpenModal }: { handleOpenModal: () => void }) => {\r\n  return <Wrapper>\r\n    <Button onClick={handleOpenModal}>Add appointment</Button>\r\n  </Wrapper>;\r\n};\r\n\r\nexport default AppointmentsFormBottomBar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 3fr 2fr 2fr 2fr 2fr 3fr;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 45px;\r\n  background-color: ${({ theme }) => theme.colors.blue3};\r\n  color: white;\r\n  text-align: center;\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst AppointmentsFormTopBar = () => {\r\n  return (\r\n    <Wrapper>\r\n      <div>No</div>\r\n      <div>Date</div>\r\n      <div>Body mass (kg)</div>\r\n      <div>BMI</div>\r\n      <div>Hips (cm)</div>\r\n      <div>Waist (cm)</div>\r\n      <div>Manage</div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AppointmentsFormTopBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 3fr 2fr 2fr 2fr 2fr 3fr;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 45px;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  font-size: ${({ theme }) => theme.fontSizes.xm};\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n","import { Wrapper } from './AppointmentsPatientInfo.styles';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport { useContext } from 'react';\r\nimport { addNewPatient } from 'store/store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { patients } from 'mocks/handlers/patients';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\n\r\nexport interface IAppointmentsPatientInfo {\r\n  index: number;\r\n  date: string;\r\n  BMI: string;\r\n  bodymass: string;\r\n  hips: string;\r\n  waist: string;\r\n}\r\n\r\nconst AppointmentsPatientInfo = ({ index, date, BMI, bodymass, hips, waist }: IAppointmentsPatientInfo) => {\r\n  const { setPatient, patient } = useContext(PatientContext);\r\n  const patientsList = useSelector((state: any) => state.patientsList);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteAppointment = (bodymass: string) => {\r\n    const appointments = patient.appointments.filter((item) => item.bodymass !== bodymass);\r\n    setPatient({ ...patient, appointments });\r\n    dispatch(addNewPatient({ ...patient, appointments }));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>{index}</div>\r\n      <div>{date}</div>\r\n      <div>{bodymass}</div>\r\n      <div>{BMI}</div>\r\n      <div>{hips}</div>\r\n      <div>{waist}</div>\r\n      <div>\r\n        <Button backgroundColor=\"#C1C1C1\" onClick={() => deleteAppointment(bodymass)}>\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AppointmentsPatientInfo;\r\n","import Button from 'components/atoms/Button/Button';\r\nimport { ModalForm, ModalTop, Wrapper } from './TestsModal.styles';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addNewPatient } from 'store/store';\r\n\r\nconst AppointmentsModal = ({ handleCloseModal }: { handleCloseModal: () => void }) => {\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  const dispatch = useDispatch();\r\n  const [appointmentRecord, setAppointmentRecord] = useState({\r\n    date: '',\r\n    bodymass: '',\r\n    BMI: 'no data',\r\n    hips: 'no data',\r\n    waist: 'no data',\r\n  });\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    setAppointmentRecord({\r\n      ...appointmentRecord,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (appointmentRecord.date && appointmentRecord.bodymass) {\r\n      setPatient({\r\n        ...patient,\r\n        appointments: [...patient.appointments, appointmentRecord],\r\n      });\r\n      handleCloseModal();\r\n    } else {\r\n      alert(\"Please provide required data: date, body mass.\")\r\n\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(addNewPatient(patient));\r\n  }, [patient]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ModalTop>\r\n        Add new appointment records\r\n        <Button backgroundColor=\"#505050\" padding=\"6px 28px\" fontSize=\"12px\" onClick={handleCloseModal}>\r\n          Close\r\n        </Button>\r\n      </ModalTop>\r\n      <ModalForm onChange={handleChange} onSubmit={handleSubmit}>\r\n        <label>\r\n          Body mass (kg)\r\n          <input type=\"text\" name=\"bodymass\" placeholder=\"81kg\" />\r\n        </label>\r\n        <label>\r\n          BMI\r\n          <input type=\"text\" name=\"BMI\" placeholder=\"21.5\" />\r\n        </label>\r\n        <label>\r\n          Hips (cm)\r\n          <input type=\"text\" name=\"hips\" placeholder=\"97cm\" />\r\n        </label>\r\n        <label>\r\n          Waist (cm)\r\n          <input type=\"text\" name=\"waist\" placeholder=\"88cm\" />\r\n        </label>\r\n        <label>\r\n          Date\r\n          <input type=\"text\" name=\"date\" placeholder=\"2021-01-01\" />\r\n        </label>\r\n        <Button backgroundColor=\"#505050\" padding=\"6px 28px\" fontSize=\"12px\" type=\"submit\">\r\n          Add test\r\n        </Button>\r\n      </ModalForm>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AppointmentsModal;\r\n","import AppointmentsFormBottomBar from 'components/molecules/AppointmentsFormBottomBar/AppointmentsFormBottomBar';\r\nimport AppointmentsFormTopBar from 'components/molecules/AppointmentsFormTopBar/AppointmentsFormTopBar';\r\nimport styled from 'styled-components';\r\nimport { useParams } from 'react-router';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { useContext, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport BloodTestPatientInfo from 'components/molecules/BloodTestPatientInfo/BloodTestPatientInfo';\r\nimport AppointmentsPatientInfo from 'components/molecules/AppointmentsPatientInfo/AppointmentsPatientInfo';\r\nimport Modal from '../Modal/Modal';\r\nimport AppointmentsModal from '../Modal/AppointmentsModal';\r\nimport useModal from '../Modal/useModal';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: calc(100vh - 75px);\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n`;\r\nconst AppointmentsForm = () => {\r\n  const { id } = useParams();\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  const patientsList = useSelector((state: any) => state.patientsList);\r\n  const dispatch = useDispatch();\r\n\r\n  const { isOpen, handleCloseModal, handleOpenModal } = useModal();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const getPatient = patientsList.filter((patient: any) => patient.id === Number(id));\r\n      setPatient(getPatient[0]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <AppointmentsFormTopBar />\r\n      <AppointmentsFormBottomBar handleOpenModal={handleOpenModal} />\r\n      {patient.appointments &&\r\n        patient.appointments.map((patient, index) => {\r\n          return <AppointmentsPatientInfo index={index + 1} key={patient.bodymass} {...patient} />;\r\n        })}\r\n      <Modal handleCloseModal={handleCloseModal} isOpen={isOpen}>\r\n        <AppointmentsModal handleCloseModal={handleCloseModal} />\r\n      </Modal>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AppointmentsForm;\r\n","import AppointmentsForm from 'components/organisms/AppointmentsForm/AppointmentsForm';\r\nimport ManageNavBar from 'components/organisms/ManageNavBar/ManageNavBar';\r\nimport ManageTop from 'components/organisms/ManageTop/ManageTop';\r\nimport { Wrapper } from './About.styles';\r\n\r\nconst Appointments = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ManageTop />\r\n      <ManageNavBar />\r\n      <AppointmentsForm />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { GlobalStyle } from 'assets/styles/GlobalStyle';\nimport { Wrapper } from './Root.styles';\nimport Main from './Main';\nimport About from './About';\nimport Diet from './Diet';\nimport Login from './Login';\nimport { useAuth } from 'hooks/useAuth';\nimport Allergens from './Allergens';\nimport BloodTests from './BloodTests';\nimport Appointments from './Appointments';\n\nconst Root = () => {\n  const { user } = useAuth();\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <GlobalStyle />\n        <Routes>\n          {user.login ? (\n            <Wrapper>\n              <Route path=\"/patient/appointments/:id\" element={<Appointments />} />\n              <Route path=\"/patient/blood-tests/:id\" element={<BloodTests />} />\n              <Route path=\"/patient/allergens/:id\" element={<Allergens />} />\n              <Route path=\"/patient/diet/:id\" element={<Diet />} />\n              <Route path=\"/patient/about/:id\" element={<About />} />\n              <Route path=\"/\" element={<Main />} />\n              <Route path=\"*\" element={<Navigate to=\"/\" />} />\n            </Wrapper>\n          ) : (\n            <>\n              <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n              <Route path=\"/login\" element={<Login />} />\n            </>\n          )}\n        </Routes>\n    </Router>\n  );\n};\n\nexport default Root;\n","export const theme = {\n  colors: {\n    white: '#FFFFFF',\n    black: '#111111',\n    lightBlack: '#343434',\n    grey1: '#E5E5E5',\n    grey2: '#C1C1C1',\n    grey3: '#9D9D9D',\n    grey4: '#505050',\n    blue1: '#50D4FF',\n    blue2: '#16C6FF',\n    blue3: '#00BEFC',\n    blue4: '#00A3D9',\n    red: '#D90000',\n    yellow: '#F8DA00',\n\n  },\n  fontSizes: {\n    xxl: '34px',\n    xl: '24px',\n    l: '17px',\n    xm: '14px',\n    m: '12px',\n    s: '11px',\n  },\n};\n","import { theme } from 'assets/styles/theme';\r\nimport { AuthProvider } from 'hooks/useAuth';\r\nimport { ReactNode } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport PatientProvider from './PatientContext';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from 'store/store';\r\n\r\nconst AppProviders = ({ children }: { children: any }) => {\r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n          <ThemeProvider theme={theme}>\r\n            <PatientProvider>\r\n              <AuthProvider>{children}</AuthProvider>\r\n            </PatientProvider>\r\n          </ThemeProvider>\r\n      </Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppProviders;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'pages/Root';\nimport AppProviders from 'contexts/AppProviders';\n\nasync function main() {\n  if (window.location.pathname === '/dietmaster') {\n    window.location.pathname = '/dietmaster/';\n    return;\n  }\n  const { worker } = require('./mocks/browser');\n  await worker.start({\n    serviceWorker: {\n      url: '/dietmaster/mockServiceWorker.js',\n    },\n  });\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <AppProviders>\n        <Root />\n      </AppProviders>\n    </React.StrictMode>,\n    document.getElementById('root'),\n  );\n}\nmain();\n","// @ts-nocheck\r\nimport { rest } from 'msw';\r\nimport { db } from 'mocks/db';\r\n\r\nexport const patients = [\r\n  rest.get('/dietmaster', (req, res, ctx) => {\r\n    return res(ctx.status(200), ctx.json(db.patient.getAll()));\r\n  }),\r\n\r\n  rest.post('/dietmaster', (req, res, ctx) => {\r\n    const searchInList = db.patient.getAll().filter((patient) => {\r\n      return patient.name.toLowerCase().includes(`${req.body}`) || patient.surname.toLowerCase().includes(`${req.body}`);\r\n    });\r\n    return res(ctx.status(200), ctx.json(searchInList));\r\n  }),\r\n\r\n  rest.get('/dietmaster/patient/about/:id', (req, res, ctx) => {\r\n    if (req.params.id) {\r\n      const matchingPatient = db.patient.getAll().filter((patient) => patient.id === Number(req.params.id));\r\n      return res(ctx.status(200), ctx.json(matchingPatient));\r\n    }\r\n  }),\r\n\r\n  rest.post('/dietmaster/add', (req, res, ctx) => {\r\n    const patient = req.body;\r\n    db.patient.create(patient);\r\n    return res(ctx.status(200), ctx.json(patient));\r\n  }),\r\n  rest.put('/dietmaster/add', (req, res, ctx) => {\r\n    const updatedPatient = db.patient.update({\r\n      where: {\r\n        id: {\r\n          equals: req.body.id,\r\n        },\r\n      },\r\n      data: req.body,\r\n    });\r\n    return res(ctx.status(200), ctx.json(updatedPatient));\r\n  }),\r\n  rest.delete('/dietmaster', (req, res, ctx) => {\r\n    if (req.body) {\r\n      const removedPatient = db.patient.delete({\r\n        where: {\r\n          id: {\r\n            equals: req.body.id,\r\n          },\r\n        },\r\n      });\r\n      return res(\r\n        ctx.status(200),\r\n        ctx.json({\r\n          removedPatient,\r\n        }),\r\n      );\r\n    }\r\n  }),\r\n];\r\n","// @ts-nocheck\r\nimport { rest } from 'msw';\r\nimport { db } from 'mocks/db';\r\nimport { authenticateRequest } from 'mocks/helpers';\r\n\r\nconst sanitizeUser = (user) => {\r\n  const { password, ...rest } = user;\r\n  return rest;\r\n};\r\n\r\nexport const auth = [\r\n  rest.post('/dietmaster/login', (req, res, ctx) => {\r\n    const user = db.dietitian.findFirst({\r\n      where: {\r\n        login: {\r\n          equals: req.body.login,\r\n        },\r\n      },\r\n    });\r\n    if (user && user.password === req.body.password) {\r\n      const token = btoa(user.login);\r\n      localStorage.setItem('__be_token__', token);\r\n      return res(ctx.status(200), ctx.json({ ...sanitizeUser(user), token }));\r\n    }\r\n    return res(\r\n      ctx.status(403),\r\n      ctx.json({\r\n        error: 'Invalid user data',\r\n      }),\r\n    );\r\n  }),\r\n  rest.get('/me', (req, res, ctx) => {\r\n    if (authenticateRequest(req)) {\r\n      const user = db.dietitian.getAll();\r\n      return res(ctx.status(200), ctx.json({ ...sanitizeUser(user) }));\r\n    }\r\n    return res(ctx.status(401));\r\n  }),\r\n];\r\n","export const authenticateRequest = (req: any) => {\r\n  const token = localStorage.getItem('__be_token__') || null;\r\n  const userToken = req.headers.get('Authorization')?.replace('Bearer ', '');\r\n\r\n  return token === userToken;\r\n};","import { patients } from './patients';\r\nimport { auth } from './auth';\r\n\r\nexport const handlers = [...patients, ...auth];","import { setupWorker } from 'msw';\r\nimport { handlers } from './handlers';\r\nimport { db } from './db';\r\n\r\nexport const worker = setupWorker(...handlers);\r\n\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.dietitian.create()\r\n"],"sourceRoot":""}