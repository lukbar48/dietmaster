{"version":3,"sources":["assets/styles/GlobalStyle.ts","assets/styles/theme.ts","pages/Root.styles.ts","components/atoms/Button/Button.tsx","data/data.ts","contexts/context.tsx","components/organisms/MainBottomBar.tsx","components/molecules/MainPatientInfo.tsx","components/atoms/InputMain/InputMain.tsx","components/organisms/MainTopBar.tsx","pages/Main.tsx","components/atoms/ManageNavButton/ManageNavButton.tsx","components/organisms/ManageNavBar.tsx","components/organisms/ManageTop.tsx","pages/About.styles.ts","components/atoms/AboutBottomBarBox/AboutBottomBarBox.tsx","components/organisms/AboutBottomBar.tsx","components/molecules/SexButton.tsx","components/organisms/AboutForm.tsx","pages/About.tsx","pages/Diet.tsx","pages/Root.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","theme","colors","white","black","lightBlack","grey1","grey2","grey3","grey4","blue1","blue2","blue3","blue4","red","fontSizes","xxl","xl","l","m","s","Wrapper","styled","div","StyledButton","button","marginLeft","padding","backgroundColor","borderRadius","fontSize","Button","props","children","patients","id","name","surname","age","sex","email","telephone","bodymass","height","notes","activity","InitialPatientValues","PatientContext","createContext","patientsList","deletePatient","managePatient","setPatient","setPatientsList","sortPatientsList","searchByInputValue","calculateBMI","BMIdescription","calculateRisk","calculateIdealWeight","patient","PatientProvider","useState","Provider","value","findPatient","filter","filteredPatients","sortedPatientsList","sort","a","b","term","search","includes","Number","Math","pow","toFixed","toString","BMI","idealWeightMin","idealWeightMax","MainBottomBar","useContext","className","onClick","li","MainPatientInfo","index","navigate","useNavigate","handleManageClick","Input","input","InputMain","MainTopBar","placeholder","onChange","e","currentTarget","charAt","toUpperCase","slice","Date","getTime","ul","Main","map","NavLink","color","ManageNavButton","to","ManageNavBar","ManageTop","useParams","AboutBottomBarBox","CalculationsWrapper","Calc","AboutBottomBar","SexButton","type","form","TextArea","Slider","AboutForm","nameValue","useRef","surnameValue","ageValue","telephoneValue","emailValue","bodymassValue","heightValue","notesValue","activityValue","useEffect","current","target","htmlFor","ref","min","max","step","About","Diet","Root","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d1c2ffb.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n  }\n  \n  *, *::after, *::before {\n    box-sizing: inherit;\n    margin: 0;\n    padding: 0;\n  }\n  \n  body {\n    font-family: 'Montserrat', sans-serif;\n    margin: 0;\n    padding: 0;\n    overflow-y: hidden;\n  }\n  \n  a, button {\n    font-family: 'Montserrat', sans-serif;\n  }\n`;\n","export const theme = {\n  colors: {\n    white: '#FFFFFF',\n    black: '#111111',\n    lightBlack: '#343434',\n    grey1: '#E5E5E5',\n    grey2: '#C1C1C1',\n    grey3: '#9D9D9D',\n    grey4: '#505050',\n    blue1: '#50D4FF',\n    blue2: '#16C6FF',\n    blue3: '#00BEFC',\n    blue4: '#00A3D9',\n    red: '#FF4343'\n  },\n  fontSizes: {\n    xxl: '34px',\n    xl: '24px',\n    l: '17px',\n    m: '12px',\n    s: '11px',\n  },\n};\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface IButton {\r\n  children: string;\r\n  backgroundColor?: string;\r\n  marginLeft?: string;\r\n  padding?: string;\r\n  borderRadius?: string;\r\n  fontSize?: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst StyledButton = styled.button<IButton>`\r\n  cursor: pointer;\r\n  margin-left: ${({ marginLeft }) => (marginLeft ? marginLeft : 'none')};\r\n  padding: ${({ padding }) => (padding ? padding : '8px 20px')};\r\n  background-color: ${({ backgroundColor, theme: { colors } }) => (backgroundColor ? backgroundColor : colors.blue3)};\r\n  border-radius: ${({ borderRadius }) => (borderRadius ? borderRadius : '6px')};\r\n  border: none;\r\n  font-size: ${({ fontSize, theme: { fontSizes } }) => (fontSize ? fontSize : fontSizes.l)};\r\n  color: ${({ theme }) => theme.colors.white};\r\n\r\n  &:hover {\r\n    box-shadow: inset 0 0 100px 100px rgba(255, 255, 255, 0.3);\r\n  }\r\n`;\r\n\r\nconst Button = ({ ...props }: IButton) => {\r\n  return <StyledButton {...props} >{props.children}</StyledButton>;\r\n};\r\n\r\nexport default Button;","const patients = [\r\n  {\r\n    id: 163655094926240,\r\n    name: 'Nathan',\r\n    surname: 'Wood',\r\n    age: '29',\r\n    sex: 'Male',\r\n    email: 'nathan@nathan.com',\r\n    telephone: '983 634 821',\r\n    bodymass: '84',\r\n    height: '188',\r\n    notes: 'Too fat',\r\n    activity: '1.3'\r\n\r\n  },\r\n  {\r\n    id: 16365516894567,\r\n    name: 'Ffion',\r\n    surname: 'Russell',\r\n    age: '36',\r\n    sex: 'Female',\r\n    email: 'ffion@ffion.com',\r\n    telephone: '834 683 460',\r\n    bodymass: '60',\r\n    height: '170',\r\n    notes: 'Too skinny',\r\n    activity: '2.1'\r\n\r\n  },\r\n  {\r\n    id: 1636552953391,\r\n    name: 'Kane',\r\n    surname: 'Sandoval',\r\n    age: '18',\r\n    sex: 'Male',\r\n    email: 'kane@kane.com',\r\n    telephone: '531 361 765',\r\n    bodymass: '96',\r\n    height: '194',\r\n    notes: 'Too fat',\r\n    activity: '1.9'\r\n  },\r\n  {\r\n    id: 1636551908165,\r\n    name: 'Lara',\r\n    surname: 'Hughes',\r\n    age: '41',\r\n    sex: 'Female',\r\n    email: 'lara@lara.com',\r\n    telephone: '734 643 233',\r\n    bodymass: '71',\r\n    height: '168',\r\n    notes: 'Too skinny',\r\n    activity: '1.6'\r\n  },\r\n];\r\nexport type PatientState = typeof patients[0]\r\nexport default patients;\r\n\r\nexport const InitialPatientValues = {\r\n  id: 0,\r\n  name: '',\r\n  surname: '',\r\n  age: '',\r\n  sex: 'Male',\r\n  email: '',\r\n  telephone: '',\r\n  bodymass: '',\r\n  height: '',\r\n  notes: '',\r\n  activity: '1.2'\r\n};","import React, { useReducer, createContext, useEffect, useState, ReactNode, useContext } from 'react';\r\nimport patients from '../data/data';\r\nimport { PatientState } from '../data/data';\r\nimport { InitialPatientValues } from '../data/data';\r\nimport reducer from './reducer'\r\n\r\nexport type ContextType = {\r\n  patientsList: PatientState[];\r\n  deletePatient: (id: number) => void;\r\n  managePatient: (id: number) => void;\r\n  setPatient: (obj: PatientState) => void;\r\n  setPatientsList: (arr: PatientState[]) => void;\r\n  sortPatientsList: (sex: string) => void;\r\n  patient: PatientState;\r\n  searchByInputValue: (term: string) => void;\r\n  calculateBMI: () => string;\r\n  BMIdescription: () => string;\r\n  calculateRisk: () => string;\r\n  calculateIdealWeight: () => string;\r\n};\r\n\r\nexport const PatientContext = createContext<ContextType>({\r\n  patientsList: patients,\r\n  deletePatient() {},\r\n  managePatient() {},\r\n  setPatient() {},\r\n  setPatientsList() {},\r\n  sortPatientsList() {},\r\n  searchByInputValue() {},\r\n  calculateBMI() {\r\n    return '';\r\n  },\r\n  BMIdescription() {\r\n    return '';\r\n  },\r\n  calculateRisk() {\r\n    return '';\r\n  },\r\n  calculateIdealWeight() {\r\n    return '';\r\n  },\r\n  patient: InitialPatientValues,\r\n});\r\n\r\nconst PatientProvider = ({ children }: { children: ReactNode }) => {\r\n  const [patientsList, setPatientsList] = useState(patients);\r\n  const [patient, setPatient] = useState<typeof InitialPatientValues>(InitialPatientValues);\r\n\r\n\r\n  // const [state, dispatch] = useReducer(reducer, patients);\r\n\r\n\r\n\r\n  const deletePatient = (id: number) => {\r\n    const filteredPatients = patientsList.filter((patient) => patient.id !== id);\r\n    setPatientsList(filteredPatients);\r\n  };\r\n\r\n  const managePatient = (id: number) => {\r\n    const findPatient = patientsList.filter((patient) => patient.id === id);\r\n    setPatient(findPatient[0]);\r\n  };\r\n\r\n  const sortPatientsList = (sex: string) => {\r\n    let sortedPatientsList = patients;\r\n    if (sex === 'female') {\r\n      sortedPatientsList = patientsList.sort((a, b) => (a.sex > b.sex ? 1 : b.sex > a.sex ? -1 : 0));\r\n    } else if (sex === 'male') {\r\n      sortedPatientsList = patientsList.sort((a, b) => (a.sex > b.sex ? -1 : b.sex > a.sex ? 1 : 0));\r\n    } else if (sex === 'off') {\r\n      sortedPatientsList = patientsList.sort((a, b) => (a.id > b.id ? -1 : b.id > a.id ? 1 : 0));\r\n    }\r\n    setPatientsList([...sortedPatientsList]);\r\n  };\r\n\r\n  const searchByInputValue = (term: string) => {\r\n    const search = patientsList.filter((patient) => {\r\n      return patient.name.includes(term) || patient.surname.includes(term);\r\n    });\r\n    setPatientsList(search);\r\n  };\r\n\r\n  const calculateBMI = () => {\r\n    const height = Number(patient.height) / 100;\r\n    const BMI = (Number(patient.bodymass) / Math.pow(height, 2)).toFixed(2).toString();\r\n    return BMI;\r\n  };\r\n\r\n  const BMIdescription = () => {\r\n    const height = Number(patient.height) / 100;\r\n    let BMI = Number((Number(patient.bodymass) / Math.pow(height, 2)).toFixed(2));\r\n    if (BMI < 25 && BMI > 18.5) {\r\n      return 'Normal';\r\n    } else if (BMI >= 25) {\r\n      return 'Obesity';\r\n    } else if (BMI <= 18.5) {\r\n      return 'Underweight';\r\n    } else {\r\n      return 'OK';\r\n    }\r\n  };\r\n\r\n  const calculateRisk = () => {\r\n    const height = Number(patient.height) / 100;\r\n    let BMI = Number((Number(patient.bodymass) / Math.pow(height, 2)).toFixed(2));\r\n    if (BMI < 25 && BMI > 18.5) {\r\n      return 'Lowest';\r\n    } else if (BMI >= 25 && BMI <= 35) {\r\n      return 'High';\r\n    } else if (BMI >= 35) {\r\n      return 'Very high';\r\n    } else if (BMI <= 18.5) {\r\n      return 'High';\r\n    } else {\r\n      return 'OK';\r\n    }\r\n  }\r\n\r\n  const calculateIdealWeight = () => {\r\n    const height = Number(patient.height)\r\n    let idealWeightMin = ''\r\n    let idealWeightMax = ''\r\n    if (patient.sex === 'Male') {\r\n      idealWeightMin = (height - 100 - ((height - 138)/4)).toString()\r\n      idealWeightMax = (height - 100 - ((height - 162)/4)).toString()\r\n    } else {\r\n      idealWeightMin = (height - 100 - ((height - 138)/2)).toString()\r\n      idealWeightMax = (height - 100 - ((height - 162)/2)).toString()\r\n    }\r\n\r\n    return `${idealWeightMin} - ${idealWeightMax} kg`\r\n  }\r\n\r\n  return (\r\n    <PatientContext.Provider\r\n      value={{\r\n        managePatient,\r\n        deletePatient,\r\n        setPatientsList,\r\n        patientsList,\r\n        patient,\r\n        setPatient,\r\n        sortPatientsList,\r\n        searchByInputValue,\r\n        calculateBMI,\r\n        BMIdescription,\r\n        calculateRisk,\r\n        calculateIdealWeight\r\n      }}\r\n    >\r\n      {children}\r\n    </PatientContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PatientProvider;\r\n\r\n// const actionTypes = {\r\n//   changeName = 'CHANGE_NAME',\r\n// };\r\n\r\n\r\n// const changeName = () => {\r\n//   dispatch({ type: 'CLEAR_CART' });\r\n// };\r\n","import React, { useContext } from 'react';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\nimport { PatientContext } from 'contexts/context';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  width: 100vw;\r\n  height: 60px;\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  padding: 0 20px 2px;\r\n\r\n  p {\r\n    font-size: 0.7rem;\r\n    color: ${({ theme }) => theme.colors.white};\r\n  }\r\n\r\n  .filterSex {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .buttons {\r\n      display: flex;\r\n      gap: 2px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MainBottomBar = () => {\r\n  const { sortPatientsList } = useContext(PatientContext);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"filterSex\">\r\n        <p>Sort</p>\r\n        <div className=\"buttons\">\r\n          <Button onClick={()=>sortPatientsList('off')} padding=\"6px 20px\" borderRadius=\"6px 0 0 6px\">\r\n            off\r\n          </Button>\r\n          <Button onClick={()=>sortPatientsList('female')} padding=\"6px 20px\" borderRadius=\"0\">\r\n            female\r\n          </Button>\r\n          <Button onClick={()=>sortPatientsList('male')} padding=\"6px 20px\" borderRadius=\"0 6px 6px 0\">\r\n            male\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainBottomBar;","import React, { useContext } from 'react';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\nimport { PatientContext } from 'contexts/context';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Wrapper = styled.li`\r\n  display: grid;\r\n  grid-template-columns: 5% 20% 20% 10% 15% 30%;\r\n  align-items: center;\r\n  gap: 2px;\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n  padding: 5px;\r\n  color: ${({ theme }) => theme.colors.black};\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 0 1px;\r\n  }\r\n  .buttons {\r\n    grid-column: 6/7;\r\n    display: flex;\r\n    align-content: center;\r\n    justify-content: space-evenly;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\ninterface IPatientInfo {\r\n  name: string;\r\n  surname: string;\r\n  age: string;\r\n  id: number;\r\n  index: number;\r\n}\r\n\r\nconst MainPatientInfo = ({ name, surname, age, id, index }: IPatientInfo) => {\r\n  const { deletePatient, managePatient } = useContext(PatientContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleManageClick = (id: number) => {\r\n    managePatient(id);\r\n    navigate(`/patient/about/${id}`);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>{index + 1}</div>\r\n      <div>{name}</div>\r\n      <div>{surname}</div>\r\n      <div>{age}</div>\r\n      <div className=\"buttons\">\r\n        <Button onClick={() => handleManageClick(id)}>Manage</Button>\r\n        <Button backgroundColor=\"#FF4343\" onClick={() => deletePatient(id)}>\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainPatientInfo;\r\n","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n  padding: 8px;\r\n  border: 1px solid ${({ theme }) => theme.colors.white};\r\n  border-radius: 6px;\r\n  font-size: ${({ theme }) => theme.fontSizes.l};\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  color: ${({ theme }) => theme.colors.white};\r\n`;\r\n\r\ninterface IInput {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  placeholder: string;\r\n}\r\nconst InputMain = ({...props}: IInput) => {\r\n  return <Input {...props}></Input>;\r\n};\r\n\r\nexport default InputMain;\r\n","import React, { useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport InputMain from 'components/atoms/InputMain/InputMain';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\nimport { PatientContext } from 'contexts/context';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  width: 100vw;\r\n  height: 60px;\r\n  padding: 10px;\r\n  background-color: ${({ theme }) => theme.colors.lightBlack};\r\n\r\n  h2 {\r\n    color: ${({ theme }) => theme.colors.white};\r\n    font-weight: 400;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst MainTopBar = () => {\r\n  const { searchByInputValue, setPatient, patient } = useContext(PatientContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = () => {\r\n    setPatient({\r\n      id: new Date().getTime(),\r\n      name: '',\r\n      surname: '',\r\n      age: '',\r\n      sex: 'Male',\r\n      email: '',\r\n      telephone: '',\r\n      bodymass: '',\r\n      height: '',\r\n      notes: '',\r\n      activity: '1.2'\r\n    });\r\n    navigate(`/patient/about/${patient.id}`);\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    function capitalizeFirstLetter(term: string) {\r\n      return term.charAt(0).toUpperCase() + term.slice(1);\r\n    }\r\n    searchByInputValue(capitalizeFirstLetter(e.currentTarget.value));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <h2>Patients record</h2>\r\n      </div>\r\n      <InputMain placeholder=\"Search patient\" onChange={handleChange} />\r\n      <Button onClick={handleClick}>New patient</Button>\r\n      <Button backgroundColor=\"#505050\" marginLeft=\"auto\">\r\n        Log Out\r\n      </Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainTopBar;\r\n","import BottomBar from 'components/organisms/MainBottomBar';\r\nimport MainPatientInfo from 'components/molecules/MainPatientInfo';\r\nimport TopBar from 'components/organisms/MainTopBar';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport data from '../data/data';\r\nimport { PatientContext } from 'contexts/context';\r\n\r\nconst Wrapper = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2px;\r\n  padding: 2px;\r\n  width: 100%;\r\n  margin: 60px 0;\r\n  list-style: none;\r\n  color: ${({ theme }) => theme.colors.black};\r\n`;\r\n\r\nconst Main = () => {\r\n  const { patientsList } = useContext(PatientContext);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <BottomBar />\r\n      <Wrapper>\r\n        {patientsList.map((patient, index) => {\r\n          return <MainPatientInfo index={index} key={patient.id} {...patient} />;\r\n        })}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { ReactNode } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\ninterface IManageNavButton {\r\n  children: ReactNode;\r\n  to: string;\r\n  exact?: boolean;\r\n}\r\n\r\nconst StyledButton = styled(NavLink)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 8px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  background-color: ${({ color, theme: { colors } }) => (color ? color : colors.grey4)};\r\n  border: none;\r\n  font-size: ${({ theme }) => theme.fontSizes.l};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    box-shadow: inset 0 0 100px 100px rgba(255, 255, 255, 0.3);\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${({ theme }) => theme.colors.blue3};\r\n  }\r\n`;\r\n\r\nconst ManageNavButton = ({ children, to }: IManageNavButton) => {\r\n  return <StyledButton to={to}>{children}</StyledButton>;\r\n};\r\n\r\nexport default ManageNavButton;\r\n","import ManageNavButton from 'components/atoms/ManageNavButton/ManageNavButton';\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BsFillPersonFill, BsExclamationDiamond } from \"react-icons/bs\";\r\nimport { ImSpoonKnife } from \"react-icons/im\";\r\nimport { BiTestTube } from \"react-icons/bi\";\r\nimport { AiTwotoneCalendar } from \"react-icons/ai\";\r\nimport { PatientContext } from 'contexts/context';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: ${({ theme }) => theme.colors.red};\r\n`;\r\n\r\nconst ManageNavBar = () => {\r\n  const { patient } = useContext(PatientContext);\r\n\r\n  return <Wrapper>\r\n    <ManageNavButton to={`/patient/about/${patient.id}`}><BsFillPersonFill />About</ManageNavButton>\r\n    <ManageNavButton to={`/patient/diet/${patient.id}`}><ImSpoonKnife />Diet</ManageNavButton>\r\n    <ManageNavButton to={`/patient/allergens/${patient.id}`}><BsExclamationDiamond />Allergens</ManageNavButton>\r\n    <ManageNavButton to={`/patient/blood-tests/${patient.id}`}><BiTestTube />Blood tests</ManageNavButton>\r\n    <ManageNavButton to={`/patient/appointments/${patient.id}`}><AiTwotoneCalendar />Appointments</ManageNavButton>\r\n  </Wrapper>;\r\n};\r\n\r\nexport default ManageNavBar;\r\n","import React, { useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\nimport { PatientContext } from 'contexts/context';\r\nimport { useParams } from 'react-router';\r\nimport { InitialPatientValues } from '../../data/data';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  height: 35px;\r\n  padding: 0 30px;\r\n  background-color: ${({ theme }) => theme.colors.blue3};\r\n`;\r\n\r\nconst ManageTop = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { patientsList, setPatientsList, patient, setPatient } = useContext(PatientContext);\r\n\r\n  const handleClick = () => {\r\n    if (id) {\r\n      const filteredPatients = patientsList.filter((patient) => patient.id !== Number(id));\r\n\r\n      // setPatientsList(\r\n      //   patientsList.map((patientList) => {\r\n      //     if (patientList.id === Number(id)) {\r\n      //       return {\r\n      //         ...patientList,\r\n      //         name: patient.name,\r\n      //         surname: patient.surname,\r\n      //         age: patient.age,\r\n      //         sex: patient.sex,\r\n      //         email: patient.email,\r\n      //         telephone: patient.telephone,\r\n      //         bodymass: patient.bodymass,\r\n      //         height: patient.height,\r\n      //         notes: patient.notes,\r\n      //         activity: patient.activity,\r\n      //       };\r\n      //     }\r\n      //     return patientList;\r\n      //   }),\r\n      // );\r\n      setPatientsList([patient, ...filteredPatients])\r\n      setPatient(InitialPatientValues);\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  const handleExitClick = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Button onClick={handleClick} backgroundColor=\"#00A3D9\" padding=\"6px 18px\" fontSize=\"12px\">\r\n        Save changes\r\n      </Button>\r\n      <Button onClick={handleExitClick} backgroundColor=\"#505050\" padding=\"6px 28px\" fontSize=\"12px\">\r\n        Discard / Exit\r\n      </Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ManageTop;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 1100px;\r\n  min-width: 600px;\r\n  margin: 0 auto;\r\n  color: ${({ theme }) => theme.colors.black};\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: ${({ theme }) => theme.colors.grey3};\r\n`;\r\n\r\nconst AboutBottomBarBox = ({ children }: { children: string | number }) => {\r\n  return <Wrapper>{children}</Wrapper>;\r\n};\r\n\r\nexport default AboutBottomBarBox;\r\n","import AboutBottomBarBox from 'components/atoms/AboutBottomBarBox/AboutBottomBarBox';\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { PatientContext } from 'contexts/context';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 120px 1fr;\r\n  width: 100%;\r\n  height: 100px;\r\n  padding: 20px 20px 20px 5px;\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  color: ${({ theme }) => theme.colors.white};\r\n\r\n  .text {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst CalculationsWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr 2fr 2fr;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Calc = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  p {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst AboutBottomBar = () => {\r\n  const { BMIdescription, calculateBMI,calculateRisk, patient, calculateIdealWeight } = useContext(PatientContext);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"text\">Body weight assessment</div>\r\n      <CalculationsWrapper>\r\n        <Calc>\r\n          <p>BMI</p>\r\n          <AboutBottomBarBox>{ patient.bodymass && patient.height ? calculateBMI() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n        <Calc>\r\n          <p>Description</p>\r\n          <AboutBottomBarBox>{ patient.bodymass && patient.height ? BMIdescription() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n        <Calc>\r\n          <p>Risk of cardiovascular disease</p>\r\n          <AboutBottomBarBox>{ patient.bodymass && patient.height ? calculateRisk() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n        <Calc>\r\n          <p>Ideal body weight</p>\r\n          <AboutBottomBarBox>{ patient.bodymass && patient.height ? calculateIdealWeight() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n      </CalculationsWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AboutBottomBar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  .sex {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n  div {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 35px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding-right: 5%;\r\n\r\n    label {\r\n      input {\r\n        margin: 0 5px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SexButton = () => {\r\n  return (\r\n    <Wrapper>\r\n      <label className=\"sex\">Sex</label>\r\n      <div>\r\n        <label>\r\n          <input type=\"radio\" name=\"sex\" value=\"Male\" />\r\n          Male\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"sex\" value=\"Female\" />\r\n          Female\r\n        </label>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SexButton;\r\n","import SexButton from 'components/molecules/SexButton';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { PatientContext } from 'contexts/context';\r\nimport { useParams } from 'react-router';\r\n\r\nconst Wrapper = styled.form`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 15px;\r\n  width: 100%;\r\n  height: calc(100vh - 165px);\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n\r\n  div:nth-child(1) {\r\n    grid-area: 1/1/2/3;\r\n  }\r\n  div:nth-child(2) {\r\n    grid-area: 1/3/2/5;\r\n  }\r\n  div:nth-child(3) {\r\n    grid-area: 1/5/2/6;\r\n  }\r\n  div:nth-child(4) {\r\n    grid-area: 1/6/2/7;\r\n  }\r\n  div:nth-child(5) {\r\n    grid-area: 2/1/3/2;\r\n  }\r\n  div:nth-child(6) {\r\n    grid-area: 2/2/3/3;\r\n  }\r\n  div:nth-child(7) {\r\n    grid-area: 2/3/3/5;\r\n  }\r\n  div:nth-child(8) {\r\n    grid-area: 2/5/3/7;\r\n  }\r\n`;\r\n\r\nconst Input = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n\r\n  label {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 35px;\r\n    border: none;\r\n    border-radius: 6px;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nconst TextArea = styled.div`\r\n  width: 100%;\r\n  grid-area: 3/1/4/5;\r\n\r\n  label {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n  textarea {\r\n    width: 100%;\r\n    border: none;\r\n    border-radius: 6px;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    padding: 10px;\r\n    height: 100px;\r\n    font-family: 'Montserrat', sans-serif;\r\n  }\r\n`;\r\n\r\nconst Slider = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  grid-area: 4/1/5/7;\r\n\r\n  p {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n  input {\r\n    width: 100%;\r\n  }\r\n  .minmax {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst AboutForm = () => {\r\n  const { id } = useParams();\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  const nameValue = useRef<HTMLInputElement>(null);\r\n  const surnameValue = useRef<HTMLInputElement>(null);\r\n  const ageValue = useRef<HTMLInputElement>(null);\r\n  const telephoneValue = useRef<HTMLInputElement>(null);\r\n  const emailValue = useRef<HTMLInputElement>(null);\r\n  const bodymassValue = useRef<HTMLInputElement>(null);\r\n  const heightValue = useRef<HTMLInputElement>(null);\r\n  const notesValue = useRef<HTMLTextAreaElement>(null);\r\n  const activityValue = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      if (nameValue.current) {\r\n        nameValue.current.value = patient.name;\r\n      }\r\n      if (surnameValue.current) {\r\n        surnameValue.current.value = patient.surname;\r\n      }\r\n      if (ageValue.current) {\r\n        ageValue.current.value = patient.age;\r\n      }\r\n      if (telephoneValue.current) {\r\n        telephoneValue.current.value = patient.telephone;\r\n      }\r\n      if (emailValue.current) {\r\n        emailValue.current.value = patient.email;\r\n      }\r\n      if (bodymassValue.current) {\r\n        bodymassValue.current.value = patient.bodymass;\r\n      }\r\n      if (heightValue.current) {\r\n        heightValue.current.value = patient.height;\r\n      }\r\n      if (notesValue.current) {\r\n        notesValue.current.value = patient.notes;\r\n      }\r\n      if (activityValue.current) {\r\n        activityValue.current.value = patient.activity;\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    setPatient({\r\n      ...patient,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper onChange={handleChange}>\r\n      <Input>\r\n        <label htmlFor=\"Name\">Name</label>\r\n        <input ref={nameValue} id=\"name\" name=\"name\" type=\"text\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Surname\">Surname</label>\r\n        <input ref={surnameValue} id=\"surname\" name=\"surname\" type=\"text\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Age\">Age</label>\r\n        <input ref={ageValue} id=\"age\" name=\"age\" type=\"number\" />\r\n      </Input>\r\n      <SexButton />\r\n      <Input>\r\n        <label htmlFor=\"Body mass (kg)\">Body mass (kg)</label>\r\n        <input ref={bodymassValue} id=\"bodymass\" name=\"bodymass\" type=\"number\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Height (cm)\">Height (cm)</label>\r\n        <input ref={heightValue} id=\"height\" name=\"height\" type=\"number\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Telephone\">Telephone</label>\r\n        <input ref={telephoneValue} id=\"telephone\" name=\"telephone\" type=\"tel\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"E-mail\">E-mail</label>\r\n        <input ref={emailValue} id=\"email\" name=\"email\" type=\"email\" />\r\n      </Input>\r\n      <TextArea>\r\n        <label htmlFor=\"Notes\">Notes</label>\r\n        <textarea ref={notesValue} id=\"notes\" name=\"notes\" />\r\n      </TextArea>\r\n      <Slider>\r\n        <p>Physical activity</p>\r\n        <input ref={activityValue} id=\"activity\" name=\"activity\" type=\"range\" min=\"1.2\" max=\"2.4\" step=\"0.1\" />\r\n        <div className=\"minmax\">\r\n          <p>1.2</p>\r\n          <p>2.4</p>\r\n        </div>\r\n      </Slider>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AboutForm;\r\n","import React from 'react';\r\nimport ManageNavBar from 'components/organisms/ManageNavBar';\r\nimport ManageTop from 'components/organisms/ManageTop';\r\nimport { Wrapper } from './About.styles';\r\nimport AboutBottomBar from 'components/organisms/AboutBottomBar';\r\nimport AboutForm from 'components/organisms/AboutForm';\r\n\r\n\r\nconst About = () => {\r\n  return (\r\n      <Wrapper>\r\n        <ManageTop />\r\n        <ManageNavBar />\r\n        <AboutForm />\r\n        <AboutBottomBar />\r\n      </Wrapper>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport ManageNavBar from 'components/organisms/ManageNavBar';\r\nimport ManageTop from 'components/organisms/ManageTop';\r\nimport { Wrapper } from './About.styles';\r\n\r\nconst Diet = () => {\r\n  return (\r\n    <Wrapper>\r\n        <ManageTop />\r\n        <ManageNavBar />\r\n      </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Diet\r\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyle } from 'assets/styles/GlobalStyle';\nimport { theme } from 'assets/styles/theme';\nimport { Wrapper } from './Root.styles';\nimport Main from './Main';\nimport About from './About';\nimport ManageDiet from './Diet';\n\nconst Root = () => (\n  <Router>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Routes>\n        <Wrapper>\n          <Route path=\"/patient/appointments/:id\" element={<ManageDiet />} />\n          <Route path=\"/patient/blood-tests/:id\" element={<ManageDiet />} />\n          <Route path=\"/patient/allergens/:id\" element={<ManageDiet />} />\n          <Route path=\"/patient/diet/:id\" element={<ManageDiet />} />\n          <Route path=\"/patient/about/:id\" element={<About />} />\n          <Route path=\"/\" element={<Main />} />\n        </Wrapper>\n      </Routes>\n    </ThemeProvider>\n  </Router>\n);\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'pages/Root';\nimport PatientProvider from 'contexts/context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PatientProvider>\n      <Root />\n    </PatientProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}