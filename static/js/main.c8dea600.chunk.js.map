{"version":3,"sources":["mocks/db.ts","assets/styles/GlobalStyle.ts","pages/Root.styles.ts","components/atoms/Button/Button.styles.ts","components/atoms/Button/Button.tsx","store/store.tsx","components/organisms/MainBottomBar.tsx","data/data.ts","reducers/PatientsReducer.ts","contexts/PatientContext.tsx","components/molecules/MainPatientInfo.styles.ts","components/molecules/MainPatientInfo.tsx","components/atoms/InputMain/InputMain.tsx","hooks/useAuth.tsx","components/organisms/MainTopBar.tsx","pages/Main.styles.ts","pages/Main.tsx","components/atoms/ManageNavButton/ManageNavButton.styles.ts","components/atoms/ManageNavButton/ManageNavButton.tsx","components/organisms/ManageNavBar.tsx","components/organisms/ManageTop.styles.ts","components/organisms/ManageTop.tsx","pages/About.styles.ts","components/atoms/AboutBottomBarBox/AboutBottomBarBox.tsx","components/organisms/AboutBottomBar.styles.ts","hooks/useCalculate.tsx","components/organisms/AboutBottomBar.tsx","components/molecules/SexButton.styles.ts","components/molecules/SexButton.tsx","components/organisms/AboutForm.styles.ts","components/organisms/AboutForm.tsx","pages/About.tsx","components/organisms/DietForm.tsx","pages/Diet.tsx","assets/images/logo.png","pages/Login.styles.ts","components/molecules/LoginInput.styles.ts","components/molecules/LoginInput.tsx","pages/Login.tsx","pages/Root.tsx","assets/styles/theme.ts","contexts/AppProviders.tsx","index.tsx","mocks/handlers/patients.js","mocks/handlers/auth.js","mocks/helpers.ts","mocks/handlers/index.js","mocks/browser.js"],"names":["sex","note","getRandomValue","array","index","db","factory","patient","id","primaryKey","faker","datatype","number","min","max","name","fake","surname","age","email","telephone","bodymass","height","notes","activity","precision","dietitian","login","password","GlobalStyle","createGlobalStyle","Wrapper","styled","div","StyledButton","button","marginLeft","padding","backgroundColor","colors","theme","blue3","borderRadius","fontSize","fontSizes","l","white","Button","props","children","patientsSlice","createSlice","initialState","reducers","getPatientsList","state","action","i","payload","length","push","addPatient","findPatient","findFirst","where","equals","Number","axios","put","catch","err","console","log","post","filter","addPatientState","unshift","removePatient","delete","data","then","sortPatientsList","sort","a","b","actions","store","configureStore","reducer","patients","grey4","MainBottomBar","useSelector","dispatch","useDispatch","className","onClick","getAll","InitialPatientValues","PatientsReducer","type","sortedList","Error","PatientContext","createContext","patientsList","managePatient","setPatient","searchResults","searchTerm","setSearchTerm","PatientProvider","useState","useReducer","setSearchResults","patientsRedux","dispatchRedux","useEffect","get","Provider","value","li","grey1","black","MainPatientInfo","useContext","navigate","useNavigate","handleManageClick","handleDeleteClick","Input","input","InputMain","InitialUserValues","token","AuthContext","signIn","signOut","user","AuthProvider","setUser","localStorage","getItem","headers","authorization","response","setItem","removeItem","useAuth","lightBlack","MainTopBar","placeholder","onChange","e","currentTarget","toLowerCase","Date","getTime","ul","Main","map","NavLink","color","ManageNavButton","to","ManageNavBar","ManageTop","grey3","AboutBottomBarBox","CalculationsWrapper","Calc","useCalculate","calculateBMI","Math","pow","toFixed","toString","BMIdescription","BMI","calculateRisk","idealWeight","idealWeightMin","idealWeightMax","calculateCPM","AboutBottomBar","SexButton","form","TextArea","Slider","AboutForm","useParams","nameValue","useRef","surnameValue","ageValue","telephoneValue","emailValue","bodymassValue","heightValue","notesValue","activityValue","current","target","htmlFor","ref","step","About","Sliders","SliderDesc","SliderWrapper","CPMWrapper","ShowCPM","xm","DietForm","establishCPM","setEstablishCPM","protein","setProtein","fat","setFat","carbs","setCarbs","handleCPMInputChange","handleSliderChange","Diet","Form","Image","img","Label","label","LoginInput","React","forwardRef","Login","useForm","register","handleSubmit","formState","errors","src","logo","onSubmit","required","Root","basename","process","path","element","grey2","blue1","blue2","blue4","red","xxl","xl","m","s","AppProviders","require","worker","start","serviceWorker","url","ReactDOM","render","StrictMode","document","getElementById","main","rest","req","res","ctx","status","json","searchInList","includes","body","params","matchingPatient","create","updatedPatient","update","removedPatient","sanitizeUser","auth","btoa","error","replace","authenticateRequest","handlers","setupWorker"],"mappings":"yGAAA,+DAGMA,EAAM,CAAC,OAAQ,UACfC,EAAO,CAAC,UAAW,cACnBC,EAAiB,SAACC,EAAYC,GAAb,OAA4BD,EAAMC,IAE5CC,EAAKC,kBAAQ,CACxBC,QAAS,CACPC,GAAIC,sBAAW,kBAAMC,IAAMC,SAASC,OAAO,CAAEC,IAAK,eAAiBC,IAAK,oBACxEC,KAAM,kBAAML,IAAMM,KAAK,uBACvBC,QAAS,kBAAcP,IAAMM,KAAK,sBAClCE,IAAK,2BAAiBR,IAAMC,SAASC,OAAO,CAAEC,IAAK,GAAIC,IAAK,OAC5Dd,IAAK,kBAAcE,EAAeF,EAAKU,IAAMC,SAASC,OAAO,CAAEC,IAAK,EAAGC,IAAK,MAC5EK,MAAO,kBAAaT,IAAMM,KAAK,uBAC/BI,UAAW,2BAAiBV,IAAMC,SAASC,OAAO,CAAEC,IAAK,IAAWC,IAAK,cACzEO,SAAU,2BAAiBX,IAAMC,SAASC,OAAO,CAAEC,IAAK,GAAIC,IAAK,QACjEQ,OAAQ,2BAAiBZ,IAAMC,SAASC,OAAO,CAAEC,IAAK,IAAKC,IAAK,QAChES,MAAO,kBAAcrB,EAAeD,EAAMS,IAAMC,SAASC,OAAO,CAAEC,IAAK,EAAGC,IAAK,MAC/EU,SAAU,2BAAiBd,IAAMC,SAASC,OAAO,CAAEC,IAAK,IAAKC,IAAK,IAAKW,UAAW,QAEpFC,UAAW,CACTlB,GAAIC,sBAAW,iBAAM,OACrBM,KAAM,iBAAM,gBACZY,MAAO,iBAAM,WACbC,SAAU,iBAAM,e,qMCvBPC,EAAcC,YAAH,qWCAXC,EAAUC,IAAOC,IAAV,+G,QCCPC,EAAeF,IAAOG,OAAV,+QAER,gBAAGC,EAAH,EAAGA,WAAH,OAAqBA,GAA0B,UACnD,gBAAGC,EAAH,EAAGA,QAAH,OAAkBA,GAAoB,cAC7B,gBAAGC,EAAH,EAAGA,gBAA0BC,EAA7B,EAAoBC,MAASD,OAA7B,OAA6CD,GAAoCC,EAAOE,SAC3F,gBAAGC,EAAH,EAAGA,aAAH,OAAuBA,GAA8B,SAEzD,gBAAGC,EAAH,EAAGA,SAAmBC,EAAtB,EAAaJ,MAASI,UAAtB,OAAyCD,GAAsBC,EAAUC,KAC7E,qBAAGL,MAAkBD,OAAOO,S,OCJxBC,EAJA,SAAC,GAA2B,IAAtBC,EAAqB,oBACxC,OAAO,cAACd,EAAD,2BAAkBc,GAAlB,aAA0BA,EAAMC,a,8CCgBnCC,GAAgBC,aAAY,CAChCpC,KAAM,WACNqC,aAJiC,GAKjCC,SAAU,CACRC,gBADQ,SACQC,EAAOC,GACrB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAOE,QAAQC,OAAQF,IACzCF,EAAMK,KAAKJ,EAAOE,QAAQD,KAG9BI,WANQ,SAMGN,EAAOC,GAChB,IAAMM,EAAczD,KAAGE,QAAQwD,UAAU,CACvCC,MAAO,CACLxD,GAAI,CACFyD,OAAQC,OAAOV,EAAOE,QAAQlD,QAclC,OAVGsD,EAIMA,GACTK,KACGC,IADH,kBAC0BZ,EAAOE,SAC9BW,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAN9BH,KACGM,KADH,kBAC2BjB,EAAOE,SAC/BW,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAMbf,EAAMmB,QAAO,SAACnE,GAAD,OAAaA,EAAQC,KAAOgD,EAAOE,QAAQlD,OAG7EmE,gBA1BQ,SA0BQpB,EAAMC,GACpBD,EAAMqB,QAAQpB,EAAOE,UAEvBmB,cA7BQ,SA6BMtB,EAAOC,GACnB,IAAMM,EAAczD,KAAGE,QAAQwD,UAAU,CACvCC,MAAO,CACLxD,GAAI,CACFyD,OAAQC,OAAOV,EAAOE,aAIxBI,GACFK,KACGW,OAAO,cAAe,CAAEC,KAAMjB,IAC9BkB,MAAK,YAAc,EAAXD,QAGRV,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAGlCW,iBA9CQ,SA8CS1B,EAAOC,GAEtB,OAAOD,EAAM2B,MAAK,SAACC,EAAGC,GACpB,MAAuB,WAAnB5B,EAAOE,QACFyB,EAAEnF,IAAMoF,EAAEpF,IAAM,EAAIoF,EAAEpF,IAAMmF,EAAEnF,KAAO,EAAI,EACpB,SAAnBwD,EAAOE,QACTyB,EAAEnF,IAAMoF,EAAEpF,KAAO,EAAIoF,EAAEpF,IAAMmF,EAAEnF,IAAM,EAAI,EACpB,QAAnBwD,EAAOE,QACTyB,EAAE3E,GAAK4E,EAAE5E,IAAM,EAAI4E,EAAE5E,GAAK2E,EAAE3E,GAAK,EAAI,EAChB,QAAnBgD,EAAOE,QACTyB,EAAElE,QAAUmE,EAAEnE,QAAU,EAAImE,EAAEnE,QAAUkE,EAAElE,SAAW,EAAI,EACpC,QAAnBuC,EAAOE,QACTyB,EAAElE,QAAUmE,EAAEnE,SAAW,EAAImE,EAAEnE,QAAUkE,EAAElE,QAAU,EAAI,OAD3D,S,GAQkFiC,GAAcmC,QAAhGxB,G,GAAAA,WAAYc,G,GAAAA,gBAAiBE,G,GAAAA,cAAevB,G,GAAAA,gBAAiB2B,G,GAAAA,iBAG/DK,GAAQC,aAAe,CAClCC,QAAS,CACPC,SAAUvC,GAAcsC,WCvFtBzD,GAAUC,IAAOC,IAAV,yZASS,qBAAGO,MAAkBD,OAAOmD,SAKrC,qBAAGlD,MAAkBD,OAAOO,SAoD1B6C,GAtCO,WACpB,IAAMF,EAAWG,aAAY,SAACrC,GAAD,OAAgBA,EAAMkC,YAC7CI,EAAWC,cAEjB,OACE,cAAC,GAAD,UACE,sBAAKC,UAAU,YAAf,UACE,qCACA,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CACEC,QAAS,WACPH,EAASZ,GAAiB,QAC1BV,QAAQC,IAAI,SAAUiB,GACtBlB,QAAQC,IAAI,MAAOnE,KAAGE,QAAQ0F,WAEhC5D,QAAQ,WACRK,aAAa,cAPf,iBAWA,cAAC,EAAD,CAAQsD,QAAS,kBAAMH,EAASZ,GAAiB,YAAY5C,QAAQ,WAAWK,aAAa,IAA7F,oBAGA,cAAC,EAAD,CAAQsD,QAAS,kBAAMH,EAASZ,GAAiB,UAAU5C,QAAQ,WAAWK,aAAa,IAA3F,kBAGA,cAAC,EAAD,CAAQsD,QAAS,kBAAMH,EAASZ,GAAiB,SAAS5C,QAAQ,WAAWK,aAAa,IAA1F,iBAGA,cAAC,EAAD,CAAQsD,QAAS,kBAAMH,EAASZ,GAAiB,SAAS5C,QAAQ,WAAWK,aAAa,cAA1F,0B,QCNK+C,GAzDE,CACf,CACEjF,GAAI,eACJO,KAAM,SACNE,QAAS,OACTC,IAAK,KACLlB,IAAK,OACLmB,MAAO,oBACPC,UAAW,cACXC,SAAU,KACVC,OAAQ,MACRC,MAAO,UACPC,SAAU,OAGZ,CACEhB,GAAI,cACJO,KAAM,QACNE,QAAS,UACTC,IAAK,KACLlB,IAAK,SACLmB,MAAO,kBACPC,UAAW,cACXC,SAAU,KACVC,OAAQ,MACRC,MAAO,aACPC,SAAU,OAGZ,CACEhB,GAAI,cACJO,KAAM,OACNE,QAAS,WACTC,IAAK,KACLlB,IAAK,OACLmB,MAAO,gBACPC,UAAW,cACXC,SAAU,KACVC,OAAQ,MACRC,MAAO,UACPC,SAAU,OAEZ,CACEhB,GAAI,cACJO,KAAM,OACNE,QAAS,SACTC,IAAK,KACLlB,IAAK,SACLmB,MAAO,gBACPC,UAAW,cACXC,SAAU,KACVC,OAAQ,MACRC,MAAO,aACPC,SAAU,QAMD0E,GAAuB,CAClC1F,GAAI,EACJO,KAAM,GACNE,QAAS,GACTC,IAAK,GACLlB,IAAK,OACLmB,MAAO,GACPC,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,SAAU,O,SCxBG2E,GApCS,SAAC5C,EAAwBC,GAC/C,OAAQA,EAAO4C,MACb,IAAK,oBACH,OAAO5C,EAAOE,QAEhB,IAAK,cAEH,MAAM,CADaF,EAAOE,SAC1B,oBAAuBH,IAEzB,IAAK,qBAEH,IAAM8C,EAAa9C,EAAM2B,MAAK,SAACC,EAAGC,GAChC,MAAuB,WAAnB5B,EAAOE,QACFyB,EAAEnF,IAAMoF,EAAEpF,IAAM,EAAIoF,EAAEpF,IAAMmF,EAAEnF,KAAO,EAAI,EACpB,SAAnBwD,EAAOE,QACTyB,EAAEnF,IAAMoF,EAAEpF,KAAO,EAAIoF,EAAEpF,IAAMmF,EAAEnF,IAAM,EAAI,EACpB,QAAnBwD,EAAOE,QACTyB,EAAE3E,GAAK4E,EAAE5E,IAAM,EAAI4E,EAAE5E,GAAK2E,EAAE3E,GAAK,EAAI,EAChB,QAAnBgD,EAAOE,QACTyB,EAAElE,QAAUmE,EAAEnE,QAAU,EAAImE,EAAEnE,QAAUkE,EAAElE,SAAW,EAAI,EACpC,QAAnBuC,EAAOE,QACTyB,EAAElE,QAAUmE,EAAEnE,SAAW,EAAImE,EAAEnE,QAAUkE,EAAElE,QAAU,EAAI,OAD3D,KAIT,OAAO,aAAIoF,GAEb,IAAK,iBAEH,OAD2B9C,EAAMmB,QAAO,SAACnE,GAAD,OAAaA,EAAQC,KAAOgD,EAAOE,QAAQlD,MAGrF,QACE,MAAM,IAAI8F,MAAM,qBCrBTC,GAAiBC,wBAAkC,CAC9DC,aAAchB,GACdiB,cAF8D,aAG9DC,WAH8D,aAI9DC,cAAenB,GACfoB,WAAY,GACZC,cAN8D,aAO9DvG,QAAS2F,KAoDIa,GAjDS,SAAC,GAA2C,IAAzC9D,EAAwC,EAAxCA,SAAwC,EACnC+D,mBAAsCd,IADH,oBAC1D3F,EAD0D,KACjDoG,EADiD,OAEhCM,qBAAWd,GAAiB,CAACD,KAFG,oBAE1DO,EAF0D,aAGvBO,mBAAwC,KAHjB,oBAG1DJ,EAH0D,KAG3CM,EAH2C,OAI7BF,mBAAS,IAJoB,oBAI1DH,EAJ0D,KAI9CC,EAJ8C,KAM3DK,EAAgBvB,aAAY,SAACrC,GAAD,OAAgBA,EAAMkC,YAClD2B,EAAgBtB,cAEtBuB,qBAAU,WACRlD,KACGmD,IAAI,eACJtC,MAAK,YAAe,IAAZD,EAAW,EAAXA,KACPqC,EAAc9D,GAAgByB,OAE/BV,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,IAEH+C,qBAAU,WACRlD,KACGM,KAAK,cAAeoC,GACpB7B,MAAK,YAAe,IAAZD,EAAW,EAAXA,KACPmC,EAAiBnC,MAElBV,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAACuC,IAOJ,OACE,cAACN,GAAegB,SAAhB,CACEC,MAAO,CACLd,cARgB,SAAClG,GACrB,IAAMsD,EAAcqD,EAAczC,QAAO,SAACnE,GAAD,OAAkBA,EAAQC,KAAOA,KAC1EmG,EAAW7C,EAAY,KAOnB2C,eACAlG,UACAoG,aACAC,gBACAC,aACAC,iBARJ,SAWG7D,KCxEMlB,GAAUC,IAAOyF,GAAV,6cAOE,qBAAGjF,MAAkBD,OAAOmF,SAEvC,qBAAGlF,MAAkBD,OAAOoF,SC8BxBC,GA/BS,SAAC,GAAqD,IAAnD7G,EAAkD,EAAlDA,KAAME,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,IAAKV,EAA8B,EAA9BA,GAAIJ,EAA0B,EAA1BA,MACzCsG,EAAkBmB,qBAAWtB,IAA7BG,cACFoB,EAAWC,cAGXlC,GADWD,aAAY,SAACrC,GAAD,OAAgBA,EAAMkC,YAClCK,eAUjB,OACE,eAAC,GAAD,WACE,8BAAM1F,EAAQ,IACd,8BAAMW,IACN,8BAAME,IACN,8BAAMC,IACN,sBAAK6E,UAAU,UAAf,UACE,cAAC,EAAD,CAAQC,QAAS,kBAfG,SAACxF,GACzBkG,EAAclG,GACdsH,EAAS,kBAAD,OAAmBtH,IAaAwH,CAAkBxH,IAAzC,oBACA,cAAC,EAAD,CAAQ8B,gBAAgB,UAAU0D,QAAS,kBAZvB,SAACxF,GACzBqF,EAAShB,GAAcrE,IAW8ByH,CAAkBzH,IAAnE,2BC9BK0H,GAAQlG,IAAOmG,MAAV,0JAEI,qBAAG3F,MAAkBD,OAAOO,SAEnC,qBAAGN,MAAkBI,UAAUC,KACxB,qBAAGL,MAAkBD,OAAOmD,SACvC,qBAAGlD,MAAkBD,OAAOO,SAOxBsF,GAJG,SAAC,GAAwB,IAApBpF,EAAmB,oBACxC,OAAO,cAACkF,GAAD,eAAWlF,KCVdqF,GAAoB,CAAE7H,GAAI,GAAImB,MAAO,GAAIZ,KAAM,GAAIuH,MAAO,IAQ1DC,GAAc/B,wBAAkC,CACpDgC,OADoD,aAEpDC,QAFoD,aAGpDC,KAAML,KAGKM,GAAe,SAAC,GAAgD,IAA9C1F,EAA6C,EAA7CA,SAA6C,EAClD+D,mBAASqB,IADyC,oBACnEK,EADmE,KAC7DE,EAD6D,KAG1EvB,qBAAU,WACR,IAAMiB,EAAQO,aAAaC,QAAQ,SAC/BR,GACF,sBAAC,4BAAAnD,EAAA,+EAE0BhB,KAAMmD,IAAI,MAAO,CACtCyB,QAAS,CACPC,cAAc,UAAD,OAAYV,MAJhC,OAESW,EAFT,OAOGL,EAAQK,EAASlE,KAAK,IAPzB,gDASGR,QAAQC,IAAR,MATH,wDAAD,KAaD,IAEH,IAAMgE,EAAM,uCAAG,iCAAArD,EAAA,6DAASxD,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,kBAEYuC,KAAMM,KAAK,oBAAqB,CAAE9C,QAAOC,aAFrD,OAELqH,EAFK,OAGXL,EAAQK,EAASlE,MACjB8D,aAAaK,QAAQ,QAASD,EAASlE,KAAKuD,OAJjC,gDAMX/D,QAAQC,IAAR,MANW,yDAAH,sDAcZ,OAAO,cAAC+D,GAAYhB,SAAb,CAAsBC,MAAO,CAAEkB,OAAMF,SAAQC,QAJpC,WACdG,EAAQ,CAAEpI,GAAI,GAAImB,MAAO,GAAIZ,KAAM,GAAIuH,MAAO,KAC9CO,aAAaM,WAAW,WAEnB,SAAyDlG,KAGrDmG,GAAU,WAGrB,OAFavB,qBAAWU,KChDpBxG,GAAUC,IAAOC,IAAV,4SAWS,qBAAGO,MAAkBD,OAAO8G,cAGrC,qBAAG7G,MAAkBD,OAAOO,SA+C1BwG,GAzCI,WAAO,IAAD,EACoCzB,qBAAWtB,IAA9DI,EADe,EACfA,WAAYpG,EADG,EACHA,QAASsG,EADN,EACMA,WAAYC,EADlB,EACkBA,cACnCgB,EAAWC,cAETU,EAAYW,KAAZX,QAuBR,OACE,eAAC,GAAD,WACE,8BACE,mDAEF,cAAC,GAAD,CAAWc,YAAY,iBAAiB/B,MAAOX,EAAY2C,SAT1C,SAACC,GACpB3C,EAAc2C,EAAEC,cAAclC,MAAMmC,kBASlC,cAAC,EAAD,CAAQ3D,QA3BkB,WAC5BW,EAAW,CACTnG,IAAI,IAAIoJ,MAAOC,UACf9I,KAAM,GACNE,QAAS,GACTC,IAAK,GACLlB,IAAK,OACLmB,MAAO,GACPC,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,SAAU,QAEZsG,EAAS,kBAAD,OAAmBvH,EAAQC,MAajC,yBACA,cAAC,EAAD,CAAQwF,QAASyC,EAASnG,gBAAgB,UAAUF,WAAW,OAA/D,yBC5DOL,GAAUC,IAAO8H,GAAV,8KAQT,qBAAGtH,MAAkBD,OAAOoF,SCoBxBoC,GAtBF,WAAO,IAAD,EACqBlC,qBAAWtB,IAAzCK,EADS,EACTA,cAAeC,EADN,EACMA,WACjBpB,EAAWG,aAAY,SAACrC,GAAD,OAAgBA,EAAMkC,YAEnD,OACE,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,eAAC,GAAD,WACGoB,GACCD,EAAcoD,KAAI,SAACzJ,EAASH,GAC1B,OAAO,cAAC,GAAD,aAAiBA,MAAOA,GAA4BG,GAAhBA,EAAQC,QAErDqG,GACApB,EAASuE,KAAI,SAACzJ,EAAcH,GAC1B,OAAO,cAAC,GAAD,aAAiBA,MAAOA,GAA4BG,GAAhBA,EAAQC,cCpBlD0B,GAAeF,YAAOiI,IAAPjI,CAAH,iYAOH,gBAAGkI,EAAH,EAAGA,MAAgB3H,EAAnB,EAAUC,MAASD,OAAnB,OAAmC2H,GAAgB3H,EAAOmD,SAEjE,qBAAGlD,MAAkBI,UAAUC,KACnC,qBAAGL,MAAkBD,OAAOO,SAQf,qBAAGN,MAAkBD,OAAOE,SCdrC0H,GAJS,SAAC,GAAwC,IAAtClH,EAAqC,EAArCA,SAAUmH,EAA2B,EAA3BA,GACnC,OAAO,cAAC,GAAD,CAAcA,GAAIA,EAAlB,SAAuBnH,K,uCCK1BlB,GAAUC,IAAOC,IAAV,iJAoBEoI,GAZM,WAAO,IAClB9J,EAAYsH,qBAAWtB,IAAvBhG,QAER,OAAO,eAAC,GAAD,WACL,eAAC,GAAD,CAAiB6J,GAAE,yBAAoB7J,EAAQC,IAA/C,UAAqD,cAAC,KAAD,IAArD,WACA,eAAC,GAAD,CAAiB4J,GAAE,wBAAmB7J,EAAQC,IAA9C,UAAoD,cAAC,KAAD,IAApD,UACA,eAAC,GAAD,CAAiB4J,GAAE,6BAAwB7J,EAAQC,IAAnD,UAAyD,cAAC,KAAD,IAAzD,eACA,eAAC,GAAD,CAAiB4J,GAAE,+BAA0B7J,EAAQC,IAArD,UAA2D,cAAC,KAAD,IAA3D,iBACA,eAAC,GAAD,CAAiB4J,GAAE,gCAA2B7J,EAAQC,IAAtD,UAA4D,cAAC,KAAD,IAA5D,sBCvBSuB,GAAUC,IAAOC,IAAV,iLAOE,qBAAGO,MAAkBD,OAAOE,SCgCnC6H,GA9BG,WAChB,IAAMxC,EAAWC,cADK,EAEUF,qBAAWtB,IAAnChG,EAFc,EAEdA,QAASoG,EAFK,EAELA,WAEXd,EAAWC,cAcjB,OACE,eAAC,GAAD,WACE,cAAC,EAAD,CAAQE,QAdY,WACtBH,EAAShC,GAAWtD,IACpBsF,EAASlB,GAAgBpE,IACzBoG,EAAWT,IACX4B,EAAS,MAU2BxF,gBAAgB,UAAUD,QAAQ,WAAWM,SAAS,OAAxF,0BAGA,cAAC,EAAD,CAAQqD,QAVY,WACtB8B,EAAS,KACTnB,EAAWT,KAQyB5D,gBAAgB,UAAUD,QAAQ,WAAWM,SAAS,OAAxF,gCChCOZ,GAAUC,IAAOC,IAAV,sKAOT,qBAAGO,MAAkBD,OAAOoF,SCNjC5F,GAAUC,IAAOC,IAAV,6JAMS,qBAAGO,MAAkBD,OAAOgI,SAOnCC,GAJW,SAAC,GAAiD,IAA/CvH,EAA8C,EAA9CA,SAC3B,OAAO,cAAC,GAAD,UAAUA,KCTNlB,GAAUC,IAAOC,IAAV,qTAME,qBAAGO,MAAkBD,OAAOmD,SACvC,qBAAGlD,MAAkBD,OAAOO,SAU1B2H,GAAsBzI,IAAOC,IAAV,uGAMnByI,GAAO1I,IAAOC,IAAV,0KCmCF0I,GA5DM,SAACpK,GAyDpB,MAAO,CAAEqK,aAxDY,WACnB,IAAMtJ,EAAS4C,OAAO3D,EAAQe,QAAU,IAExC,OADa4C,OAAO3D,EAAQc,UAAYwJ,KAAKC,IAAIxJ,EAAQ,IAAIyJ,QAAQ,GAAGC,YAsDnDC,eAlDA,WACrB,IAAM3J,EAAS4C,OAAO3D,EAAQe,QAAU,IACpC4J,EAAMhH,QAAQA,OAAO3D,EAAQc,UAAYwJ,KAAKC,IAAIxJ,EAAQ,IAAIyJ,QAAQ,IAC1E,OAAIG,EAAM,IAAMA,EAAM,KACb,SACEA,GAAO,GACT,UACEA,GAAO,KACT,cAEA,MAwC4BC,cApCjB,WACpB,IAAM7J,EAAS4C,OAAO3D,EAAQe,QAAU,IACpC4J,EAAMhH,QAAQA,OAAO3D,EAAQc,UAAYwJ,KAAKC,IAAIxJ,EAAQ,IAAIyJ,QAAQ,IAC1E,OAAIG,EAAM,IAAMA,EAAM,KACb,SACEA,GAAO,IAAMA,GAAO,GACtB,OACEA,GAAO,GACT,YACEA,GAAO,KACT,OAEA,MAwB2CE,YApBlC,WAClB,IAAM9J,EAAS4C,OAAO3D,EAAQe,QAC1B+J,EAAiB,GACjBC,EAAiB,GASrB,MARoB,SAAhB/K,EAAQP,KACVqL,GAAkB/J,EAAS,KAAOA,EAAS,KAAO,GAAG0J,WACrDM,GAAkBhK,EAAS,KAAOA,EAAS,KAAO,GAAG0J,aAErDK,GAAkB/J,EAAS,KAAOA,EAAS,KAAO,GAAG0J,WACrDM,GAAkBhK,EAAS,KAAOA,EAAS,KAAO,GAAG0J,YAGjD,GAAN,OAAUK,EAAV,cAA8BC,EAA9B,QAQiEC,aAL9C,WAEnB,QADa,KAAQ,MAAQrH,OAAO3D,EAAQc,UAAc,MAAQ6C,OAAO3D,EAAQe,QAAY,MAAQ4C,OAAO3D,EAAQW,MAAOgD,OAAO3D,EAAQiB,WAC/HuJ,UAAUC,cCrBVQ,GA7BQ,WAAO,IACpBjL,EAAYsH,qBAAWtB,IAAvBhG,QADmB,EAE0CoK,GAAapK,GAA1E0K,EAFmB,EAEnBA,eAAgBL,EAFG,EAEHA,aAAcO,EAFX,EAEWA,cAAeC,EAF1B,EAE0BA,YAErD,OACE,eAAC,GAAD,WACE,qBAAKrF,UAAU,OAAf,oCACA,eAAC0E,GAAD,WACE,eAACC,GAAD,WACE,oCACA,cAAC,GAAD,UAAoBnK,EAAQc,UAAYd,EAAQe,OAASsJ,IAAiB,QAE5E,eAACF,GAAD,WACE,4CACA,cAAC,GAAD,UAAoBnK,EAAQc,UAAYd,EAAQe,OAAS2J,IAAmB,QAE9E,eAACP,GAAD,WACE,+DACA,cAAC,GAAD,UAAoBnK,EAAQc,UAAYd,EAAQe,OAAS6J,IAAkB,QAE7E,eAACT,GAAD,WACE,kDACA,cAAC,GAAD,UAAoBnK,EAAQc,UAAYd,EAAQe,OAAS8J,IAAgB,e,SC1BtErJ,GAAUC,IAAOC,IAAV,2XCmBLwJ,GAlBG,WAChB,OACE,eAAC,GAAD,WACE,uBAAO1F,UAAU,MAAjB,iBACA,gCACE,kCACE,uBAAOK,KAAK,QAAQrF,KAAK,MAAMyG,MAAM,SADvC,UAIA,kCACE,uBAAOpB,KAAK,QAAQrF,KAAK,MAAMyG,MAAM,WADvC,mBCVKzF,GAAUC,IAAO0J,KAAV,goBAQE,qBAAGlJ,MAAkBD,OAAOmF,SA4BrCQ,GAAQlG,IAAOC,IAAV,yUAgBM,qBAAGO,MAAkBD,OAAOO,SAKvC6I,GAAW3J,IAAOC,IAAV,yVAYG,qBAAGO,MAAkBD,OAAOO,SAQvC8I,GAAS5J,IAAOC,IAAV,2SCkDJ4J,KAvHT,IAAIjC,MAAOC,UAaC,WAAO,IACfrJ,EAAOsL,cAAPtL,GADc,EAEUqH,qBAAWtB,IAAnChG,EAFc,EAEdA,QAASoG,EAFK,EAELA,WACXoF,EAAYC,iBAAyB,MACrCC,EAAeD,iBAAyB,MACxCE,EAAWF,iBAAyB,MACpCG,EAAiBH,iBAAyB,MAC1CI,EAAaJ,iBAAyB,MACtCK,EAAgBL,iBAAyB,MACzCM,EAAcN,iBAAyB,MACvCO,EAAaP,iBAA4B,MACzCQ,EAAgBR,iBAAyB,MAE/C3E,qBAAU,WACJ7G,IACF2D,KACGmD,IADH,oCACoC9G,IACjCwE,MAAK,YAAe,IAAZD,EAAW,EAAXA,KACPA,EAAK,IAAM4B,EAAW5B,EAAK,OAE5BV,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAE1ByH,EAAUU,UACZV,EAAUU,QAAQjF,MAAQjH,EAAQQ,MAEhCkL,EAAaQ,UACfR,EAAaQ,QAAQjF,MAAQjH,EAAQU,SAEnCiL,EAASO,UACXP,EAASO,QAAQjF,MAAQjH,EAAQW,KAE/BiL,EAAeM,UACjBN,EAAeM,QAAQjF,MAAQjH,EAAQa,WAErCgL,EAAWK,UACbL,EAAWK,QAAQjF,MAAQjH,EAAQY,OAEjCkL,EAAcI,UAChBJ,EAAcI,QAAQjF,MAAQjH,EAAQc,UAEpCiL,EAAYG,UACdH,EAAYG,QAAQjF,MAAQjH,EAAQe,QAElCiL,EAAWE,UACbF,EAAWE,QAAQjF,MAAQjH,EAAQgB,OAEjCiL,EAAcC,UAChBD,EAAcC,QAAQjF,MAAQjH,EAAQiB,aAGzC,IASH,OACE,eAAC,GAAD,CAASgI,SARU,SAACC,GACpB9C,EAAW,2BACNpG,GADK,mBAEPkJ,EAAEiD,OAAO3L,KAAO0I,EAAEiD,OAAOlF,UAK5B,UACE,eAAC,GAAD,WACE,uBAAOmF,QAAQ,OAAf,kBACA,uBAAOC,IAAKb,EAAWvL,GAAG,OAAOO,KAAK,OAAOqF,KAAK,YAEpD,eAAC,GAAD,WACE,uBAAOuG,QAAQ,UAAf,qBACA,uBAAOC,IAAKX,EAAczL,GAAG,UAAUO,KAAK,UAAUqF,KAAK,YAE7D,eAAC,GAAD,WACE,uBAAOuG,QAAQ,MAAf,iBACA,uBAAOC,IAAKV,EAAU1L,GAAG,MAAMO,KAAK,MAAMqF,KAAK,cAEjD,cAAC,GAAD,IACA,eAAC,GAAD,WACE,uBAAOuG,QAAQ,iBAAf,4BACA,uBAAOC,IAAKP,EAAe7L,GAAG,WAAWO,KAAK,WAAWqF,KAAK,cAEhE,eAAC,GAAD,WACE,uBAAOuG,QAAQ,cAAf,yBACA,uBAAOC,IAAKN,EAAa9L,GAAG,SAASO,KAAK,SAASqF,KAAK,cAE1D,eAAC,GAAD,WACE,uBAAOuG,QAAQ,YAAf,uBACA,uBAAOC,IAAKT,EAAgB3L,GAAG,YAAYO,KAAK,YAAYqF,KAAK,WAEnE,eAAC,GAAD,WACE,uBAAOuG,QAAQ,SAAf,oBACA,uBAAOC,IAAKR,EAAY5L,GAAG,QAAQO,KAAK,QAAQqF,KAAK,aAEvD,eAACuF,GAAD,WACE,uBAAOgB,QAAQ,QAAf,mBACA,0BAAUC,IAAKL,EAAY/L,GAAG,QAAQO,KAAK,aAE7C,eAAC6K,GAAD,WACE,kDACA,uBAAOgB,IAAKJ,EAAehM,GAAG,WAAWO,KAAK,WAAWqF,KAAK,QAAQvF,IAAI,MAAMC,IAAI,MAAM+L,KAAK,QAC/F,sBAAK9G,UAAU,SAAf,UACE,oCACA,+CCxGK+G,GAXD,WACZ,OACI,eAAC,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QCRF/K,GAAUC,IAAOC,IAAV,wKAMS,qBAAGO,MAAkBD,OAAOmF,SAE5CqF,GAAU/K,IAAO0J,KAAV,uGAOPsB,GAAahL,IAAOC,IAAV,iFAKVgL,GAAgBjL,IAAOC,IAAV,yFAMbiL,GAAalL,IAAOC,IAAV,gGAMVkL,GAAUnL,IAAOC,IAAV,wfAUS,qBAAGO,MAAkBD,OAAOmD,SACnC,qBAAGlD,MAAkBI,UAAUwK,MAM7B,qBAAG5K,MAAkBI,UAAUC,KAGxB,qBAAGL,MAAkBD,OAAOO,SAGnC,qBAAGN,MAAkBI,UAAUC,KAkFjCwK,GA7EE,WAAO,IACd9M,EAAYsH,qBAAWtB,IAAvBhG,QACAgL,EAAiBZ,GAAapK,GAA9BgL,aAFa,EAGmBvE,mBAASuE,KAH5B,oBAGd+B,EAHc,KAGAC,EAHA,OAISvG,mBAAS,GAJlB,oBAIdwG,EAJc,KAILC,EAJK,OAKCzG,mBAAS,IALV,oBAKd0G,EALc,KAKTC,EALS,OAMK3G,mBAAS,IANd,oBAMd4G,EANc,KAMPC,EANO,KAgBrB,OACE,eAAC,GAAD,WACE,eAACX,GAAD,WACE,eAACC,GAAD,WACE,gDACA,8BAAM5B,SAER,eAAC4B,GAAD,WACE,gDACA,uBAAO/G,KAAK,OAAOoB,MAAO8F,EAAc9D,SAAU,SAACC,GAAD,OAjB7B,SAACA,GAC5B8D,EAAgB9D,EAAEC,cAAclC,OAgB+BsG,CAAqBrE,YAGlF,eAACsD,GAAD,CAASvD,SAAU,SAACC,GAAD,OAhBI,SAACA,GAC1BlF,QAAQC,IAAIiF,EAAEiD,QAecqB,CAAmBtE,IAA7C,UACE,eAACuD,GAAD,WACE,mCACA,wCAEF,eAACC,GAAD,WACE,yCACA,uBACEzM,GAAG,UACHO,KAAK,UACLqF,KAAK,QACLvF,IAAI,IACJC,IAAI,MACJ+L,KAAK,IACLrF,MAAOgG,EACPhE,SAAU,SAACC,GAAD,OAA4CgE,EAAWvJ,OAAOuF,EAAEC,cAAclC,cAG5F,eAACyF,GAAD,WACE,qCACA,uBACEzM,GAAG,MACHO,KAAK,MACLqF,KAAK,QACLvF,IAAI,IACJC,IAAI,MACJ+L,KAAK,IACLrF,MAAOkG,EACPlE,SAAU,SAACC,GAAD,OAA4CkE,EAAOzJ,OAAOuF,EAAEC,cAAclC,cAGxF,eAACyF,GAAD,WACE,+CACA,uBACEzM,GAAG,QACHO,KAAK,QACLqF,KAAK,QACLvF,IAAI,IACJC,IAAI,MACJ+L,KAAK,IACLrF,MAAOoG,EACPpE,SAAU,SAACC,GAAD,OAA4CoE,EAAS3J,OAAOuF,EAAEC,cAAclC,qBCtHnFwG,GAVF,WACX,OACE,eAAC,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,Q,UCXS,OAA0B,iCCE5BjM,GAAUC,IAAOC,IAAV,+JASPgM,GAAOjM,IAAO0J,KAAV,8dASK,qBAAGlJ,MAAkBD,OAAOmF,SAMrCwG,GAAQlM,IAAOmM,IAAV,+D,SCxBLpM,GAAUC,IAAOC,IAAV,yFAKPiG,GAAQlG,IAAOmG,MAAV,mKAGI,qBAAG3F,MAAkBD,OAAOO,SAMrCsL,GAAQpM,IAAOqM,MAAV,+DAEH,qBAAG7L,MAAkBI,UAAUwK,MCL/BkB,GATIC,IAAMC,YAAW,WAAoE5B,GAAc,IAA/EyB,EAA8E,EAA9EA,MAAOtN,EAAuE,EAAvEA,KAAMP,EAAiE,EAAjEA,GAAI4F,EAA6D,EAA7DA,KAAMoB,EAAuD,EAAvDA,MAAOgC,EAAgD,EAAhDA,SAAaxG,EAAmC,gEACnH,OACE,eAAC,GAAD,WACE,cAACoL,GAAD,CAAOzB,QAASnM,EAAhB,SAAqB6N,IACrB,cAAC,GAAD,yBAAOtN,KAAMA,EAAMqF,KAAMA,EAAM5F,GAAIA,EAAIgJ,SAAUA,EAAUhC,MAAOA,GAAWxE,GAA7E,IAAoF4J,IAAKA,WCuBhF6B,GAvBD,WAAO,IACXjG,EAAWY,KAAXZ,OADU,EAOdkG,eAHFC,EAJgB,EAIhBA,SACAC,EALgB,EAKhBA,aALgB,EAMhBC,UAAaC,OAGf,OACE,eAAC,GAAD,WACE,cAACZ,GAAD,CAAOa,IAAKC,KACZ,eAACf,GAAD,CAAMgB,SAAUL,EAAapG,GAA7B,UACE,cAAC,GAAD,aAAYhI,GAAG,QAAQ6N,MAAM,QAAQjI,KAAK,OAAOmD,YAAY,kBAAqBoF,EAAS,QAAS,CAAEO,UAAU,MAEhH,cAAC,GAAD,aAAY1O,GAAG,WAAW6N,MAAM,WAAWjI,KAAK,WAAWmD,YAAY,iBAAoBoF,EAAS,WAAY,CAAEO,UAAU,MAE5H,cAAC,EAAD,CAAQ9I,KAAK,SAAb,4BCYO+I,GA5BF,WAAO,IACVzG,EAASU,KAATV,KAER,OACE,eAAC,IAAD,CAAQ0G,SAAUC,cAAlB,UACI,cAACxN,EAAD,IACA,cAAC,IAAD,UACG6G,EAAK/G,MACJ,eAACI,EAAD,WACE,cAAC,IAAD,CAAOuN,KAAK,4BAA4BC,QAAS,cAAC,GAAD,MACjD,cAAC,IAAD,CAAOD,KAAK,2BAA2BC,QAAS,cAAC,GAAD,MAChD,cAAC,IAAD,CAAOD,KAAK,yBAAyBC,QAAS,cAAC,GAAD,MAC9C,cAAC,IAAD,CAAOD,KAAK,oBAAoBC,QAAS,cAAC,GAAD,MACzC,cAAC,IAAD,CAAOD,KAAK,qBAAqBC,QAAS,cAAC,GAAD,MAC1C,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,GAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,IAAD,CAAUnF,GAAG,WAGxC,qCACE,cAAC,IAAD,CAAOkF,KAAK,IAAIC,QAAS,cAAC,IAAD,CAAUnF,GAAG,aACtC,cAAC,IAAD,CAAOkF,KAAK,SAASC,QAAS,cAAC,GAAD,eC7B/B/M,GAAQ,CACnBD,OAAQ,CACNO,MAAO,UACP6E,MAAO,UACP0B,WAAY,UACZ3B,MAAO,UACP8H,MAAO,UACPjF,MAAO,UACP7E,MAAO,UACP+J,MAAO,UACPC,MAAO,UACPjN,MAAO,UACPkN,MAAO,UACPC,IAAK,WAEPhN,UAAW,CACTiN,IAAK,OACLC,GAAI,OACJjN,EAAG,OACHuK,GAAI,OACJ2C,EAAG,OACHC,EAAG,SCCQC,GAdM,SAAC,GAA2C,IAAzChN,EAAwC,EAAxCA,SACtB,OACE,mCACE,cAAC,IAAD,CAAUqC,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAe9C,MAAOA,GAAtB,SACE,cAAC,GAAD,UACE,cAAC,GAAD,UAAeS,a,8CCT3B,8BAAAkC,EAAA,qFAMuB+K,EAAQ,MAAnBC,EANZ,EAMYA,OANZ,SAOUA,EAAOC,MAAM,CACjBC,cAAe,CACbC,IAAK,sCATb,OAaEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAnB5B,4C,2DAsBAC,I,oHCvBanL,EAAW,CACtBoL,IAAKvJ,IAAI,eAAe,SAACwJ,EAAKC,EAAKC,GACjC,OAAOD,EAAIC,EAAIC,OAAO,KAAMD,EAAIE,KAAK7Q,IAAGE,QAAQ0F,cAGlD4K,IAAKpM,KAAK,eAAe,SAACqM,EAAKC,EAAKC,GAClC,IAAMG,EAAe9Q,IAAGE,QAAQ0F,SAASvB,QAAO,SAACnE,GAC/C,OAAOA,EAAQQ,KAAK4I,cAAcyH,SAA3B,UAAuCN,EAAIO,QAAW9Q,EAAQU,QAAQ0I,cAAcyH,SAA9B,UAA0CN,EAAIO,UAE7G,OAAON,EAAIC,EAAIC,OAAO,KAAMD,EAAIE,KAAKC,OAGvCN,IAAKvJ,IAAI,iCAAiC,SAACwJ,EAAKC,EAAKC,GACnD,GAAIF,EAAIQ,OAAO9Q,GAAI,CACjB,IAAM+Q,EAAkBlR,IAAGE,QAAQ0F,SAASvB,QAAO,SAACnE,GAAD,OAAaA,EAAQC,KAAO0D,OAAO4M,EAAIQ,OAAO9Q,OACjG,OAAOuQ,EAAIC,EAAIC,OAAO,KAAMD,EAAIE,KAAKK,QAIzCV,IAAKpM,KAAK,mBAAmB,SAACqM,EAAKC,EAAKC,GACtC,IAAMzQ,EAAUuQ,EAAIO,KAEpB,OADAhR,IAAGE,QAAQiR,OAAOjR,GACXwQ,EAAIC,EAAIC,OAAO,KAAMD,EAAIE,KAAK3Q,OAEvCsQ,IAAKzM,IAAI,mBAAmB,SAAC0M,EAAKC,EAAKC,GACrC,IAAMS,EAAiBpR,IAAGE,QAAQmR,OAAO,CACvC1N,MAAO,CACLxD,GAAI,CACFyD,OAAQ6M,EAAIO,KAAK7Q,KAGrBuE,KAAM+L,EAAIO,OAGZ,OADA9M,QAAQC,IAAIiN,GACLV,EAAIC,EAAIC,OAAO,KAAMD,EAAIE,KAAKO,OAEvCZ,IAAK/L,OAAO,eAAe,SAACgM,EAAKC,EAAKC,GACpC,GAAIF,EAAIO,KAAM,CACZ,IAAMM,EAAiBtR,IAAGE,QAAQuE,OAAO,CACvCd,MAAO,CACLxD,GAAI,CACFyD,OAAQ6M,EAAIO,KAAK7Q,OAIvB,OAAOuQ,EACLC,EAAIC,OAAO,KACXD,EAAIE,KAAK,CACPS,yB,gBChDJC,EAAe,SAAClJ,GACUA,EAAtB9G,SACR,OAF6B,YACC8G,EADD,eAKlBmJ,EAAO,CAClBhB,IAAKpM,KAAK,qBAAqB,SAACqM,EAAKC,EAAKC,GACxC,IAAMtI,EAAOrI,IAAGqB,UAAUqC,UAAU,CAClCC,MAAO,CACLrC,MAAO,CACLsC,OAAQ6M,EAAIO,KAAK1P,UAIvB,GAAI+G,GAAQA,EAAK9G,WAAakP,EAAIO,KAAKzP,SAAU,CAC/C,IAAM0G,EAAQwJ,KAAKpJ,EAAK/G,OAExB,OADAkH,aAAaK,QAAQ,eAAgBZ,GAC9ByI,EAAIC,EAAIC,OAAO,KAAMD,EAAIE,KAAJ,2BAAcU,EAAalJ,IAA3B,IAAkCJ,YAEhE,OAAOyI,EACLC,EAAIC,OAAO,KACXD,EAAIE,KAAK,CACPa,MAAO,0BAIblB,IAAKvJ,IAAI,OAAO,SAACwJ,EAAKC,EAAKC,GACzB,GC/B+B,SAACF,GAAc,IAAD,EAI/C,OAHcjI,aAAaC,QAAQ,iBAAmB,SACvC,UAAGgI,EAAI/H,QAAQzB,IAAI,wBAAnB,aAAG,EAAkC0K,QAAQ,UAAW,KD6BjEC,CAAoBnB,GAAM,CAC5B,IAAMpI,EAAOrI,IAAGqB,UAAUuE,SAC1B,OAAO8K,EAAIC,EAAIC,OAAO,KAAMD,EAAIE,KAAJ,eAAcU,EAAalJ,MAEzD,OAAOqI,EAAIC,EAAIC,OAAO,UEhCbiB,EAAQ,sBAAOzM,GAAP,YAAoBoM,ICC5B1B,EAASgC,cAAW,WAAX,cAAeD,IAErC7R,IAAGE,QAAQiR,SACXnR,IAAGE,QAAQiR,SACXnR,IAAGE,QAAQiR,SACXnR,IAAGE,QAAQiR,SACXnR,IAAGE,QAAQiR,SACXnR,IAAGE,QAAQiR,SACXnR,IAAGqB,UAAU8P,W","file":"static/js/main.c8dea600.chunk.js","sourcesContent":["import { factory, primaryKey } from '@mswjs/data';\r\nimport faker from 'faker';\r\n\r\nconst sex = ['Male', 'Female'];\r\nconst note = ['Too fat', 'Too skinny'];\r\nconst getRandomValue = (array: any, index: any) => array[index];\r\n\r\nexport const db = factory({\r\n  patient: {\r\n    id: primaryKey(() => faker.datatype.number({ min: 111655094926240, max: 163655094926240 })),\r\n    name: () => faker.fake('{{name.firstName}}'),\r\n    surname: (): string => faker.fake('{{name.lastName}}'),\r\n    age: (): string => `${faker.datatype.number({ min: 20, max: 70 })}`,\r\n    sex: (): string => getRandomValue(sex, faker.datatype.number({ min: 0, max: 1 })),\r\n    email: (): string=> faker.fake('{{internet.email}}'),\r\n    telephone: (): string => `${faker.datatype.number({ min: 100000000, max: 999999999 })}`,\r\n    bodymass: (): string => `${faker.datatype.number({ min: 50, max: 110 })}`,\r\n    height: (): string => `${faker.datatype.number({ min: 160, max: 200 })}`,\r\n    notes: (): string => getRandomValue(note, faker.datatype.number({ min: 0, max: 1 })),\r\n    activity: (): string => `${faker.datatype.number({ min: 1.2, max: 2.4, precision: 0.1 })}`,\r\n  },\r\n  dietitian: {\r\n    id: primaryKey(() => '1'),\r\n    name: () => 'Jacek Placek',\r\n    login: () => 'jack123',\r\n    password: () => 'Pass123',\r\n  },\r\n});\r\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n  }\n  \n  *, *::after, *::before {\n    box-sizing: inherit;\n    margin: 0;\n    padding: 0;\n  }\n  \n  body {\n    font-family: 'Montserrat', sans-serif;\n    margin: 0;\n    padding: 0;\n    overflow-x: hidden;\n  }\n  \n  a, button {\n    font-family: 'Montserrat', sans-serif;\n  }\n`;\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n`;","import { IButton } from 'interfaces';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button<IButton>`\r\n  cursor: pointer;\r\n  margin-left: ${({ marginLeft }) => (marginLeft ? marginLeft : 'none')};\r\n  padding: ${({ padding }) => (padding ? padding : '8px 20px')};\r\n  background-color: ${({ backgroundColor, theme: { colors } }) => (backgroundColor ? backgroundColor : colors.blue3)};\r\n  border-radius: ${({ borderRadius }) => (borderRadius ? borderRadius : '6px')};\r\n  border: none;\r\n  font-size: ${({ fontSize, theme: { fontSizes } }) => (fontSize ? fontSize : fontSizes.l)};\r\n  color: ${({ theme }) => theme.colors.white};\r\n\r\n  &:hover {\r\n    box-shadow: inset 0 0 100px 100px rgba(255, 255, 255, 0.3);\r\n  }\r\n`;\r\n","import { IButton } from 'interfaces';\r\nimport { StyledButton } from './Button.styles';\r\n\r\nconst Button = ({ ...props }: IButton) => {\r\n  return <StyledButton {...props}>{props.children}</StyledButton>;\r\n};\r\n\r\nexport default Button;\r\n","import { createSlice, configureStore } from '@reduxjs/toolkit';\r\nimport { db } from 'mocks/db';\r\nimport axios from 'axios';\r\n\r\nconst obj = {\r\n  id: 0,\r\n  name: '',\r\n  surname: '',\r\n  age: '',\r\n  sex: 'Male',\r\n  email: '',\r\n  telephone: '',\r\n  bodymass: '',\r\n  height: '',\r\n  notes: '',\r\n  activity: '1.2',\r\n};\r\n\r\nconst initialState: typeof obj[] = [];\r\n\r\nconst patientsSlice = createSlice({\r\n  name: 'patients',\r\n  initialState,\r\n  reducers: {\r\n    getPatientsList(state, action) {\r\n      for (let i = 0; i < action.payload.length; i++) {\r\n        state.push(action.payload[i]);\r\n      }\r\n    },\r\n    addPatient(state, action) {\r\n      const findPatient = db.patient.findFirst({\r\n        where: {\r\n          id: {\r\n            equals: Number(action.payload.id),\r\n          },\r\n        },\r\n      });\r\n      if (!findPatient) {\r\n        axios\r\n          .post(`/dietmaster/add`, action.payload)\r\n          .catch((err) => console.log(err));\r\n      } else if (findPatient) {\r\n        axios\r\n          .put(`/dietmaster/add`, action.payload)\r\n          .catch((err) => console.log(err));\r\n        }\r\n        const newState = state.filter((patient) => patient.id !== action.payload.id);\r\n        return newState\r\n    },\r\n    addPatientState(state,action) {\r\n      state.unshift(action.payload)\r\n    },\r\n    removePatient(state, action) {\r\n      const findPatient = db.patient.findFirst({\r\n        where: {\r\n          id: {\r\n            equals: Number(action.payload),\r\n          },\r\n        },\r\n      });\r\n      if (findPatient) {\r\n        axios\r\n          .delete('/dietmaster', { data: findPatient })\r\n          .then(({ data }) => {\r\n            // dispatch({ type: 'DELETE_PATIENT', payload: data.removedPatient });\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n    },\r\n    sortPatientsList(state, action) {\r\n      // eslint-disable-next-line array-callback-return\r\n      return state.sort((a, b): any => {\r\n        if (action.payload === 'female') {\r\n          return a.sex > b.sex ? 1 : b.sex > a.sex ? -1 : 0;\r\n        } else if (action.payload === 'male') {\r\n          return a.sex > b.sex ? -1 : b.sex > a.sex ? 1 : 0;\r\n        } else if (action.payload === 'off') {\r\n          return a.id > b.id ? -1 : b.id > a.id ? 1 : 0;\r\n        } else if (action.payload === 'a-z') {\r\n          return a.surname > b.surname ? 1 : b.surname > a.surname ? -1 : 0;\r\n        } else if (action.payload === 'z-a') {\r\n          return a.surname > b.surname ? -1 : b.surname > a.surname ? 1 : 0;\r\n        }\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addPatient, addPatientState, removePatient, getPatientsList, sortPatientsList } = patientsSlice.actions;\r\nexport const selectPatients = (state: any) => state.patients;\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    patients: patientsSlice.reducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n","import Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { sortPatientsList } from 'store/store';\r\nimport { db } from 'mocks/db';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  width: 100vw;\r\n  height: 60px;\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  padding: 0 20px 2px;\r\n\r\n  p {\r\n    font-size: 0.7rem;\r\n    color: ${({ theme }) => theme.colors.white};\r\n  }\r\n\r\n  .filterSex {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .buttons {\r\n      display: flex;\r\n      gap: 2px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MainBottomBar = () => {\r\n  const patients = useSelector((state: any) => state.patients);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"filterSex\">\r\n        <p>Sort</p>\r\n        <div className=\"buttons\">\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(sortPatientsList('off'));\r\n              console.log('state ', patients);\r\n              console.log('api', db.patient.getAll());\r\n            }}\r\n            padding=\"6px 20px\"\r\n            borderRadius=\"6px 0 0 6px\"\r\n          >\r\n            off\r\n          </Button>\r\n          <Button onClick={() => dispatch(sortPatientsList('female'))} padding=\"6px 20px\" borderRadius=\"0\">\r\n            female\r\n          </Button>\r\n          <Button onClick={() => dispatch(sortPatientsList('male'))} padding=\"6px 20px\" borderRadius=\"0\">\r\n            male\r\n          </Button>\r\n          <Button onClick={() => dispatch(sortPatientsList('a-z'))} padding=\"6px 20px\" borderRadius=\"0\">\r\n            a-z\r\n          </Button>\r\n          <Button onClick={() => dispatch(sortPatientsList('z-a'))} padding=\"6px 20px\" borderRadius=\"0 6px 6px 0\">\r\n            z-a\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainBottomBar;\r\n","const patients = [\r\n  {\r\n    id: 163655094926240,\r\n    name: 'Nathan',\r\n    surname: 'Wood',\r\n    age: '29',\r\n    sex: 'Male',\r\n    email: 'nathan@nathan.com',\r\n    telephone: '983 634 821',\r\n    bodymass: '84',\r\n    height: '188',\r\n    notes: 'Too fat',\r\n    activity: '1.3'\r\n\r\n  },\r\n  {\r\n    id: 16365516894567,\r\n    name: 'Ffion',\r\n    surname: 'Russell',\r\n    age: '36',\r\n    sex: 'Female',\r\n    email: 'ffion@ffion.com',\r\n    telephone: '834 683 460',\r\n    bodymass: '60',\r\n    height: '170',\r\n    notes: 'Too skinny',\r\n    activity: '2.1'\r\n\r\n  },\r\n  {\r\n    id: 1636552953391,\r\n    name: 'Kane',\r\n    surname: 'Sandoval',\r\n    age: '18',\r\n    sex: 'Male',\r\n    email: 'kane@kane.com',\r\n    telephone: '531 361 765',\r\n    bodymass: '96',\r\n    height: '194',\r\n    notes: 'Too fat',\r\n    activity: '1.9'\r\n  },\r\n  {\r\n    id: 1636551908165,\r\n    name: 'Lara',\r\n    surname: 'Hughes',\r\n    age: '41',\r\n    sex: 'Female',\r\n    email: 'lara@lara.com',\r\n    telephone: '734 643 233',\r\n    bodymass: '71',\r\n    height: '168',\r\n    notes: 'Too skinny',\r\n    activity: '1.6'\r\n  },\r\n];\r\nexport type PatientState = typeof patients[0]\r\nexport default patients;\r\n\r\nexport const InitialPatientValues = {\r\n  id: 0,\r\n  name: '',\r\n  surname: '',\r\n  age: '',\r\n  sex: 'Male',\r\n  email: '',\r\n  telephone: '',\r\n  bodymass: '',\r\n  height: '',\r\n  notes: '',\r\n  activity: '1.2'\r\n};","import patients from 'data/data';\r\nimport { PatientState } from '../data/data';\r\n\r\ntype ACTIONTYPES =\r\n  | { type: 'DELETE_PATIENT'; payload: PatientState }\r\n  | { type: 'SORT_PATIENTS_LIST'; payload: string }\r\n  | { type: 'ADD_PATIENT'; payload: PatientState }\r\n  | { type: 'SEARCH_IN_LIST'; payload: string }\r\n  | { type: 'ADD_PATIENTS_LIST'; payload: PatientState[] };\r\n\r\nconst PatientsReducer = (state: typeof patients, action: ACTIONTYPES) => {\r\n  switch (action.type) {\r\n    case 'ADD_PATIENTS_LIST': {\r\n      return action.payload;\r\n    }\r\n    case 'ADD_PATIENT': {\r\n      const newPatient = action.payload;\r\n      return [newPatient, ...state];\r\n    }\r\n    case 'SORT_PATIENTS_LIST': {\r\n      // eslint-disable-next-line array-callback-return\r\n      const sortedList = state.sort((a, b): any => {\r\n        if (action.payload === 'female') {\r\n          return a.sex > b.sex ? 1 : b.sex > a.sex ? -1 : 0;\r\n        } else if (action.payload === 'male') {\r\n          return a.sex > b.sex ? -1 : b.sex > a.sex ? 1 : 0;\r\n        } else if (action.payload === 'off') {\r\n          return a.id > b.id ? -1 : b.id > a.id ? 1 : 0;\r\n        } else if (action.payload === 'a-z') {\r\n          return a.surname > b.surname ? 1 : b.surname > a.surname ? -1 : 0;\r\n        } else if (action.payload === 'z-a') {\r\n          return a.surname > b.surname ? -1 : b.surname > a.surname ? 1 : 0;\r\n        }\r\n      });\r\n      return [...sortedList];\r\n    }\r\n    case 'DELETE_PATIENT': {\r\n      const deletePatientsList = state.filter((patient) => patient.id !== action.payload.id);\r\n      return deletePatientsList;\r\n    }\r\n    default:\r\n      throw new Error('wrong operation');\r\n  }\r\n};\r\n\r\n\r\nexport default PatientsReducer;\r\n\r\n","import React, { useReducer, createContext, useEffect, useState, ReactNode, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport patients from '../data/data';\r\nimport { PatientState } from '../data/data';\r\nimport { InitialPatientValues } from '../data/data';\r\nimport { db } from 'mocks/db';\r\nimport PatientsReducer from 'reducers/PatientsReducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPatientsList, selectPatients, addPatient } from 'store/store';\r\n\r\nexport type PatientContextType = {\r\n  patientsList: PatientState[];\r\n  managePatient: (id: number) => void;\r\n  setPatient: (obj: PatientState) => void;\r\n  searchResults: PatientState[];\r\n  patient: PatientState;\r\n  searchTerm: string;\r\n  setSearchTerm: (term: string) => void;\r\n};\r\n\r\nexport const PatientContext = createContext<PatientContextType>({\r\n  patientsList: patients,\r\n  managePatient() {},\r\n  setPatient() {},\r\n  searchResults: patients,\r\n  searchTerm: '',\r\n  setSearchTerm() {},\r\n  patient: InitialPatientValues,\r\n});\r\n\r\nconst PatientProvider = ({ children }: { children: ReactNode }) => {\r\n  const [patient, setPatient] = useState<typeof InitialPatientValues>(InitialPatientValues);\r\n  const [patientsList, dispatch] = useReducer(PatientsReducer, [InitialPatientValues]);\r\n  const [searchResults, setSearchResults] = useState<typeof InitialPatientValues[]>([] as typeof InitialPatientValues[]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const patientsRedux = useSelector((state: any) => state.patients);\r\n  const dispatchRedux = useDispatch();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('/dietmaster')\r\n      .then(({ data }) => {\r\n        dispatchRedux(getPatientsList(data));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post('/dietmaster', searchTerm)\r\n      .then(({ data }) => {\r\n        setSearchResults(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [searchTerm]);\r\n\r\n  const managePatient = (id: number) => {\r\n    const findPatient = patientsRedux.filter((patient: any) => patient.id === id);\r\n    setPatient(findPatient[0]);\r\n  };\r\n\r\n  return (\r\n    <PatientContext.Provider\r\n      value={{\r\n        managePatient,\r\n        patientsList,\r\n        patient,\r\n        setPatient,\r\n        searchResults,\r\n        searchTerm,\r\n        setSearchTerm,\r\n      }}\r\n    >\r\n      {children}\r\n    </PatientContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PatientProvider;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.li`\r\n  display: grid;\r\n  grid-template-columns: 5% 20% 20% 10% 15% 30%;\r\n  align-items: center;\r\n  gap: 2px;\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n  padding: 5px;\r\n  color: ${({ theme }) => theme.colors.black};\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  .buttons {\r\n    grid-column: 6/7;\r\n    display: flex;\r\n    align-content: center;\r\n    justify-content: space-evenly;\r\n    height: 100%;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Wrapper } from './MainPatientInfo.styles';\r\nimport { removePatient } from 'store/store';\r\nimport { IPatientInfo } from 'interfaces';\r\n\r\n\r\nconst MainPatientInfo = ({ name, surname, age, id, index }: IPatientInfo) => {\r\n  const { managePatient } = useContext(PatientContext);\r\n  const navigate = useNavigate();\r\n\r\n  const patients = useSelector((state: any) => state.patients);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleManageClick = (id: number) => {\r\n    managePatient(id);\r\n    navigate(`/patient/about/${id}`);\r\n  };\r\n  const handleDeleteClick = (id: number) => {\r\n    dispatch(removePatient(id))\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>{index + 1}</div>\r\n      <div>{name}</div>\r\n      <div>{surname}</div>\r\n      <div>{age}</div>\r\n      <div className=\"buttons\">\r\n        <Button onClick={() => handleManageClick(id)}>Manage</Button>\r\n        <Button backgroundColor=\"#FF4343\" onClick={() => handleDeleteClick(id)}>\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainPatientInfo;\r\n","import { IInput } from 'interfaces';\r\nimport styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n  padding: 8px;\r\n  border: 1px solid ${({ theme }) => theme.colors.white};\r\n  border-radius: 6px;\r\n  font-size: ${({ theme }) => theme.fontSizes.l};\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  color: ${({ theme }) => theme.colors.white};\r\n`;\r\n\r\nconst InputMain = ({...props}: IInput) => {\r\n  return <Input {...props}></Input>;\r\n};\r\n\r\nexport default InputMain;\r\n","import axios from 'axios';\r\nimport React, { createContext, ReactNode, useEffect, useState, useContext } from 'react';\r\n\r\nconst InitialUserValues = { id: '', login: '', name: '', token: '' };\r\n\r\nexport type PatientContextType = {\r\n  signIn: ({ login, password }: { login: string; password: string }) => any;\r\n  signOut: () => void;\r\n  user: typeof InitialUserValues;\r\n};\r\n\r\nconst AuthContext = createContext<PatientContextType>({\r\n  signIn() {},\r\n  signOut() {},\r\n  user: InitialUserValues,\r\n});\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }): any => {\r\n  const [user, setUser] = useState(InitialUserValues);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      (async () => {\r\n        try {\r\n          const response = await axios.get('/me', {\r\n            headers: {\r\n              authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          setUser(response.data[0]);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      })();\r\n    }\r\n  }, []);\r\n\r\n  const signIn = async ({ login, password }: { login: string; password: string }) => {\r\n    try {\r\n      const response = await axios.post('/dietmaster/login', { login, password });\r\n      setUser(response.data);\r\n      localStorage.setItem('token', response.data.token);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const signOut = () => {\r\n    setUser({ id: '', login: '', name: '', token: '' });\r\n    localStorage.removeItem('token');\r\n  };\r\n  return <AuthContext.Provider value={{ user, signIn, signOut }}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return auth;\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport InputMain from 'components/atoms/InputMain/InputMain';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { useAuth } from 'hooks/useAuth';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  width: 100vw;\r\n  height: 60px;\r\n  padding: 10px;\r\n  background-color: ${({ theme }) => theme.colors.lightBlack};\r\n\r\n  h2 {\r\n    color: ${({ theme }) => theme.colors.white};\r\n    font-weight: 400;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst MainTopBar = () => {\r\n  const { setPatient, patient, searchTerm, setSearchTerm } = useContext(PatientContext);\r\n  const navigate = useNavigate();\r\n\r\n  const { signOut } = useAuth();\r\n\r\n  const handleClickNewPatient = () => {\r\n    setPatient({\r\n      id: new Date().getTime(),\r\n      name: '',\r\n      surname: '',\r\n      age: '',\r\n      sex: 'Male',\r\n      email: '',\r\n      telephone: '',\r\n      bodymass: '',\r\n      height: '',\r\n      notes: '',\r\n      activity: '1.2',\r\n    });\r\n    navigate(`/patient/about/${patient.id}`);\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <h2>Patients record</h2>\r\n      </div>\r\n      <InputMain placeholder=\"Search patient\" value={searchTerm} onChange={handleChange} />\r\n      <Button onClick={handleClickNewPatient}>New patient</Button>\r\n      <Button onClick={signOut} backgroundColor=\"#505050\" marginLeft=\"auto\">\r\n        Log Out\r\n      </Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainTopBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2px;\r\n  padding: 2px;\r\n  width: 100%;\r\n  margin: 60px 0;\r\n  list-style: none;\r\n  color: ${({ theme }) => theme.colors.black};\r\n`;\r\n","import MainBottomBar from 'components/organisms/MainBottomBar';\r\nimport MainPatientInfo from 'components/molecules/MainPatientInfo';\r\nimport MainTopBar from 'components/organisms/MainTopBar';\r\nimport React, { useContext } from 'react';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { Wrapper } from './Main.styles';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Main = () => {\r\n  const { searchResults, searchTerm } = useContext(PatientContext);\r\n  const patients = useSelector((state: any) => state.patients);\r\n\r\n  return (\r\n    <>\r\n      <MainTopBar />\r\n      <MainBottomBar />\r\n      <Wrapper>\r\n        {searchTerm &&\r\n          searchResults.map((patient, index) => {\r\n            return <MainPatientInfo index={index} key={patient.id} {...patient} />;\r\n          })}\r\n        {!searchTerm &&\r\n          patients.map((patient: any, index: any) => {\r\n            return <MainPatientInfo index={index} key={patient.id} {...patient} />;\r\n          })}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledButton = styled(NavLink)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 8px;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  background-color: ${({ color, theme: { colors } }) => (color ? color : colors.grey4)};\r\n  border: none;\r\n  font-size: ${({ theme }) => theme.fontSizes.l};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    box-shadow: inset 0 0 100px 100px rgba(255, 255, 255, 0.3);\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${({ theme }) => theme.colors.blue3};\r\n  }\r\n`;\r\n","import { IManageNavButton } from 'interfaces';\r\nimport { StyledButton } from './ManageNavButton.styles';\r\n\r\nconst ManageNavButton = ({ children, to }: IManageNavButton) => {\r\n  return <StyledButton to={to}>{children}</StyledButton>;\r\n};\r\n\r\nexport default ManageNavButton;\r\n","import ManageNavButton from 'components/atoms/ManageNavButton/ManageNavButton';\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BsFillPersonFill, BsExclamationDiamond } from \"react-icons/bs\";\r\nimport { ImSpoonKnife } from \"react-icons/im\";\r\nimport { BiTestTube } from \"react-icons/bi\";\r\nimport { AiTwotoneCalendar } from \"react-icons/ai\";\r\nimport { PatientContext } from 'contexts/PatientContext';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  width: 100%;\r\n  height: 35px;\r\n`;\r\n\r\nconst ManageNavBar = () => {\r\n  const { patient } = useContext(PatientContext);\r\n\r\n  return <Wrapper>\r\n    <ManageNavButton to={`/patient/about/${patient.id}`}><BsFillPersonFill />About</ManageNavButton>\r\n    <ManageNavButton to={`/patient/diet/${patient.id}`}><ImSpoonKnife />Diet</ManageNavButton>\r\n    <ManageNavButton to={`/patient/allergens/${patient.id}`}><BsExclamationDiamond />Allergens</ManageNavButton>\r\n    <ManageNavButton to={`/patient/blood-tests/${patient.id}`}><BiTestTube />Blood tests</ManageNavButton>\r\n    <ManageNavButton to={`/patient/appointments/${patient.id}`}><AiTwotoneCalendar />Appointments</ManageNavButton>\r\n  </Wrapper>;\r\n};\r\n\r\nexport default ManageNavBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  height: 40px;\r\n  padding: 0 30px;\r\n  background-color: ${({ theme }) => theme.colors.blue3};\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\n// import { useParams } from 'react-router';\r\nimport { InitialPatientValues } from '../../data/data';\r\nimport { Wrapper } from './ManageTop.styles';\r\nimport { addPatient, addPatientState } from 'store/store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nconst ManageTop = () => {\r\n  const navigate = useNavigate();\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  // const patients = useSelector((state: any) => state.patients);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSaveClick = () => {\r\n    dispatch(addPatient(patient));\r\n    dispatch(addPatientState(patient));\r\n    setPatient(InitialPatientValues);\r\n    navigate('/');\r\n  };\r\n\r\n  const handleExitClick = () => {\r\n    navigate('/');\r\n    setPatient(InitialPatientValues);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Button onClick={handleSaveClick} backgroundColor=\"#00A3D9\" padding=\"6px 18px\" fontSize=\"12px\">\r\n        Save changes\r\n      </Button>\r\n      <Button onClick={handleExitClick} backgroundColor=\"#505050\" padding=\"6px 28px\" fontSize=\"12px\">\r\n        Discard / Exit\r\n      </Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ManageTop;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 1100px;\r\n  min-width: 600px;\r\n  margin: 0 auto;\r\n  color: ${({ theme }) => theme.colors.black};\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: ${({ theme }) => theme.colors.grey3};\r\n`;\r\n\r\nconst AboutBottomBarBox = ({ children }: { children: string | number }) => {\r\n  return <Wrapper>{children}</Wrapper>;\r\n};\r\n\r\nexport default AboutBottomBarBox;\r\n","import styled from \"styled-components\";\r\n\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 120px 1fr;\r\n  width: 100%;\r\n  height: 100px;\r\n  padding: 20px 20px 20px 5px;\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  color: ${({ theme }) => theme.colors.white};\r\n\r\n  .text {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const CalculationsWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr 2fr 2fr;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const Calc = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  p {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n","import { PatientState } from '../data/data';\r\n\r\nconst useCalculate = (patient: PatientState) => {\r\n  const calculateBMI = () => {\r\n    const height = Number(patient.height) / 100;\r\n    const BMI = (Number(patient.bodymass) / Math.pow(height, 2)).toFixed(2).toString();\r\n    return BMI;\r\n  };\r\n\r\n  const BMIdescription = () => {\r\n    const height = Number(patient.height) / 100;\r\n    let BMI = Number((Number(patient.bodymass) / Math.pow(height, 2)).toFixed(2));\r\n    if (BMI < 25 && BMI > 18.5) {\r\n      return 'Normal';\r\n    } else if (BMI >= 25) {\r\n      return 'Obesity';\r\n    } else if (BMI <= 18.5) {\r\n      return 'Underweight';\r\n    } else {\r\n      return 'OK';\r\n    }\r\n  };\r\n\r\n  const calculateRisk = () => {\r\n    const height = Number(patient.height) / 100;\r\n    let BMI = Number((Number(patient.bodymass) / Math.pow(height, 2)).toFixed(2));\r\n    if (BMI < 25 && BMI > 18.5) {\r\n      return 'Lowest';\r\n    } else if (BMI >= 25 && BMI <= 35) {\r\n      return 'High';\r\n    } else if (BMI >= 35) {\r\n      return 'Very high';\r\n    } else if (BMI <= 18.5) {\r\n      return 'High';\r\n    } else {\r\n      return 'OK';\r\n    }\r\n  };\r\n\r\n  const idealWeight = () => {\r\n    const height = Number(patient.height);\r\n    let idealWeightMin = '';\r\n    let idealWeightMax = '';\r\n    if (patient.sex === 'Male') {\r\n      idealWeightMin = (height - 100 - (height - 138) / 4).toString();\r\n      idealWeightMax = (height - 100 - (height - 162) / 4).toString();\r\n    } else {\r\n      idealWeightMin = (height - 100 - (height - 138) / 2).toString();\r\n      idealWeightMax = (height - 100 - (height - 162) / 2).toString();\r\n    }\r\n\r\n    return `${idealWeightMin} - ${idealWeightMax} kg`;\r\n  };\r\n\r\n  const calculateCPM = () => {\r\n    const CPM = (66.5 + (13.75 * Number(patient.bodymass)) + (5.003 * Number(patient.height)) - (6.775 * Number(patient.age)))*Number(patient.activity);\r\n    return CPM.toFixed().toString();\r\n  };\r\n\r\n  return { calculateBMI, BMIdescription, calculateRisk, idealWeight, calculateCPM };\r\n};\r\n\r\nexport default useCalculate;\r\n","import AboutBottomBarBox from 'components/atoms/AboutBottomBarBox/AboutBottomBarBox';\r\nimport React, { useContext } from 'react';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { CalculationsWrapper, Calc, Wrapper } from './AboutBottomBar.styles';\r\nimport useCalculate from 'hooks/useCalculate';\r\n\r\nconst AboutBottomBar = () => {\r\n  const { patient } = useContext(PatientContext);\r\n  const { BMIdescription, calculateBMI, calculateRisk, idealWeight } = useCalculate(patient);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"text\">Body weight assessment</div>\r\n      <CalculationsWrapper>\r\n        <Calc>\r\n          <p>BMI</p>\r\n          <AboutBottomBarBox>{patient.bodymass && patient.height ? calculateBMI() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n        <Calc>\r\n          <p>Description</p>\r\n          <AboutBottomBarBox>{patient.bodymass && patient.height ? BMIdescription() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n        <Calc>\r\n          <p>Risk of cardiovascular disease</p>\r\n          <AboutBottomBarBox>{patient.bodymass && patient.height ? calculateRisk() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n        <Calc>\r\n          <p>Ideal body weight</p>\r\n          <AboutBottomBarBox>{patient.bodymass && patient.height ? idealWeight() : ''}</AboutBottomBarBox>\r\n        </Calc>\r\n      </CalculationsWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AboutBottomBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  .sex {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n  div {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 35px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding-right: 5%;\r\n\r\n    label {\r\n      input {\r\n        margin: 0 5px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Wrapper } from './SexButton.styles';\r\n\r\nconst SexButton = () => {\r\n  return (\r\n    <Wrapper>\r\n      <label className=\"sex\">Sex</label>\r\n      <div>\r\n        <label>\r\n          <input type=\"radio\" name=\"sex\" value=\"Male\" />\r\n          Male\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"sex\" value=\"Female\" />\r\n          Female\r\n        </label>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SexButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.form`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 15px;\r\n  width: 100%;\r\n  min-height: calc(100vh - 175px);\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n\r\n  div:nth-child(1) {\r\n    grid-area: 1/1/2/3;\r\n  }\r\n  div:nth-child(2) {\r\n    grid-area: 1/3/2/5;\r\n  }\r\n  div:nth-child(3) {\r\n    grid-area: 1/5/2/6;\r\n  }\r\n  div:nth-child(4) {\r\n    grid-area: 1/6/2/7;\r\n  }\r\n  div:nth-child(5) {\r\n    grid-area: 2/1/3/2;\r\n  }\r\n  div:nth-child(6) {\r\n    grid-area: 2/2/3/3;\r\n  }\r\n  div:nth-child(7) {\r\n    grid-area: 2/3/3/5;\r\n  }\r\n  div:nth-child(8) {\r\n    grid-area: 2/5/3/7;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n\r\n  label {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 35px;\r\n    border: none;\r\n    border-radius: 6px;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nexport const TextArea = styled.div`\r\n  width: 100%;\r\n  grid-area: 3/1/4/5;\r\n\r\n  label {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n  textarea {\r\n    width: 100%;\r\n    border: none;\r\n    border-radius: 6px;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    padding: 10px;\r\n    height: 100px;\r\n    font-family: 'Montserrat', sans-serif;\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n\r\nexport const Slider = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  grid-area: 4/1/5/7;\r\n \r\n  p {\r\n    font-size: 0.8rem;\r\n    padding: 5px 0;\r\n  }\r\n  input {\r\n    width: 100%;\r\n  }\r\n  .minmax {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n  }\r\n`;\r\n","import SexButton from 'components/molecules/SexButton';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { PatientContext } from 'contexts/PatientContext';\r\nimport { useParams } from 'react-router';\r\nimport axios from 'axios';\r\nimport { InitialPatientValues } from 'mocks/data/patientsList';\r\n// import { useForm } from 'react-hook-form';\r\nimport { Input, Slider, TextArea, Wrapper } from './AboutForm.styles';\r\n\r\nconst newPatient = {\r\n  id: new Date().getTime(),\r\n  name: '',\r\n  surname: '',\r\n  age: '',\r\n  sex: 'Male',\r\n  email: '',\r\n  telephone: '',\r\n  bodymass: '',\r\n  height: '',\r\n  notes: '',\r\n  activity: '1.2',\r\n};\r\n\r\nconst AboutForm = () => {\r\n  const { id } = useParams();\r\n  const { patient, setPatient } = useContext(PatientContext);\r\n  const nameValue = useRef<HTMLInputElement>(null);\r\n  const surnameValue = useRef<HTMLInputElement>(null);\r\n  const ageValue = useRef<HTMLInputElement>(null);\r\n  const telephoneValue = useRef<HTMLInputElement>(null);\r\n  const emailValue = useRef<HTMLInputElement>(null);\r\n  const bodymassValue = useRef<HTMLInputElement>(null);\r\n  const heightValue = useRef<HTMLInputElement>(null);\r\n  const notesValue = useRef<HTMLTextAreaElement>(null);\r\n  const activityValue = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      axios\r\n        .get(`/dietmaster/patient/about/${id}`)\r\n        .then(({ data }) => {\r\n          data[0] && setPatient(data[0]);\r\n        })\r\n        .catch((err) => console.log(err));\r\n\r\n      if (nameValue.current) {\r\n        nameValue.current.value = patient.name;\r\n      }\r\n      if (surnameValue.current) {\r\n        surnameValue.current.value = patient.surname;\r\n      }\r\n      if (ageValue.current) {\r\n        ageValue.current.value = patient.age;\r\n      }\r\n      if (telephoneValue.current) {\r\n        telephoneValue.current.value = patient.telephone;\r\n      }\r\n      if (emailValue.current) {\r\n        emailValue.current.value = patient.email;\r\n      }\r\n      if (bodymassValue.current) {\r\n        bodymassValue.current.value = patient.bodymass;\r\n      }\r\n      if (heightValue.current) {\r\n        heightValue.current.value = patient.height;\r\n      }\r\n      if (notesValue.current) {\r\n        notesValue.current.value = patient.notes;\r\n      }\r\n      if (activityValue.current) {\r\n        activityValue.current.value = patient.activity;\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    setPatient({\r\n      ...patient,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper onChange={handleChange}>\r\n      <Input>\r\n        <label htmlFor=\"Name\">Name</label>\r\n        <input ref={nameValue} id=\"name\" name=\"name\" type=\"text\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Surname\">Surname</label>\r\n        <input ref={surnameValue} id=\"surname\" name=\"surname\" type=\"text\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Age\">Age</label>\r\n        <input ref={ageValue} id=\"age\" name=\"age\" type=\"number\" />\r\n      </Input>\r\n      <SexButton />\r\n      <Input>\r\n        <label htmlFor=\"Body mass (kg)\">Body mass (kg)</label>\r\n        <input ref={bodymassValue} id=\"bodymass\" name=\"bodymass\" type=\"number\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Height (cm)\">Height (cm)</label>\r\n        <input ref={heightValue} id=\"height\" name=\"height\" type=\"number\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"Telephone\">Telephone</label>\r\n        <input ref={telephoneValue} id=\"telephone\" name=\"telephone\" type=\"tel\" />\r\n      </Input>\r\n      <Input>\r\n        <label htmlFor=\"E-mail\">E-mail</label>\r\n        <input ref={emailValue} id=\"email\" name=\"email\" type=\"email\" />\r\n      </Input>\r\n      <TextArea>\r\n        <label htmlFor=\"Notes\">Notes</label>\r\n        <textarea ref={notesValue} id=\"notes\" name=\"notes\" />\r\n      </TextArea>\r\n      <Slider>\r\n        <p>Physical activity</p>\r\n        <input ref={activityValue} id=\"activity\" name=\"activity\" type=\"range\" min=\"1.2\" max=\"2.4\" step=\"0.1\" />\r\n        <div className=\"minmax\">\r\n          <p>1.2</p>\r\n          <p>2.4</p>\r\n        </div>\r\n      </Slider>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AboutForm;\r\n","import React from 'react';\r\nimport ManageNavBar from 'components/organisms/ManageNavBar';\r\nimport ManageTop from 'components/organisms/ManageTop';\r\nimport { Wrapper } from './About.styles';\r\nimport AboutBottomBar from 'components/organisms/AboutBottomBar';\r\nimport AboutForm from 'components/organisms/AboutForm';\r\n\r\nconst About = () => {\r\n  return (\r\n      <Wrapper>\r\n        <ManageTop />\r\n        <ManageNavBar />\r\n        <AboutForm />\r\n        <AboutBottomBar />\r\n      </Wrapper>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { PatientContext } from 'contexts/PatientContext';\r\nimport useCalculate from 'hooks/useCalculate';\r\nimport React, { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 15px;\r\n  width: 100%;\r\n  min-height: calc(100vh - 75px);\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n`;\r\nconst Sliders = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  gap: 15px;\r\n`;\r\n\r\nconst SliderDesc = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst SliderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nconst CPMWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst ShowCPM = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-content: center;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  height: 75px;\r\n  width: 200px;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  background-color: ${({ theme }) => theme.colors.grey4};\r\n  font-size: ${({ theme }) => theme.fontSizes.xm};\r\n  color: white;\r\n\r\n  input {\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: ${({ theme }) => theme.fontSizes.l};\r\n    padding: 5px;\r\n    text-align: center;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n  }\r\n  div {\r\n    font-size: ${({ theme }) => theme.fontSizes.l};\r\n    padding: 5px;\r\n  }\r\n`;\r\n\r\nconst DietForm = () => {\r\n  const { patient } = useContext(PatientContext);\r\n  const { calculateCPM } = useCalculate(patient);\r\n  const [establishCPM, setEstablishCPM] = useState(calculateCPM());\r\n  const [protein, setProtein] = useState(5);\r\n  const [fat, setFat] = useState(22);\r\n  const [carbs, setCarbs] = useState(57);\r\n\r\n  const handleCPMInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEstablishCPM(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSliderChange = (e: React.FormEvent<HTMLFormElement>) => {\r\n    console.log(e.target);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <CPMWrapper>\r\n        <ShowCPM>\r\n          <p>Recommended CPM</p>\r\n          <div>{calculateCPM()}</div>\r\n        </ShowCPM>\r\n        <ShowCPM>\r\n          <p>Established CPM</p>\r\n          <input type=\"text\" value={establishCPM} onChange={(e) => handleCPMInputChange(e)} />\r\n        </ShowCPM>\r\n      </CPMWrapper>\r\n      <Sliders onChange={(e) => handleSliderChange(e)}>\r\n        <SliderDesc>\r\n          <p>0%</p>\r\n          <p>100%</p>\r\n        </SliderDesc>\r\n        <SliderWrapper>\r\n          <h4>Protein</h4>\r\n          <input\r\n            id=\"protein\"\r\n            name=\"protein\"\r\n            type=\"range\"\r\n            min=\"1\"\r\n            max=\"100\"\r\n            step=\"1\"\r\n            value={protein}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setProtein(Number(e.currentTarget.value))}\r\n          />\r\n        </SliderWrapper>\r\n        <SliderWrapper>\r\n          <h4>Fat</h4>\r\n          <input\r\n            id=\"fat\"\r\n            name=\"fat\"\r\n            type=\"range\"\r\n            min=\"1\"\r\n            max=\"100\"\r\n            step=\"1\"\r\n            value={fat}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setFat(Number(e.currentTarget.value))}\r\n          />\r\n        </SliderWrapper>\r\n        <SliderWrapper>\r\n          <h4>Carbohydrates</h4>\r\n          <input\r\n            id=\"carbs\"\r\n            name=\"carbs\"\r\n            type=\"range\"\r\n            min=\"1\"\r\n            max=\"100\"\r\n            step=\"1\"\r\n            value={carbs}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCarbs(Number(e.currentTarget.value))}\r\n          />\r\n        </SliderWrapper>\r\n      </Sliders>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DietForm;\r\n","import React from 'react';\r\nimport ManageNavBar from 'components/organisms/ManageNavBar';\r\nimport ManageTop from 'components/organisms/ManageTop';\r\nimport { Wrapper } from './About.styles';\r\nimport DietForm from 'components/organisms/DietForm';\r\n\r\nconst Diet = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ManageTop />\r\n      <ManageNavBar />\r\n      <DietForm />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Diet;\r\n","export default __webpack_public_path__ + \"static/media/logo.8af3b97f.png\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 350px;\r\n  padding: 30px 20px;\r\n  margin-bottom: 50px;\r\n  gap: 15px;\r\n  background-color: ${({ theme }) => theme.colors.grey1};\r\n  border-radius: 6px;\r\n  box-shadow: rgba(0, 0, 0, 0.07) 0px 1px 2px, rgba(0, 0, 0, 0.07) 0px 2px 4px, rgba(0, 0, 0, 0.07) 0px 4px 8px, rgba(0, 0, 0, 0.07) 0px 8px 16px,\r\n    rgba(54, 44, 44, 0.07) 0px 16px 32px, rgba(0, 0, 0, 0.07) 0px 32px 64px;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  height: 100px;\r\n  margin: 15px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  height: 35px;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  padding: 8px;\r\n  margin: 10px 0;\r\n  border-radius: 6px;\r\n  border: none;\r\n`;\r\nexport const Label = styled.label`\r\n  width: 100%;\r\n  font-size: ${({ theme }) => theme.fontSizes.xm};\r\n`;\r\n","import { ILoginInput } from 'interfaces';\r\nimport React from 'react';\r\nimport { Input, Label, Wrapper } from './LoginInput.styles';\r\n\r\nconst LoginInput = React.forwardRef(({ label, name, id, type, value, onChange, ...props }: ILoginInput, ref: any) => {\r\n  return (\r\n    <Wrapper>\r\n      <Label htmlFor={id}>{label}</Label>\r\n      <Input name={name} type={type} id={id} onChange={onChange} value={value} {...props} ref={ref} />\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default LoginInput;\r\n","import { useForm } from 'react-hook-form';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport logo from '../assets/images/logo.png'\r\nimport { useAuth } from 'hooks/useAuth';\r\nimport { Wrapper, Form, Image } from './Login.styles';\r\nimport LoginInput from 'components/molecules/LoginInput';\r\n\r\n\r\nconst Login = () => {\r\n  const { signIn } = useAuth();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src={logo} />\r\n      <Form onSubmit={handleSubmit(signIn)}>\r\n        <LoginInput id=\"login\" label=\"Login\" type=\"text\" placeholder='login: jack123' {...register('login', { required: true })} />\r\n        {/* {errors.login ?? <h6>Login is required</h6>} */}\r\n        <LoginInput id=\"password\" label=\"Password\" type=\"password\" placeholder='pass: Pass123' {...register('password', { required: true })} />\r\n        {/* {errors.password ?? <h6>Password is required</h6>}  */}\r\n        <Button type=\"submit\">Sign in</Button>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { GlobalStyle } from 'assets/styles/GlobalStyle';\nimport { Wrapper } from './Root.styles';\nimport Main from './Main';\nimport About from './About';\nimport ManageDiet from './Diet';\nimport Login from './Login';\nimport { useAuth } from 'hooks/useAuth';\n\nconst Root = () => {\n  const { user } = useAuth();\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <GlobalStyle />\n        <Routes>\n          {user.login ? (\n            <Wrapper>\n              <Route path=\"/patient/appointments/:id\" element={<ManageDiet />} />\n              <Route path=\"/patient/blood-tests/:id\" element={<ManageDiet />} />\n              <Route path=\"/patient/allergens/:id\" element={<ManageDiet />} />\n              <Route path=\"/patient/diet/:id\" element={<ManageDiet />} />\n              <Route path=\"/patient/about/:id\" element={<About />} />\n              <Route path=\"/\" element={<Main />} />\n              <Route path=\"*\" element={<Navigate to=\"/\" />} />\n            </Wrapper>\n          ) : (\n            <>\n              <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n              <Route path=\"/login\" element={<Login />} />\n            </>\n          )}\n        </Routes>\n    </Router>\n  );\n};\n\nexport default Root;\n","export const theme = {\n  colors: {\n    white: '#FFFFFF',\n    black: '#111111',\n    lightBlack: '#343434',\n    grey1: '#E5E5E5',\n    grey2: '#C1C1C1',\n    grey3: '#9D9D9D',\n    grey4: '#505050',\n    blue1: '#50D4FF',\n    blue2: '#16C6FF',\n    blue3: '#00BEFC',\n    blue4: '#00A3D9',\n    red: '#FF4343',\n  },\n  fontSizes: {\n    xxl: '34px',\n    xl: '24px',\n    l: '17px',\n    xm: '14px',\n    m: '12px',\n    s: '11px',\n  },\n};\n","import { theme } from 'assets/styles/theme';\r\nimport { AuthProvider } from 'hooks/useAuth';\r\nimport { ReactNode } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport PatientProvider from './PatientContext';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from 'store/store';\r\n\r\nconst AppProviders = ({ children }: { children: ReactNode }) => {\r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n        <ThemeProvider theme={theme}>\r\n          <PatientProvider>\r\n            <AuthProvider>{children}</AuthProvider>\r\n          </PatientProvider>\r\n        </ThemeProvider>\r\n      </Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppProviders;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'pages/Root';\nimport AppProviders from 'contexts/AppProviders';\n\nasync function main() {\n  if (process.env.NODE_ENV === 'development') {\n    if (window.location.pathname === '/dietmaster') {\n      window.location.pathname = '/dietmaster/';\n      return;\n    }\n    const { worker } = require('./mocks/browser');\n    await worker.start({\n      serviceWorker: {\n        url: '/dietmaster/mockServiceWorker.js',\n      },\n    });\n  }\n  ReactDOM.render(\n    <React.StrictMode>\n      <AppProviders>\n        <Root />\n      </AppProviders>\n    </React.StrictMode>,\n    document.getElementById('root'),\n  );\n}\nmain();\n","import { rest } from 'msw';\r\n// import patients from '../data/patientsList';\r\nimport { db } from 'mocks/db';\r\n\r\nexport const patients = [\r\n  rest.get('/dietmaster', (req, res, ctx) => {\r\n    return res(ctx.status(200), ctx.json(db.patient.getAll()));\r\n  }),\r\n\r\n  rest.post('/dietmaster', (req, res, ctx) => {\r\n    const searchInList = db.patient.getAll().filter((patient) => {\r\n      return patient.name.toLowerCase().includes(`${req.body}`) || patient.surname.toLowerCase().includes(`${req.body}`);\r\n    });\r\n    return res(ctx.status(200), ctx.json(searchInList));\r\n  }),\r\n\r\n  rest.get('/dietmaster/patient/about/:id', (req, res, ctx) => {\r\n    if (req.params.id) {\r\n      const matchingPatient = db.patient.getAll().filter((patient) => patient.id === Number(req.params.id));\r\n      return res(ctx.status(200), ctx.json(matchingPatient));\r\n    }\r\n  }),\r\n\r\n  rest.post('/dietmaster/add', (req, res, ctx) => {\r\n    const patient = req.body;\r\n    db.patient.create(patient)\r\n    return res(ctx.status(200), ctx.json(patient));\r\n  }),\r\n  rest.put('/dietmaster/add', (req, res, ctx) => {\r\n    const updatedPatient = db.patient.update({\r\n      where: {\r\n        id: {\r\n          equals: req.body.id,\r\n        },\r\n      },\r\n      data: req.body,\r\n    })\r\n    console.log(updatedPatient)\r\n    return res(ctx.status(200), ctx.json(updatedPatient));\r\n  }),\r\n  rest.delete('/dietmaster', (req, res, ctx) => {\r\n    if (req.body) {\r\n      const removedPatient = db.patient.delete({\r\n        where: {\r\n          id: {\r\n            equals: req.body.id,\r\n          },\r\n        },\r\n      });\r\n      return res(\r\n        ctx.status(200),\r\n        ctx.json({\r\n          removedPatient,\r\n        }),\r\n      );\r\n    }\r\n  }),\r\n];\r\n","import { rest } from 'msw';\r\nimport { db } from 'mocks/db';\r\nimport { authenticateRequest } from 'mocks/helpers';\r\n\r\nconst sanitizeUser = (user) => {\r\n  const { password, ...rest } = user;\r\n  return rest;\r\n};\r\n\r\nexport const auth = [\r\n  rest.post('/dietmaster/login', (req, res, ctx) => {\r\n    const user = db.dietitian.findFirst({\r\n      where: {\r\n        login: {\r\n          equals: req.body.login,\r\n        },\r\n      },\r\n    });\r\n    if (user && user.password === req.body.password) {\r\n      const token = btoa(user.login);\r\n      localStorage.setItem('__be_token__', token);\r\n      return res(ctx.status(200), ctx.json({ ...sanitizeUser(user), token }));\r\n    }\r\n    return res(\r\n      ctx.status(403),\r\n      ctx.json({\r\n        error: 'Invalid user data',\r\n      })\r\n    );\r\n  }),\r\n  rest.get('/me', (req, res, ctx) => {\r\n    if (authenticateRequest(req)) {\r\n      const user = db.dietitian.getAll();\r\n      return res(ctx.status(200), ctx.json({ ...sanitizeUser(user) }));\r\n    }\r\n    return res(ctx.status(401));\r\n  }),\r\n];","export const authenticateRequest = (req: any) => {\r\n  const token = localStorage.getItem('__be_token__') || null;\r\n  const userToken = req.headers.get('Authorization')?.replace('Bearer ', '');\r\n\r\n  return token === userToken;\r\n};","import { patients } from './patients';\r\nimport { auth } from './auth';\r\n\r\nexport const handlers = [...patients, ...auth];","import { setupWorker } from 'msw';\r\nimport { handlers } from './handlers';\r\nimport { db } from './db';\r\n\r\nexport const worker = setupWorker(...handlers);\r\n\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.patient.create()\r\ndb.dietitian.create()\r\n"],"sourceRoot":""}